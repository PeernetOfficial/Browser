<Window x:Class="Peernet.Browser.WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:contexts="clr-namespace:Peernet.Browser.Application.Contexts;assembly=Application"
        xmlns:viewmodels="clr-namespace:Peernet.Browser.Application.ViewModels;assembly=Application"
        xmlns:controls="clr-namespace:Peernet.Browser.WPF.Controls"
        xmlns:views="clr-namespace:Peernet.Browser.WPF.Views"
        Height="900" Width="1441" WindowStartupLocation="CenterScreen"
        Background="{DynamicResource MainBackgroundBrush}"
        x:Name="Main"
        PreviewDrop="FileUpload_OnDrop"
        AllowDrop="True"
        PreviewMouseDown="MainWindow_OnMouseDown">
    <WindowChrome.WindowChrome>
        <WindowChrome ResizeBorderThickness="5" GlassFrameThickness="0" CaptionHeight="0" CornerRadius="0" />
    </WindowChrome.WindowChrome>
    <Window.Resources>
        <ResourceDictionary>
            <Style x:Key="HomeViewStyle" TargetType="{x:Type UserControl}">
                <Setter Property="Visibility" Value="Hidden" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding CurrentViewModel}" Value="{x:Type viewmodels:HomeViewModel}">
                        <Setter Property="Visibility" Value="Visible" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Border Panel.ZIndex="3" Grid.RowSpan="2" BorderThickness="0" BorderBrush="Transparent"
                        CornerRadius="{StaticResource Main2Radius}">
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="#000000" Opacity="0.3" />
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding CurrentModalViewModel}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>

        <controls:ButtonsControl Grid.Row="0" />
        <Button Panel.ZIndex="1"
                        Grid.Row="0"
                        Grid.RowSpan="2"
                        Visibility="{Binding Path=(contexts:GlobalContext.IsLogoVisible), Converter={StaticResource BoolToVisibility}}"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        Margin="49, 10, 0, 0"
                        Height="92" Width="70"
                        Padding="20"
                        Style="{DynamicResource ButtonBaseStyle}"
                        Click="ButtonBase_OnClick">
            <Button.Background>
                <ImageBrush ImageSource="{DynamicResource LogoAbbreviationDrawingImage}" />
            </Button.Background>
        </Button>
        <controls:FooterControl Grid.Row="2" DockPanel.Dock="Bottom" Panel.ZIndex="2" IsEnabled="{Binding Path=(contexts:GlobalContext.IsConnected)}" />
        <Border Panel.ZIndex="3" Visibility="{Binding IsModalOpened, Converter={StaticResource BoolToVisibility}}" Grid.Row="1" Grid.RowSpan="2">
            <ContentControl Content="{Binding CurrentModalViewModel}" />
        </Border>
        <controls:TabControlEx Background="Transparent" BorderThickness="0" Margin="0 12 0 0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="1" SelectedIndex="0" Grid.RowSpan="3" Visibility="{Binding Path=(contexts:GlobalContext.IsConnected), Converter={StaticResource BoolToVisibility}}">
            <controls:TabControlEx.Resources>
                <Style x:Key="HeaderStyle" TargetType="{x:Type Border}">
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="Width" Value="26" />
                    <Setter Property="Height" Value="26" />
                </Style>
                <Style x:Key="OuterBorder" TargetType="{x:Type Border}">
                    <Setter Property="Padding" Value="17" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Cursor" Value="Hand" />
                    <Setter Property="Margin" Value="0 0 39 0" />
                    <Setter Property="ToolTipService.BetweenShowDelay" Value="0" />
                    <Setter Property="ToolTipService.InitialShowDelay" Value="0" />
                </Style>
            </controls:TabControlEx.Resources>
            <TabItem Name="HomeTab" DataContext="{Binding HomeViewModel}" Style="{StaticResource NavBarTabItem}">
                <views:HomeView />
                <TabItem.Header>
                    <Border ToolTip="Home" Style="{StaticResource OuterBorder}">
                        <Border>
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource HeaderStyle}">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <ImageBrush ImageSource="{StaticResource HomeDrawingImage}" />
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsSelected, ElementName=HomeTab}" Value="True">
                                            <Setter Property="Background">
                                                <Setter.Value>
                                                    <ImageBrush ImageSource="{StaticResource Home_FocusedDrawingImage}" />
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=HomeTab}" Value="True">
                                            <Setter Property="Background">
                                                <Setter.Value>
                                                    <ImageBrush ImageSource="{StaticResource Home_FocusedDrawingImage}" />
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                    </Border>
                </TabItem.Header>
            </TabItem>
            <TabItem Name="ExploreTab" DataContext="{Binding ExploreViewModel}" Style="{StaticResource NavBarTabItem}">
                <views:ExploreView />
                <TabItem.Header>
                    <Border ToolTip="Explore" Style="{StaticResource OuterBorder}">
                        <Border>
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource HeaderStyle}">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <ImageBrush ImageSource="{StaticResource ExploreDrawingImage}" />
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsSelected, ElementName=ExploreTab}" Value="True">
                                            <Setter Property="Background">
                                                <Setter.Value>
                                                    <ImageBrush ImageSource="{StaticResource Explore_FocusedDrawingImage}" />
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=ExploreTab}" Value="True">
                                            <Setter Property="Background">
                                                <Setter.Value>
                                                    <ImageBrush ImageSource="{StaticResource Explore_FocusedDrawingImage}" />
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                    </Border>
                </TabItem.Header>
            </TabItem>
            <TabItem Name="DirectoryTab" DataContext="{Binding DirectoryViewModel}" Style="{StaticResource NavBarTabItem}">
                <views:DirectoryView />
                <TabItem.Header>
                    <Border ToolTip="Directory" Style="{StaticResource OuterBorder}">
                        <Border>
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource HeaderStyle}">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <ImageBrush ImageSource="{StaticResource DirectoryDrawingImage}" />
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsSelected, ElementName=DirectoryTab}" Value="True">
                                            <Setter Property="Background">
                                                <Setter.Value>
                                                    <ImageBrush ImageSource="{StaticResource Directory_FocusedDrawingImage}" />
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=DirectoryTab}" Value="True">
                                            <Setter Property="Background">
                                                <Setter.Value>
                                                    <ImageBrush ImageSource="{StaticResource Directory_FocusedDrawingImage}" />
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                    </Border>
                </TabItem.Header>
            </TabItem>
            <TabItem Name="AboutTab" DataContext="{Binding AboutViewModel}" Style="{StaticResource NavBarTabItem}">
                <views:AboutView />
                <TabItem.Header>
                    <Button x:Name="AccountPopupToggle" Style="{DynamicResource UserNavBarButtonStyle}" Command="{Binding DataContext.NavBar.OpenCloseProfileMenuCommand, ElementName=Main}" ToolTip="User" />
                </TabItem.Header>
            </TabItem>
        </controls:TabControlEx>
        <controls:ProfileMenuControl Panel.ZIndex="2" Grid.Row="1" HorizontalAlignment="Right" Visibility="{Binding Path=(contexts:GlobalContext.IsProfileMenuVisible), Converter={StaticResource BoolToVisibility}}" VerticalAlignment="Top" Margin="0, 70, 0, 0" Height="170" />
        <TextBlock Text="{Binding Path=(contexts:GlobalContext.ErrorMessage), UpdateSourceTrigger=PropertyChanged}" Foreground="{DynamicResource MainTextBrush}" Panel.ZIndex="2" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1" TextAlignment="Center">
            <TextBlock.Style>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Visibility" Value="Visible" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=(contexts:GlobalContext.IsConnected)}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <ItemsControl ItemsSource="{Binding Notifications}" VerticalAlignment="Bottom" Margin="0, 0, 0, 122" Panel.ZIndex="2" Grid.RowSpan="2">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <controls:NotificationControl Notification="{Binding }" />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </Grid>
</Window>