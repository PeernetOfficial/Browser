<UserControl x:Class="Peernet.Browser.WPF.Controls.NotificationControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:foot="clr-namespace:Peernet.SDK.Models.Presentation.Footer;assembly=Peernet.SDK"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800"
             UseLayoutRounding="True" SnapsToDevicePixels="True"
             x:Name="notificationControl">
    <UserControl.Resources>
        <SolidColorBrush x:Key="Expander.Static.Arrow.Stroke" Color="#FF333333" />
    </UserControl.Resources>
    <Border HorizontalAlignment="Center" BorderThickness="1" BorderBrush="{DynamicResource BorderBrush}">
        <Border.Effect>
            <DropShadowEffect Color="Black" Opacity="0.11" ShadowDepth="1" BlurRadius="21" />
        </Border.Effect>
        <StackPanel Width="600">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" x:Name="Header" Background="Transparent" PreviewMouseDown="Header_Clicked" Orientation="Horizontal">
                    <Grid x:Name="ToggleButton" Margin="4 0">
                        <Ellipse x:Name="circle" HorizontalAlignment="Center" Height="19" VerticalAlignment="Center" Width="19" />
                        <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" StrokeThickness="2" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" VerticalAlignment="Center" />
                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Notification.Details, ElementName=notificationControl}" Value="">
                                        <Setter Property="Visibility" Value="Hidden" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=Details, Path=Visibility}" Value="Visible">
                                        <Setter Property="LayoutTransform">
                                            <Setter.Value>
                                                <TransformGroup>
                                                    <TransformGroup.Children>
                                                        <TransformCollection>
                                                            <RotateTransform Angle="180" />
                                                        </TransformCollection>
                                                    </TransformGroup.Children>
                                                </TransformGroup>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                    </Grid>
                    <TextBlock TextWrapping="Wrap" Text="{Binding Path=Notification.Message, ElementName=notificationControl}" Style="{StaticResource Active}" VerticalAlignment="Center" Width="520" />
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=Notification.Details, ElementName=notificationControl}" Value="">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                </StackPanel>
                <Button Grid.Column="1" Click="RemoveNotification" Cursor="Hand" HorizontalAlignment="Right" Style="{StaticResource CloseButtonStyle}" DockPanel.Dock="Right" />
            </Grid>

            <Border x:Name="Details" BorderBrush="{DynamicResource BorderBrush}" Margin="-1" BorderThickness="1" Background="{DynamicResource LightGray4Brush}" Visibility="Collapsed">
                <ScrollViewer MaxHeight="170" Margin="0, 0, 10, 0">
                    <TextBox FontFamily="Courier New"
                             IsReadOnly="True"
                             Padding="10"
                             TextWrapping="Wrap"
                             Text="{Binding Path=Notification.Details, ElementName=notificationControl}"
                             HorizontalAlignment="Left"
                             VerticalAlignment="Center"
                             Foreground="Black"
                             Background="Transparent"
                             BorderThickness="0" />
                </ScrollViewer>
            </Border>
        </StackPanel>
        <Border.Style>
            <Style TargetType="{x:Type Border}">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource ModalBackground}" />
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Severity}" Value="{x:Static foot:Severity.Error}">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="#f75454" />
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
    </Border>
</UserControl>