<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:presentationModels="clr-namespace:Peernet.SDK.Models.Presentation;assembly=Peernet.SDK"
                    xmlns:download="clr-namespace:Peernet.SDK.Models.Domain.Download;assembly=Peernet.SDK"
                    xmlns:converters="clr-namespace:Peernet.Browser.WPF.Converters">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Fonts.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <converters:DataTypeConverter x:Key="DataTypeConverter" />

    <Style x:Key="CaptionButtonStyle" TargetType="Button">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="LayoutRoot" Background="Transparent" Width="44" Height="40">
                        <TextBlock x:Name="txt"
                                   Text="{TemplateBinding Content}"
                                   FontFamily="Segoe MDL2 Assets"
                                   FontSize="10"
                                   Opacity="0.8956"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Foreground="{DynamicResource MainTextBrush}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="#60FFFFFF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PauseResumeButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource CaptionButtonStyle}">
        <Setter Property="Content" Value="&#xE769;" />
        <Setter Property="Command" Value="{Binding DataContext.Footer.PauseDownloadCommand, ElementName=Footer}" />
        <Setter Property="BorderThickness" Value="5" />
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ., Converter={StaticResource DataTypeConverter}}" Value="{x:Type presentationModels:Download}" />
                    <Condition Binding="{Binding Status}" Value="{x:Static download:DownloadStatus.DownloadPause}" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Content" Value="&#xE768;" />
                <Setter Property="Command" Value="{Binding DataContext.Footer.ResumeDownloadCommand, ElementName=Footer}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PauseButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
        <Setter Property="Content" Value="&#xE769;" />
    </Style>

    <Style x:Key="ResumeButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
        <Setter Property="Content" Value="&#xE768;" />
    </Style>

    <Style x:Key="MinimizeButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
        <Setter Property="Content" Value="&#xE949;" />
    </Style>

    <Style x:Key="MaximizeButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
        <Setter Property="Content" Value="&#xE739;" />
    </Style>

    <Style x:Key="RestoreButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
        <Setter Property="Content" Value="&#xE923;" />
    </Style>

    <Style x:Key="CloseButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
        <Setter Property="Content" Value="&#xE106;" />
    </Style>

    <ImageBrush x:Key="UploadHover" ImageSource="{DynamicResource Upload_HoverDrawingImage}" />

    <Style x:Key="UploadButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="52" />
        <Setter Property="Height" Value="52" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource UploadHover}" />
                            <Setter Property="Width" Value="138" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LinkButton" TargetType="Button">
        <Setter Property="Foreground" Value="{DynamicResource MainContentBrush}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock TextDecorations="Underline">
                        <ContentPresenter />
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PrimaryButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock Height="Auto" TextAlignment="Center" VerticalAlignment="Center" Cursor="Hand" Foreground="{DynamicResource MainContentBrush}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter />
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AcceptButton" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Height="Auto" Cursor="Hand" Grid.Row="1" Grid.Column="1" BorderThickness="0" BorderBrush="Transparent" CornerRadius="{DynamicResource MainRadius}">
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource MainContentSecondaryBrush}">
                            <ContentPresenter />
                        </TextBlock>
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource MainContentColor}" />
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="{DynamicResource DarkGrayBrush}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>