<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:contexts="clr-namespace:Peernet.Browser.Application.Contexts;assembly=Peernet.Browser.Application">

    <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD" />
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070" />
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD" />
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6" />
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />
    <SolidColorBrush x:Key="ToolTip.Static.Background" Color="#FFFFFF" Opacity="0.7" />

    <Style x:Key="ButtonBaseStyle" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0 0 73 0" />
        <Setter Property="ToolTipService.InitialShowDelay" Value="300" />
        <Setter Property="Width" Value="24" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true" />
                        <Trigger Property="IsPressed" Value="true" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ImageBrush x:Key="DirectoryTabImageBrush" ImageSource="{DynamicResource DirectoryDrawingImage}" />
    <ImageBrush x:Key="FocusedDirectoryTabImageBrush" ImageSource="{DynamicResource Directory_FocusedDrawingImage}" />

    <Style x:Key="DirectoryNavBarButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Background" Value="{StaticResource DirectoryTabImageBrush}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(contexts:GlobalContext.CurrentViewModel)}" Value="DirectoryViewModel">
                <Setter Property="Background" Value="{StaticResource FocusedDirectoryTabImageBrush}" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource FocusedDirectoryTabImageBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ImageBrush x:Key="HomeTabImageBrush" ImageSource="{DynamicResource HomeDrawingImage}" />
    <ImageBrush x:Key="FocusedHomeTabImageBrush" ImageSource="{DynamicResource Home_FocusedDrawingImage}" />

    <Style x:Key="HomeNavBarButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Background" Value="{StaticResource HomeTabImageBrush}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(contexts:GlobalContext.CurrentViewModel)}" Value="HomeViewModel">
                <Setter Property="Background" Value="{StaticResource FocusedHomeTabImageBrush}" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource FocusedHomeTabImageBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ImageBrush x:Key="UserTabImageBrush" ImageSource="{DynamicResource UserDrawingImage}" />
    <ImageBrush x:Key="FocusedUserTabImageBrush" ImageSource="{DynamicResource User_FocusedDrawingImage}" />

    <Style x:Key="UserNavBarButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Background" Value="{StaticResource UserTabImageBrush}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(contexts:GlobalContext.IsProfileMenuVisible)}" Value="True">
                <Setter Property="Background" Value="{StaticResource FocusedUserTabImageBrush}" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource FocusedUserTabImageBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ImageBrush x:Key="ExploreTabImageBrush" ImageSource="{DynamicResource ExploreDrawingImage}" />
    <ImageBrush x:Key="FocusedExploreTabImageBrush" ImageSource="{DynamicResource Explore_FocusedDrawingImage}" />

    <Style x:Key="ExploreNavBarButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Background" Value="{StaticResource ExploreTabImageBrush}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(contexts:GlobalContext.CurrentViewModel)}" Value="ExploreViewModel">
                <Setter Property="Background" Value="{StaticResource FocusedExploreTabImageBrush}" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource FocusedExploreTabImageBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="FontFamily" Value="Inter" />
        <Setter Property="Foreground" Value="{DynamicResource MainTextBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <Border Margin="15" CornerRadius="1" Padding="10, 2, 10, 2" Background="{DynamicResource SelectedTabSecondaryBrush}" BorderBrush="{DynamicResource BorderBrush}">
                        <Border.Effect>
                            <DropShadowEffect Color="Black" Opacity="0.27" ShadowDepth="0" BlurRadius="25" />
                        </Border.Effect>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavbarMenuButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="Inter" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Height" Value="17" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource MainTextBrush}" />
        <Setter Property="Margin" Value="20,10,0,10" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridActionButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Margin" Value="20,0,20,0" />
    </Style>

    <Style x:Key="TreeViewNavigationPathButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource MainTextColor}" Opacity="0.89" />
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}" />
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>