<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxsch="http://schemas.devexpress.com/winfx/2008/xaml/scheduler"
                    xmlns:dxschcore="clr-namespace:DevExpress.XtraScheduler;assembly=DevExpress.XtraScheduler.v22.1.Core"
                    xmlns:dxschi="http://schemas.devexpress.com/winfx/2008/xaml/scheduler/internal"
                    xmlns:dxscht="http://schemas.devexpress.com/winfx/2008/xaml/scheduler/themekeys"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--BEGIN TOSLONLY REPLACE 'DockPanel'dx:DockPanel'-->

    <!--BEGIN WPF-->

    <ResourceDictionary.MergedDictionaries>
        <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2019White.v22.1;component/Core/Core/Themes/TransferStyles.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--END WPF-->

    <ControlTemplate x:Key="{dxscht:SchedulerControlThemeKey ResourceKey=Template}" TargetType="{x:Type dxsch:SchedulerControl}">
        <!--BEGIN WPF-->
        <AdornerDecorator>
            <!--END WPF-->
            <dxschi:SchedulerControlBorder x:Name="PART_ThemesLoader"
                                           HorizontalContentAlignment="Stretch"
                                           InvisibleBorderTemplate="{DynamicResource {dxscht:SchedulerControlThemeKey ResourceKey=InvisibleBorderTemplate}}"
                                           ShowBorder="{TemplateBinding ShowBorder}"
                                           SnapsToDevicePixels="True"
                                           UseLayoutRounding="True"
                                           VerticalContentAlignment="Stretch"
                                           VisibleBorderTemplate="{DynamicResource {dxscht:SchedulerControlThemeKey ResourceKey=BorderTemplate}}">
                <dx:DXArranger SnapsToDevicePixels="True">
                    <Grid>
                        <!--ONLY SL
                        <StackPanel x:Name="viewsRepository">
                            <dxschi:ViewRepositoryItemsControl ItemsSource="{Binding Views.XpfViews, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                            </dxschi:ViewRepositoryItemsControl>
                        </StackPanel>
                        ONLY SL-->
                        <dx:XPFContentControl Content="{Binding ActiveView.VisualViewInfo, RelativeSource={RelativeSource TemplatedParent}}"
                                              HorizontalAlignment="Stretch"
                                              Style="{DynamicResource {dxscht:SchedulerControlThemeKey ResourceKey=SchedulerRoot}}"
                                              VerticalAlignment="Stretch">
                            <!--ONLY SL
                            <dx:XPFContentControl.Template>
                                <ControlTemplate>
                                    <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                </ControlTemplate>
                            </dx:XPFContentControl.Template>
                            ONLY SL-->
                        </dx:XPFContentControl>
                    </Grid>
                </dx:DXArranger>
            </dxschi:SchedulerControlBorder>
            <!--BEGIN WPF-->
        </AdornerDecorator>
        <!--END WPF-->
    </ControlTemplate>

    <!--END TOSLONLY REPLACE 'DockPanel'dx:DockPanel'-->

</ResourceDictionary>