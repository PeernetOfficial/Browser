<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.Native.BadgeControl}" TargetType="{x:Type dxi:BadgeControl}">
        <Setter Property="Padding" Value="{DynamicResource {dxt:BadgesThemeKey ResourceKey=Padding}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxi:BadgeControl}">
                    <dxi:BadgeBorder x:Name="PART_Border"
                                     Background="{TemplateBinding Background}"
                                     BorderBrush="{TemplateBinding BorderBrush}"
                                     BorderThickness="{TemplateBinding BorderThickness}"
                                     CornerRadius="{Binding Path=CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={dxi:NullableCornerRadiusConverter}}"
                                     Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Badge.Height}"
                                     Margin="{TemplateBinding Margin}"
                                     MaxHeight="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Badge.MaxHeight}"
                                     MaxWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Badge.MaxWidth}"
                                     MinHeight="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Badge.MinHeight}"
                                     MinWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Badge.MinWidth}"
                                     Padding="{TemplateBinding Padding}"
                                     Shape="{TemplateBinding Shape}"
                                     Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Badge.Width}">
                        <dxi:BadgeContentPresenter ContentFormatProvider="{TemplateBinding ContentFormatProvider}"
                                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </dxi:BadgeBorder>
                    <ControlTemplate.Triggers>
                        <Trigger Property="CornerRadius" Value="{x:Null}">
                            <Setter Property="IgnoreCornerRadius"
                                    TargetName="PART_Border"
                                    Value="True"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="{DynamicResource {dxt:BadgesThemeKey ResourceKey=TouchPadding}}"/>
            </Trigger>
            <Trigger Property="Kind" Value="Error">
                <Setter Property="Background" Value="{DynamicResource {dxt:BadgesThemeKey ResourceKey=ErrorBackground}}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource {dxt:BadgesThemeKey ResourceKey=ErrorBorderBrush}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {dxt:BadgesThemeKey ResourceKey=ErrorForeground}}"/>
                <Setter Property="BorderThickness" Value="{DynamicResource {dxt:BadgesThemeKey ResourceKey=ErrorBorderThickness}}"/>
            </Trigger>
            <Trigger Property="Kind" Value="Warning">
                <Setter Property="Background" Value="{DynamicResource {dxt:BadgesThemeKey ResourceKey=WarningBackground}}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource {dxt:BadgesThemeKey ResourceKey=WarningBorderBrush}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {dxt:BadgesThemeKey ResourceKey=WarningForeground}}"/>
                <Setter Property="BorderThickness" Value="{DynamicResource {dxt:BadgesThemeKey ResourceKey=WarningBorderThickness}}"/>
            </Trigger>
            <Trigger Property="Kind" Value="Success">
                <Setter Property="Background" Value="{DynamicResource {dxt:BadgesThemeKey ResourceKey=SuccessBackground}}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource {dxt:BadgesThemeKey ResourceKey=SuccessBorderBrush}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {dxt:BadgesThemeKey ResourceKey=SuccessForeground}}"/>
                <Setter Property="BorderThickness" Value="{DynamicResource {dxt:BadgesThemeKey ResourceKey=SuccessBorderThickness}}"/>
            </Trigger>
            <Trigger Property="Kind" Value="Information">
                <Setter Property="Background" Value="{DynamicResource {dxt:BadgesThemeKey ResourceKey=InformationBackground}}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource {dxt:BadgesThemeKey ResourceKey=InformationBorderBrush}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {dxt:BadgesThemeKey ResourceKey=InformationForeground}}"/>
                <Setter Property="BorderThickness" Value="{DynamicResource {dxt:BadgesThemeKey ResourceKey=InformationBorderThickness}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>