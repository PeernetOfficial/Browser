<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
                    xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
                    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
                    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <dx:BoolToVisibilityInverseConverter x:Key="inverseBoolToVisibilityConverter"/>

    <dx:BoolToVisibilityConverter x:Key="boolToVisibilityConverter"/>

    <dx:EmbeddedResourceImageConverter x:Key="EmbeddedResourceImageConverter"/>

    <SolidColorBrush x:Key="ImageEditToolSeparatorBackground" Color="#FFDADADA"/>

    <sys:Double x:Key="{dxet:CameraControlThemeKey ResourceKey=SettingsMinWidth}">280</sys:Double>

    <SolidColorBrush x:Key="{dxet:ImageEditThemeKey ResourceKey=InplaceMenuBackgroundBrush}" Color="#FF404040"/>

    <ControlTemplate x:Key="{dxet:CameraControlThemeKey ResourceKey=TakePictureControlTemplate}" TargetType="{x:Type dxei:TakePictureControl}">
        <Grid Margin="15">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <dxe:CameraControl x:Name="PART_Camera" Visibility="{Binding HasCapture, Converter={StaticResource inverseBoolToVisibilityConverter}}"/>
            <Image Source="{Binding Image}" Visibility="{Binding HasCapture, Converter={StaticResource boolToVisibilityConverter}}"/>
            <StackPanel Grid.Row="1"
                        HorizontalAlignment="Right"
                        Margin="0,10,0,0"
                        Orientation="Horizontal">
                <Button Command="{Binding CaptureCommand}"
                        Content="{Binding CaptureCaption}"
                        Margin="0,0,10,0"
                        Width="100"/>
                <Button Command="{Binding SaveCommand}"
                        Content="{Binding SaveCaption}"
                        IsEnabled="{Binding HasCapture}"
                        Margin="0,0,10,0"
                        Width="75"/>
                <Button Command="{Binding CancelCommand}"
                        Content="{Binding CancelCaption}"
                        Width="75"/>
            </StackPanel>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:CameraControlThemeKey ResourceKey=Template}" TargetType="{x:Type dxe:CameraControl}">
        <ContentControl x:Name="contentControl"
                        Background="{TemplateBinding Background}"
                        dx:FocusHelper2.Focusable="False"
                        Template="{TemplateBinding BorderTemplate}">
            <Grid Background="Transparent" cs:id="Grid_0000">
                <Image x:Name="PART_Image"
                       Source="{Binding NativeImageSource, RelativeSource={RelativeSource TemplatedParent}}"
                       Stretch="{TemplateBinding Stretch}"
                       StretchDirection="{TemplateBinding StretchDirection}"/>
                <ToggleButton x:Name="button"
                              Opacity="0"
                              Style="{DynamicResource {dxet:CameraControlThemeKey ResourceKey=SettingsButtonStyle}}"
                              Visibility="{Binding PropertyProvider.IsSettingsButtonVisible, Converter={StaticResource boolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
                <dxe:FlyoutControl AllowMoveAnimation="False"
                                   HorizontalAlignment="Right"
                                   IsOpen="{Binding ElementName=button, Path=IsChecked, Mode=TwoWay}"
                                   PlacementTarget="{Binding ElementName=contentControl}"
                                   VerticalAlignment="Top">
                    <dxe:FlyoutControl.Settings>
                        <dxe:FlyoutSettings Placement="Right"/>
                    </dxe:FlyoutControl.Settings>
                    <ContentPresenter Content="{Binding Path=PropertyProvider.Settings, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{DynamicResource {dxet:CameraControlThemeKey ResourceKey=CameraSettingsTemplate}}"/>
                </dxe:FlyoutControl>
                <StackPanel Orientation="Vertical"
                            VerticalAlignment="Center"
                            Visibility="{Binding PropertyProvider.IsBusy, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
                    <Image Height="14"
                           HorizontalAlignment="Center"
                           Source="{dx:ImageSelector Source='pack://application:,,,/DevExpress.Xpf.Core.v22.1;component/Editors/Images/error.png'}"
                           Stretch="Fill"
                           Width="14"/>
                    <TextBlock HorizontalAlignment="Center"
                               Text="{Binding PropertyProvider.ErrorCaption, RelativeSource={RelativeSource TemplatedParent}}"
                               TextWrapping="Wrap"/>
                    <Button Command="{Binding PropertyProvider.RefreshCommand, RelativeSource={RelativeSource TemplatedParent}}"
                            Content="{Binding PropertyProvider.RefreshButtonCaption, RelativeSource={RelativeSource TemplatedParent}}"
                            HorizontalAlignment="Center"
                            Margin="0,5,0,0"/>
                </StackPanel>
                <StackPanel Orientation="Vertical"
                            VerticalAlignment="Center"
                            Visibility="{Binding PropertyProvider.HasDevices, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource inverseBoolToVisibilityConverter}}">
                    <Image Height="14"
                           HorizontalAlignment="Center"
                           Source="{dx:ImageSelector Source='pack://application:,,,/DevExpress.Xpf.Core.v22.1;component/Editors/Images/error.png'}"
                           Stretch="Fill"
                           Width="14"/>
                    <TextBlock HorizontalAlignment="Center"
                               Text="{Binding PropertyProvider.NoDevicesErrorCaption, RelativeSource={RelativeSource TemplatedParent}}"
                               TextWrapping="Wrap"/>
                    <Button Command="{Binding PropertyProvider.RefreshCommand, RelativeSource={RelativeSource TemplatedParent}}"
                            Content="{Binding PropertyProvider.RefreshButtonCaption, RelativeSource={RelativeSource TemplatedParent}}"
                            HorizontalAlignment="Center"
                            Margin="0,5,0,0"/>
                </StackPanel>
            </Grid>
        </ContentControl>
        <ControlTemplate.Triggers>
            <Trigger Property="ShowBorder" Value="False">
                <Setter Property="Template"
                        TargetName="contentControl"
                        Value="{DynamicResource {dxet:CameraControlThemeKey ResourceKey=EmptyBorderTemplate}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.21"
                                             Storyboard.TargetName="button"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.21"
                                             Storyboard.TargetName="button"
                                             Storyboard.TargetProperty="Opacity"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <DataTemplate x:Key="{dxet:CameraControlThemeKey ResourceKey=CameraSettingsTemplate}">
        <Grid>
            <GroupBox Header="{Binding SettingsCaption}"
                      Margin="5"
                      MinWidth="{DynamicResource {dxet:CameraControlThemeKey ResourceKey=SettingsMinWidth}}">
                <StackPanel Margin="10" Orientation="Vertical">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3*"/>
                            <ColumnDefinition Width="7*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{Binding Device.Caption}"/>
                        <dxe:ComboBoxEdit AllowNullInput="True"
                                          DisplayMember="Name"
                                          EditValue="{Binding ActualDevice, UpdateSourceTrigger=PropertyChanged}"
                                          EditValuePostMode="Immediate"
                                          Grid.Column="1"
                                          IsTextEditable="False"
                                          ItemsSource="{Binding Device.AvaliableValues}"
                                          ShowCustomItems="True"/>
                    </Grid>
                    <StackPanel IsEnabled="{Binding EnableSettings}" Orientation="Vertical">
                        <Grid IsEnabled="{Binding IsResolutionEnabled}" Margin="0,10,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="3*"/>
                                <ColumnDefinition Width="7*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding Resolution.Caption}"/>
                            <dxe:ComboBoxEdit DisplayMember="DisplayText"
                                              EditValue="{Binding ActualResolution, UpdateSourceTrigger=PropertyChanged}"
                                              EditValuePostMode="Immediate"
                                              Grid.Column="1"
                                              IsTextEditable="False"
                                              ItemsSource="{Binding Resolution.AvaliableValues}"
                                              ValidateOnTextInput="True"
                                              ValueMember="Resolution"/>
                        </Grid>
                        <Grid IsEnabled="{Binding IsBrightnessEnabled}" Margin="0,10,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="3*"/>
                                <ColumnDefinition Width="7*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding Brightness.Caption}"/>
                            <dxe:TrackBarEdit EditValue="{Binding ActualBrightness, UpdateSourceTrigger=PropertyChanged}"
                                              Grid.Column="1"
                                              LargeStep="10"
                                              Maximum="{Binding Brightness.MaxValue}"
                                              Minimum="{Binding Brightness.MinValue}"
                                              SmallStep="1"
                                              TickPlacement="None"/>
                        </Grid>
                        <Grid IsEnabled="{Binding IsContastEnabled}" Margin="0,10,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="3*"/>
                                <ColumnDefinition Width="7*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding Contrast.Caption}"/>
                            <dxe:TrackBarEdit EditValue="{Binding ActualContrast, UpdateSourceTrigger=PropertyChanged}"
                                              Grid.Column="1"
                                              LargeStep="10"
                                              Maximum="{Binding Contrast.MaxValue}"
                                              Minimum="{Binding Contrast.MinValue}"
                                              SmallStep="1"
                                              TickPlacement="None"/>
                        </Grid>
                        <Grid IsEnabled="{Binding IsDesaturateEnabled}" Margin="0,10,0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="3*"/>
                                <ColumnDefinition Width="7*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding Desaturate.Caption}"/>
                            <dxe:CheckEdit EditValue="{Binding CanDesaturate, UpdateSourceTrigger=PropertyChanged}"
                                           Grid.Column="1"
                                           HorizontalAlignment="Center"/>
                        </Grid>
                        <Button Command="{Binding ResetToDefaultCommand}"
                                Content="{Binding Reset.Caption}"
                                IsEnabled="{Binding IsResetEnabled}"/>
                    </StackPanel>
                </StackPanel>
            </GroupBox>
        </Grid>
    </DataTemplate>

    <Style x:Key="{dxet:CameraControlThemeKey ResourceKey=SettingsButtonStyle}" TargetType="{x:Type ToggleButton}">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="grid"
                          Background="Transparent"
                          Opacity="0.5"
                          cs:id="Grid_0000">
                        <Image HorizontalAlignment="Center"
                               Source="{Binding Source=DevExpress.Xpf.Core.Editors.Images.camerasettings.png, Converter={StaticResource EmbeddedResourceImageConverter}}"
                               Stretch="None"
                               VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.21"
                                                         Storyboard.TargetName="grid"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.21"
                                                         Storyboard.TargetName="grid"
                                                         Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="{dxet:ImageEditThemeKey ResourceKey=Template}" TargetType="{x:Type dxe:ImageEdit}">
        <Grid x:Name="PART_Root">
            <ContentControl x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            dx:FocusHelper2.Focusable="False"
                            dxei:ControlHelper.IsReadOnly="{TemplateBinding IsReadOnly}"
                            dxei:ControlHelper.ShowFocusedState="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource TemplatedParent}}"
                            dxi:AppearanceOptions.BorderThickness="{Binding Path=(dxi:AppearanceOptions.BorderThickness), RelativeSource={RelativeSource TemplatedParent}}"
                            dxi:AppearanceOptions.CornerRadius="{Binding Path=(dxi:AppearanceOptions.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                            dxi:AppearanceOptions.HasBorderThickness="{Binding Path=(dxi:AppearanceOptions.HasBorderThickness), RelativeSource={RelativeSource TemplatedParent}}"
                            dxi:AppearanceOptions.HasCornerRadius="{Binding Path=(dxi:AppearanceOptions.HasCornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                            HorizontalContentAlignment="Stretch"
                            Template="{TemplateBinding ActualBorderTemplate}"
                            VerticalContentAlignment="Stretch">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <dxe:ErrorControl x:Name="PART_ErrorPresenter" Grid.Column="0"/>
                    <dxe:EditorControl x:Name="PART_Content"
                                       Foreground="{TemplateBinding Foreground}"
                                       Grid.Column="1"
                                       Padding="{TemplateBinding Padding}"
                                       Template="{TemplateBinding ActualEditorControlTemplate}"/>
                </Grid>
            </ContentControl>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:ImageEditThemeKey ResourceKey=MenuTemplate}" TargetType="{x:Type ContentControl}">
        <StackPanel x:Name="PART_MenuContent" Orientation="Horizontal">
            <!--BEGIN WPF-->
            <dxe:ImageEditCutToolButton/>
            <dxe:ImageEditCopyToolButton/>
            <dxe:ImageEditPasteToolButton/>
            <dxe:ImageEditClearToolButton/>
            <dxe:ImageEditToolSeparator/>
            <dxe:ImageEditLoadToolButton/>
            <dxe:ImageEditSaveToolButton/>
            <dxe:ImageEditTakePictureButton/>
            <!--END WPF-->
            <!--ONLY SL
                <dxe:ImageEditClearToolButton />
                <dxe:ImageEditLoadToolButton />
                ONLY SL-->
        </StackPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:PopupImageEditThemeKey ResourceKey=MenuTemplate}" TargetType="{x:Type ContentControl}">
        <StackPanel x:Name="PART_MenuContent" Orientation="Horizontal">
            <!--BEGIN WPF-->
            <dxe:ImageEditCutToolButton/>
            <dxe:ImageEditCopyToolButton/>
            <dxe:ImageEditPasteToolButton/>
            <dxe:ImageEditClearToolButton/>
            <dxe:ImageEditToolSeparator/>
            <dxe:ImageEditLoadToolButton/>
            <dxe:ImageEditSaveToolButton/>
            <dxe:ImageEditTakePictureButton/>
            <!--END WPF-->
            <!--ONLY SL
            <dxe:ImageEditClearToolButton />
            <dxe:ImageEditLoadToolButton />
            ONLY SL-->
            <dxe:ImageEditToolSeparator/>
            <dxe:PopupImageEditOKToolButton/>
            <dxe:PopupImageEditCancelToolButton/>
        </StackPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:PopupImageEditThemeKey ResourceKey=PopupContentTemplate}" TargetType="{x:Type ContentControl}">
        <Grid SnapsToDevicePixels="True">
            <dxe:ImageEdit x:Name="PART_PopupContent"
                           Effect="{Binding Path=Tag.ImageEffect, RelativeSource={RelativeSource TemplatedParent}}"
                           Foreground="{Binding Path=Tag.Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                           HorizontalAlignment="Stretch"
                           ShowBorder="False"
                           Stretch="{Binding Path=Tag.Stretch, RelativeSource={RelativeSource TemplatedParent}}"
                           VerticalAlignment="Stretch"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:ImageEditThemeKey ResourceKey=EditTemplate}">
        <Grid x:Name="PART_Container"
              Background="Transparent"
              Margin="{TemplateBinding Padding}"
              Style="{DynamicResource {dxet:ImageEditThemeKey ResourceKey=ContentStyle}}"
              cs:id="Grid_0000">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Image x:Name="PART_Editor"
                   Effect="{Binding Path=(dxe:BaseEdit.OwnerEdit).ImageEffect, RelativeSource={RelativeSource TemplatedParent}}"
                   Source="{Binding Path=(dxe:BaseEdit.OwnerEdit).Source, RelativeSource={RelativeSource TemplatedParent}}"
                   Stretch="{Binding Path=(dxe:BaseEdit.OwnerEdit).Stretch, RelativeSource={RelativeSource TemplatedParent}}"/>
            <ContentControl dx:FocusHelper2.Focusable="False"
                            Template="{Binding Path=(dxe:BaseEdit.OwnerEdit).EmptyContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                            Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).HasImage, Converter={StaticResource inverseBoolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
            <Border x:Name="PART_InplaceMenu"
                    Background="{DynamicResource {dxet:ImageEditThemeKey ResourceKey=InplaceMenuBackgroundBrush}}"
                    Grid.Row="1"
                    Padding="8,2,0,2"
                    Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).InplaceMenuVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                <ContentControl Template="{Binding Path=(dxe:BaseEdit.OwnerEdit).MenuTemplate, RelativeSource={RelativeSource TemplatedParent}}"/>
            </Border>
            <dxe:FlyoutControl x:Name="PART_MenuFlyout"
                               AnimationDuration="00:00:00.1"
                               Background="Transparent"
                               BorderThickness="0"
                               HorizontalAlignment="Center"
                               OpenOnHover="True"
                               PlacementTarget="{Binding Path=(dxe:BaseEdit.OwnerEdit), RelativeSource={RelativeSource TemplatedParent}}"
                               VerticalAlignment="Bottom"
                               cs:id="FlyoutControl_0000">
                <dxe:FlyoutControl.Settings>
                    <dxe:FlyInSettings/>
                </dxe:FlyoutControl.Settings>
                <dxmvvm:Interaction.Behaviors>
                    <dxmvvm:EventToCommand Command="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).CanShowMenuPopupCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                           EventName="Opening"
                                           PassEventArgsToCommand="True"/>
                </dxmvvm:Interaction.Behaviors>
                <ContentControl Focusable="False" Template="{Binding Path=(dxe:BaseEdit.OwnerEdit).MenuContainerTemplate, RelativeSource={RelativeSource TemplatedParent}}">
                    <ContentControl Focusable="False" Template="{Binding Path=(dxe:BaseEdit.OwnerEdit).MenuTemplate, RelativeSource={RelativeSource TemplatedParent}}"/>
                </ContentControl>
            </dxe:FlyoutControl>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:ImageEditThemeKey ResourceKey=EditInplaceTemplate}">
        <Grid x:Name="PART_Container"
              Background="Transparent"
              cs:id="Grid_0000">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Image Name="PART_Editor"
                   Focusable="False"
                   Margin="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding, RelativeSource={RelativeSource TemplatedParent}}"
                   Source="{Binding Path=(dxe:BaseEdit.OwnerEdit).Source, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                   Stretch="{Binding Path=(dxe:BaseEdit.OwnerEdit).Stretch, RelativeSource={RelativeSource TemplatedParent}}"/>
            <Border x:Name="PART_InplaceMenu"
                    Background="{DynamicResource {dxet:ImageEditThemeKey ResourceKey=InplaceMenuBackgroundBrush}}"
                    Grid.Row="1"
                    Padding="8,2,0,2"
                    Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).InplaceMenuVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                <ContentControl Template="{Binding Path=(dxe:BaseEdit.OwnerEdit).MenuTemplate, RelativeSource={RelativeSource TemplatedParent}}"/>
            </Border>
            <dxe:FlyoutControl x:Name="PART_MenuFlyout"
                               AnimationDuration="00:00:00.1"
                               Background="Transparent"
                               BorderThickness="0"
                               HorizontalAlignment="Center"
                               OpenOnHover="True"
                               PlacementTarget="{Binding Path=(dxe:BaseEdit.OwnerEdit), RelativeSource={RelativeSource TemplatedParent}}"
                               VerticalAlignment="Bottom"
                               cs:id="FlyoutControl_0000">
                <dxe:FlyoutControl.Settings>
                    <dxe:FlyInSettings/>
                </dxe:FlyoutControl.Settings>
                <dxmvvm:Interaction.Behaviors>
                    <dxmvvm:EventToCommand Command="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).CanShowMenuPopupCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                           EventName="Opening"
                                           PassEventArgsToCommand="True"/>
                </dxmvvm:Interaction.Behaviors>
                <ContentControl Focusable="False" Template="{Binding Path=(dxe:BaseEdit.OwnerEdit).MenuContainerTemplate, RelativeSource={RelativeSource TemplatedParent}}">
                    <ContentControl Focusable="False" Template="{Binding Path=(dxe:BaseEdit.OwnerEdit).MenuTemplate, RelativeSource={RelativeSource TemplatedParent}}"/>
                </ContentControl>
            </dxe:FlyoutControl>
        </Grid>
    </ControlTemplate>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Editors.ImageEditToolButton}" TargetType="{x:Type dxe:ImageEditToolButton}">
        <Style.Setters>
            <Setter Property="Background"
                    Value="Transparent"
                    cs:id="Setter_0000"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="dx:FocusHelper2.Focusable" Value="False"/>
            <Setter Property="Template" Value="{DynamicResource {dxet:ImageEditThemeKey ResourceKey=ToolButtonTemplate}}"/>
            <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxet:ImageEditThemeKey ResourceKey=ToolButtonPalette}}"/>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="dx:SvgImageHelper.State" Value="Hover"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="dx:SvgImageHelper.State" Value="Pressed"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>