<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dxm="http://schemas.devexpress.com/winfx/2008/xaml/map" xmlns:dxmcl="clr-namespace:DevExpress.Map.Localization;assembly=DevExpress.Map.v22.2.Core" xmlns:dxmt="http://schemas.devexpress.com/winfx/2008/xaml/map/themekeys" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxcore_unique_xmlns="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core">

    <dxm:ActiveActionToIsActiveConverter x:Key="ActiveActionToIsActiveConverter" />

    <dxm:MeasurementToolbarActionToIsActiveConverter x:Key="MeasurementToolbarActionToIsActiveConverter" />

    <dxm:LocalizedStringConverter x:Key="LocalizedStringConverter" />

    <Style x:Key="MapToggleButtonStyle" TargetType="{x:Type dxm:MapToggleButton}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Map\Generic\MapEditorPanel.xaml;17;6" /><Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxm:MapToggleButton}">
                    <Grid dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Map\Generic\MapEditorPanel.xaml;21;22">
                        <Grid Margin="0,1,0,1" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Map\Generic\MapEditorPanel.xaml;22;26">
                            <dx:DXBorder Name="hover" Background="{DynamicResource {dxmt:ButtonPanelThemeKeys ResourceKey=ItemBackground}}" CornerRadius="1" Opacity="0" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Map\Generic\MapEditorPanel.xaml;23;30" />
                            <dx:DXBorder Name="pressed" Background="{DynamicResource {dxmt:ButtonPanelThemeKeys ResourceKey=ItemBackground}}" CornerRadius="1" Opacity="0" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Map\Generic\MapEditorPanel.xaml;27;30" />
                            <dx:DXBorder Name="active" Background="{DynamicResource {dxmt:ButtonPanelThemeKeys ResourceKey=ItemBackground}}" CornerRadius="1" Opacity="0" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Map\Generic\MapEditorPanel.xaml;31;30" />
                        </Grid>
                        <dx:DXBorder Name="border" Background="{TemplateBinding Background}" Margin="2,0,2,0" ToolTip="{TemplateBinding ToolTip}" ToolTipService.ShowOnDisabled="True" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Map\Generic\MapEditorPanel.xaml;36;26">
                            <StackPanel Margin="{DynamicResource {dxmt:ButtonPanelThemeKeys ResourceKey=ItemMargin}}" Orientation="Horizontal" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Map\Generic\MapEditorPanel.xaml;41;30">
                                <Image Height="{DynamicResource {dxmt:ButtonPanelThemeKeys ResourceKey=ItemSize}}" Source="{TemplateBinding Tag}" Width="{DynamicResource {dxmt:ButtonPanelThemeKeys ResourceKey=ItemSize}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Map\Generic\MapEditorPanel.xaml;42;34" />
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Map\Generic\MapEditorPanel.xaml;45;34" />
                            </StackPanel>
                        </dx:DXBorder>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="hover" Storyboard.TargetProperty="Opacity" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="pressed" Storyboard.TargetProperty="Opacity" To="1" />
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="border" Storyboard.TargetProperty="Opacity" To="{DynamicResource ResourceKey={dxmt:ButtonPanelThemeKeys ResourceKey=PressedItemOpacity}}" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Active">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="active" Storyboard.TargetProperty="Opacity" To="1" />
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="border" Storyboard.TargetProperty="Opacity" To="{DynamicResource ResourceKey={dxmt:ButtonPanelThemeKeys ResourceKey=ActiveItemOpacity}}" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="border" Storyboard.TargetProperty="Opacity" To="{DynamicResource ResourceKey={dxmt:ButtonPanelThemeKeys ResourceKey=DisabledItemOpacity}}" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SeparatorStyle" TargetType="{x:Type dxm:MapEditorPanelButton}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Map\Generic\MapEditorPanel.xaml;99;6" /><Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxm:MapEditorPanelButton}">
                    <Rectangle Height="{DynamicResource {dxmt:ButtonPanelThemeKeys ResourceKey=ItemSize}}" Margin="{DynamicResource {dxmt:ButtonPanelThemeKeys ResourceKey=ItemMargin}}" Stroke="{DynamicResource {dxmt:ButtonPanelThemeKeys ResourceKey=SeparatorColor}}" Width="1" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Map\Generic\MapEditorPanel.xaml;103;22" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="UndoButtonStyle" BasedOn="{StaticResource MapToggleButtonStyle}" TargetType="{x:Type dxm:MapEditorPanelButton}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Map\Generic\MapEditorPanel.xaml;112;6" /><Setter Property="ToolTip" Value="{Binding Converter={StaticResource LocalizedStringConverter}, ConverterParameter={x:Static dxmcl:MapStringId.EditorUndo}}" />
        <Setter Property="Tag" Value="{dxm:MapCoreSvgImage Path=Images/Svg/EditorPanel/Undo.svg}" />
    </Style>

    <Style x:Key="RedoButtonStyle" BasedOn="{StaticResource MapToggleButtonStyle}" TargetType="{x:Type dxm:MapEditorPanelButton}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Map\Generic\MapEditorPanel.xaml;119;6" /><Setter Property="ToolTip" Value="{Binding Converter={StaticResource LocalizedStringConverter}, ConverterParameter={x:Static dxmcl:MapStringId.EditorRedo}}" />
        <Setter Property="Tag" Value="{dxm:MapCoreSvgImage Path=Images/Svg/EditorPanel/Redo.svg}" />
    </Style>

    <Style x:Key="ResetModeButtonStyle" BasedOn="{StaticResource MapToggleButtonStyle}" TargetType="{x:Type dxm:MapEditorPanelButton}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Map\Generic\MapEditorPanel.xaml;126;6" /><Setter Property="ToolTip" Value="{Binding Converter={StaticResource LocalizedStringConverter}, ConverterParameter={x:Static dxmcl:MapStringId.EditorDefault}}" />
        <Setter Property="Tag" Value="{dxm:MapCoreSvgImage Path=Images/Svg/EditorPanel/Default.svg}" />
    </Style>

    <Style x:Key="SetTransformModeButtonStyle" BasedOn="{StaticResource MapToggleButtonStyle}" TargetType="{x:Type dxm:MapEditorPanelButton}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Map\Generic\MapEditorPanel.xaml;133;6" /><Setter Property="ToolTip" Value="{Binding Converter={StaticResource LocalizedStringConverter}, ConverterParameter={x:Static dxmcl:MapStringId.EditorTransform}}" />
        <Setter Property="Tag" Value="{dxm:MapCoreSvgImage Path=Images/Svg/EditorPanel/Transform.svg}" />
    </Style>

    <Style x:Key="SetEditModeButtonStyle" BasedOn="{StaticResource MapToggleButtonStyle}" TargetType="{x:Type dxm:MapEditorPanelButton}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Map\Generic\MapEditorPanel.xaml;140;6" /><Setter Property="ToolTip" Value="{Binding Converter={StaticResource LocalizedStringConverter}, ConverterParameter={x:Static dxmcl:MapStringId.EditorEdit}}" />
        <Setter Property="Tag" Value="{dxm:MapCoreSvgImage Path=Images/Svg/EditorPanel/Edit.svg}" />
    </Style>

    <Style x:Key="SetCreatePushpinModeButtonStyle" BasedOn="{StaticResource MapToggleButtonStyle}" TargetType="{x:Type dxm:MapEditorPanelButton}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Map\Generic\MapEditorPanel.xaml;147;6" /><Setter Property="ToolTip" Value="{Binding Converter={StaticResource LocalizedStringConverter}, ConverterParameter={x:Static dxmcl:MapStringId.EditorAddPushpin}}" />
        <Setter Property="Tag" Value="{dxm:MapCoreSvgImage Path=Images/Svg/EditorPanel/AddPushpin.svg}" />
    </Style>

    <Style x:Key="SetCreatePolygonModeButtonStyle" BasedOn="{StaticResource MapToggleButtonStyle}" TargetType="{x:Type dxm:MapEditorPanelButton}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Map\Generic\MapEditorPanel.xaml;154;6" /><Setter Property="ToolTip" Value="{Binding Converter={StaticResource LocalizedStringConverter}, ConverterParameter={x:Static dxmcl:MapStringId.EditorAddPath}}" />
        <Setter Property="Tag" Value="{dxm:MapCoreSvgImage Path=Images/Svg/EditorPanel/AddPath.svg}" />
    </Style>

    <Style x:Key="SetCreatePolylineModeButtonStyle" BasedOn="{StaticResource MapToggleButtonStyle}" TargetType="{x:Type dxm:MapEditorPanelButton}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Map\Generic\MapEditorPanel.xaml;161;6" /><Setter Property="ToolTip" Value="{Binding Converter={StaticResource LocalizedStringConverter}, ConverterParameter={x:Static dxmcl:MapStringId.EditorAddPolyline}}" />
        <Setter Property="Tag" Value="{dxm:MapCoreSvgImage Path=Images/Svg/EditorPanel/AddPolyline.svg}" />
    </Style>

    <Style x:Key="SetCreateSplineModeButtonStyle" BasedOn="{StaticResource MapToggleButtonStyle}" TargetType="{x:Type dxm:MapEditorPanelButton}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Map\Generic\MapEditorPanel.xaml;168;6" /><Setter Property="ToolTip" Value="{Binding Converter={StaticResource LocalizedStringConverter}, ConverterParameter={x:Static dxmcl:MapStringId.EditorAddSpline}}" />
        <Setter Property="Tag" Value="{dxm:MapCoreSvgImage Path=Images/Svg/EditorPanel/AddSpline.svg}" />
    </Style>

    <Style x:Key="SetCreateDotModeButtonStyle" BasedOn="{StaticResource MapToggleButtonStyle}" TargetType="{x:Type dxm:MapEditorPanelButton}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Map\Generic\MapEditorPanel.xaml;175;6" /><Setter Property="ToolTip" Value="{Binding Converter={StaticResource LocalizedStringConverter}, ConverterParameter={x:Static dxmcl:MapStringId.EditorAddDot}}" />
        <Setter Property="Tag" Value="{dxm:MapCoreSvgImage Path=Images/Svg/EditorPanel/AddDot.svg}" />
    </Style>

    <Style x:Key="SetCreateEllipseModeButtonStyle" BasedOn="{StaticResource MapToggleButtonStyle}" TargetType="{x:Type dxm:MapEditorPanelButton}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Map\Generic\MapEditorPanel.xaml;182;6" /><Setter Property="ToolTip" Value="{Binding Converter={StaticResource LocalizedStringConverter}, ConverterParameter={x:Static dxmcl:MapStringId.EditorAddEllipse}}" />
        <Setter Property="Tag" Value="{dxm:MapCoreSvgImage Path=Images/Svg/EditorPanel/AddEllipse.svg}" />
    </Style>

    <Style x:Key="SetCreateRectangleModeButtonStyle" BasedOn="{StaticResource MapToggleButtonStyle}" TargetType="{x:Type dxm:MapEditorPanelButton}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Map\Generic\MapEditorPanel.xaml;189;6" /><Setter Property="ToolTip" Value="{Binding Converter={StaticResource LocalizedStringConverter}, ConverterParameter={x:Static dxmcl:MapStringId.EditorAddRectangle}}" />
        <Setter Property="Tag" Value="{dxm:MapCoreSvgImage Path=Images/Svg/EditorPanel/AddRectangle.svg}" />
    </Style>

    <Style x:Key="SetCreateLineModeButtonStyle" BasedOn="{StaticResource MapToggleButtonStyle}" TargetType="{x:Type dxm:MapEditorPanelButton}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Map\Generic\MapEditorPanel.xaml;196;6" /><Setter Property="ToolTip" Value="{Binding Converter={StaticResource LocalizedStringConverter}, ConverterParameter={x:Static dxmcl:MapStringId.EditorAddLine}}" />
        <Setter Property="Tag" Value="{dxm:MapCoreSvgImage Path=Images/Svg/EditorPanel/AddLine.svg}" />
    </Style>

    <Style x:Key="SetCreateCustomElementModeButtonStyle" BasedOn="{StaticResource MapToggleButtonStyle}" TargetType="{x:Type dxm:MapEditorPanelButton}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Map\Generic\MapEditorPanel.xaml;203;6" /><Setter Property="Visibility" Value="Collapsed" />
        <Setter Property="ToolTip" Value="{Binding Converter={StaticResource LocalizedStringConverter}, ConverterParameter={x:Static dxmcl:MapStringId.EditorAddCustomElement}}" />
        <Setter Property="Tag" Value="{dxm:MapCoreSvgImage Path=Images/Svg/EditorPanel/AddCustomElement.svg}" />
    </Style>

    <Style x:Key="SetCreateDistanceRulerButtonStyle" BasedOn="{StaticResource MapToggleButtonStyle}" TargetType="{x:Type dxm:MeasurementToolbarButton}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Map\Generic\MapEditorPanel.xaml;211;6" /><Setter Property="ToolTip" Value="{Binding Converter={StaticResource LocalizedStringConverter}, ConverterParameter={x:Static dxmcl:MapStringId.AddDistanceRuler}}" />
        <Setter Property="Tag" Value="{dxm:MapCoreSvgImage Path=Images/Svg/EditorPanel/AddDistanceRuler.svg}" />
    </Style>

    <Style x:Key="SetCreateAreaRulerButtonStyle" BasedOn="{StaticResource MapToggleButtonStyle}" TargetType="{x:Type dxm:MeasurementToolbarButton}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Map\Generic\MapEditorPanel.xaml;218;6" /><Setter Property="ToolTip" Value="{Binding Converter={StaticResource LocalizedStringConverter}, ConverterParameter={x:Static dxmcl:MapStringId.AddAreaRuler}}" />
        <Setter Property="Tag" Value="{dxm:MapCoreSvgImage Path=Images/Svg/EditorPanel/AddAreaRuler.svg}" />
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Map.MapEditorPanelControl}" TargetType="dxm:MapEditorPanelControl">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Map\Generic\MapEditorPanel.xaml;225;6" /><Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxm:MapEditorPanelControl">
                    <dx:DXBorder Background="{DynamicResource {dxmt:MapBrushesThemeKey ResourceKey=OverlayBackground}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Map\Generic\MapEditorPanel.xaml;229;22">
                        <StackPanel x:Name="buttonsPanel" Orientation="Horizontal" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Map\Generic\MapEditorPanel.xaml;230;26">
                            <dxm:MapEditorPanelButton Command="{Binding Editor.UndoCommand}" Style="{StaticResource UndoButtonStyle}" />
                            <dxm:MapEditorPanelButton Command="{Binding Editor.RedoCommand}" Style="{StaticResource RedoButtonStyle}" />
                            <dxm:MapEditorPanelButton Style="{StaticResource SeparatorStyle}" />
                            <dxm:MapEditorPanelButton Command="{Binding Editor.ResetModeCommand}" IsActive="{Binding ActiveAction,                                      ConverterParameter={x:Static dxm:ItemsEditorPanelAction.Default},                                      Converter={StaticResource ActiveActionToIsActiveConverter}}" Style="{StaticResource ResetModeButtonStyle}" />
                            <dxm:MapEditorPanelButton Command="{Binding Editor.SetTransformModeCommand}" CommandParameter="{x:Static dxm:MapItemTransform.All}" IsActive="{Binding ActiveAction,                                      ConverterParameter={x:Static dxm:ItemsEditorPanelAction.Transform},                                     Converter={StaticResource ActiveActionToIsActiveConverter}}" Style="{StaticResource SetTransformModeButtonStyle}" />
                            <dxm:MapEditorPanelButton Command="{Binding Editor.SetEditModeCommand}" IsActive="{Binding ActiveAction,                                      ConverterParameter={x:Static dxm:ItemsEditorPanelAction.Edit},                                     Converter={StaticResource ActiveActionToIsActiveConverter}}" Style="{StaticResource SetEditModeButtonStyle}" />
                            <dxm:MapEditorPanelButton Style="{StaticResource SeparatorStyle}" />
                            <dxm:MapEditorPanelButton Command="{Binding Editor.SetCreateModeCommand}" CommandParameter="{x:Static dxm:MapPushpinSettings.Default}" IsActive="{Binding ActiveAction,                                      ConverterParameter={x:Static dxm:ItemsEditorPanelAction.AddPushpin},                                     Converter={StaticResource ActiveActionToIsActiveConverter}}" Style="{StaticResource SetCreatePushpinModeButtonStyle}" />
                            <dxm:MapEditorPanelButton Command="{Binding Editor.SetCreateModeCommand}" CommandParameter="{x:Static dxm:MapPathSettings.Default}" IsActive="{Binding ActiveAction,                                      ConverterParameter={x:Static dxm:ItemsEditorPanelAction.AddPath},                                     Converter={StaticResource ActiveActionToIsActiveConverter}}" Style="{StaticResource SetCreatePolygonModeButtonStyle}" />
                            <dxm:MapEditorPanelButton Command="{Binding Editor.SetCreateModeCommand}" CommandParameter="{x:Static dxm:MapPolylineSettings.Default}" IsActive="{Binding ActiveAction,                                     ConverterParameter={x:Static dxm:ItemsEditorPanelAction.AddPolyline},                                     Converter={StaticResource ActiveActionToIsActiveConverter}}" Style="{StaticResource SetCreatePolylineModeButtonStyle}" />
                            <dxm:MapEditorPanelButton Command="{Binding Editor.SetCreateModeCommand}" CommandParameter="{x:Static dxm:MapSplineSettings.Default}" IsActive="{Binding ActiveAction,                                     ConverterParameter={x:Static dxm:ItemsEditorPanelAction.AddSpline},                                     Converter={StaticResource ActiveActionToIsActiveConverter}}" Style="{StaticResource SetCreateSplineModeButtonStyle}" />
                            <dxm:MapEditorPanelButton Command="{Binding Editor.SetCreateModeCommand}" CommandParameter="{x:Static dxm:MapDotSettings.Default}" IsActive="{Binding ActiveAction,                                      ConverterParameter={x:Static dxm:ItemsEditorPanelAction.AddDot},                                     Converter={StaticResource ActiveActionToIsActiveConverter}}" Style="{StaticResource SetCreateDotModeButtonStyle}" />
                            <dxm:MapEditorPanelButton Command="{Binding Editor.SetCreateModeCommand}" CommandParameter="{x:Static dxm:MapEllipseSettings.Default}" IsActive="{Binding ActiveAction,                                      ConverterParameter={x:Static dxm:ItemsEditorPanelAction.AddEllipse},                                     Converter={StaticResource ActiveActionToIsActiveConverter}}" Style="{StaticResource SetCreateEllipseModeButtonStyle}" />
                            <dxm:MapEditorPanelButton Command="{Binding Editor.SetCreateModeCommand}" CommandParameter="{x:Static dxm:MapRectangleSettings.Default}" IsActive="{Binding ActiveAction,                                      ConverterParameter={x:Static dxm:ItemsEditorPanelAction.AddRectangle},                                     Converter={StaticResource ActiveActionToIsActiveConverter}}" Style="{StaticResource SetCreateRectangleModeButtonStyle}" />
                            <dxm:MapEditorPanelButton Command="{Binding Editor.SetCreateModeCommand}" CommandParameter="{x:Static dxm:MapLineSettings.Default}" IsActive="{Binding ActiveAction,                                      ConverterParameter={x:Static dxm:ItemsEditorPanelAction.AddLine},                                     Converter={StaticResource ActiveActionToIsActiveConverter}}" Style="{StaticResource SetCreateLineModeButtonStyle}" />
                            <dxm:MapEditorPanelButton Command="{Binding Editor.SetCreateModeCommand}" CommandParameter="{x:Static dxm:MapCustomElementSettings.Default}" IsActive="{Binding ActiveAction,                                      ConverterParameter={x:Static dxm:ItemsEditorPanelAction.AddCustomElement},                                     Converter={StaticResource ActiveActionToIsActiveConverter}}" Style="{StaticResource SetCreateCustomElementModeButtonStyle}" />
                        </StackPanel>
                    </dx:DXBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Map.MeasurementToolbarControl}" TargetType="dxm:MeasurementToolbarControl">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Map\Generic\MapEditorPanel.xaml;288;6" /><Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <dx:DXBorder Background="{DynamicResource {dxmt:MapBrushesThemeKey ResourceKey=OverlayBackground}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Map\Generic\MapEditorPanel.xaml;292;22">
                        <StackPanel x:Name="buttonsPanel" Orientation="Horizontal" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Map\Generic\MapEditorPanel.xaml;293;26">
                            <dxm:MeasurementToolbarButton Command="{Binding Measurements.SetCreateModeCommand}" CommandParameter="{x:Static dxm:RulerType.Distance}" IsActive="{Binding ActiveAction,                                     ConverterParameter={x:Static dxm:MeasurementToolbarAction.AddDistanceRuler},                                     Converter={StaticResource MeasurementToolbarActionToIsActiveConverter}}" Style="{StaticResource SetCreateDistanceRulerButtonStyle}" UndoCommand="{Binding Measurements.SetEditModeCommand}" Visibility="{Binding Options.ShowDistanceButton, Converter={dxm:BoolToVisibilityConverter}}" />
                            <dxm:MeasurementToolbarButton Command="{Binding Measurements.SetCreateModeCommand}" CommandParameter="{x:Static dxm:RulerType.Area}" IsActive="{Binding ActiveAction,                                      ConverterParameter={x:Static dxm:MeasurementToolbarAction.AddAreaRuler},                                     Converter={StaticResource MeasurementToolbarActionToIsActiveConverter}}" Style="{StaticResource SetCreateAreaRulerButtonStyle}" UndoCommand="{Binding Measurements.SetEditModeCommand}" Visibility="{Binding Options.ShowAreaButton, Converter={dxm:BoolToVisibilityConverter}}" />
                        </StackPanel>
                    </dx:DXBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>