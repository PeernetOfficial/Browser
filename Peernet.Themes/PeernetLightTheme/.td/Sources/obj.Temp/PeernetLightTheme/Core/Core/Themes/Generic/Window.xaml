<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxcore_unique_xmlns="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core">

    <ResourceDictionary.MergedDictionaries>
        <dxt:ResourceDictionaryEx Source="{dxc:DynamicThemeResource PseudoWindow.xaml, ResourcePath=Themes, ResourcePathInTheme='Core/Core/Themes', TypeInTargetAssembly={x:Type dxcn:RenderTemplate}}" />
    </ResourceDictionary.MergedDictionaries>

    <dxmvvm:NumericToVisibilityConverter x:Key="NumericToVisibilityConverter" />

    <Label x:Key="DefaultDXDialogContent" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;19;6" />

    

    <ControlTemplate x:Key="{dxt:DXWindowThemeKey ResourceKey=HeaderTemplate}" TargetType="{x:Type ContentControl}">
        <dxcore_unique_xmlns:DXWindowHeader x:Name="PART_Header" Background="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=ActiveHeaderBackground}}" CornerRadius="0" Focusable="False">
            <Grid dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;28;14">
                <Thumb x:Name="PART_DragWidget" Template="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerDragWidgetTemplate}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;29;18" />
                <DockPanel Name="PART_HeaderDock" LastChildFill="True" Margin="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderDockMargin}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;30;18">
                    <Image x:Name="PART_Icon" DockPanel.Dock="Left" Source="{Binding Path=(dxc:FloatingContainer.FloatingContainer).Icon, RelativeSource={RelativeSource AncestorType=ContentPresenter}}" Style="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=DXWindowIconStyle}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;33;22" />
                    <Grid x:Name="PART_Grid" DockPanel.Dock="Right" Focusable="False" UseLayoutRounding="True" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;37;22">
                        <ItemsControl Style="{DynamicResource {dxt:DXTabbedWindowThemeKey ResourceKey=ButtonContainerStyle}}" Visibility="Hidden" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;41;26">
                            <dxcore_unique_xmlns:HeaderItemControl DockPanel.Dock="Right" Style="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderCloseButtonStyle}}" />
                        </ItemsControl>
                        <ItemsControl x:Name="PART_HeaderButtons" Focusable="False" IsTabStop="False" Style="{DynamicResource {dxt:DXTabbedWindowThemeKey ResourceKey=ButtonContainerStyle}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;44;26">
                            <dxcore_unique_xmlns:HeaderItemControl x:Name="PART_CloseButton" DockPanel.Dock="Right" Style="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderCloseButtonStyle}}" Visibility="Collapsed" />
                            <dxcore_unique_xmlns:HeaderItemControl x:Name="PART_Maximize" DockPanel.Dock="Right" Style="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderButtonStyle}}" Visibility="{Binding Path=(dxc:FloatingContainer.IsMaximized), Converter={dxc:BooleanToVisibilityConverter Invert=True}, RelativeSource={RelativeSource Self}}" />
                            <dxcore_unique_xmlns:HeaderItemControl x:Name="PART_Restore" DockPanel.Dock="Right" Style="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderButtonStyle}}" Visibility="{Binding Path=(dxc:FloatingContainer.IsMaximized), Converter={dxc:BooleanToVisibilityConverter Invert=False}, RelativeSource={RelativeSource Self}}" />
                            <dxcore_unique_xmlns:HeaderItemControl x:Name="PART_Minimize" DockPanel.Dock="Right" Style="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderButtonStyle}}" />
                            <dxcore_unique_xmlns:ThemedWindowHeaderItemsControl x:Name="PART_HeaderCustomItems" DockPanel.Dock="Right" Focusable="False" IsTabStop="False" Margin="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=HeaderItemsControlMargin}}" Style="{DynamicResource {dxt:DXTabbedWindowThemeKey ResourceKey=ControlContainerStyle}}" />
                        </ItemsControl>
                    </Grid>
                    <ContentPresenter x:Name="PART_CaptionContentPresenter" Content="{x:Null}" ContentTemplate="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerCaptionTemplate}}" DockPanel.Dock="Left" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;71;22" />
                </DockPanel>
            </Grid>
        </dxcore_unique_xmlns:DXWindowHeader>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=WindowStyle, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, FallbackValue={x:Static sys:String.Empty}}" Value="None">
                <Setter Property="Visibility" TargetName="PART_Maximize" Value="Collapsed" />
                <Setter Property="Visibility" TargetName="PART_Restore" Value="Collapsed" />
                <Setter Property="Visibility" TargetName="PART_Minimize" Value="Collapsed" />
                <Setter Property="Visibility" TargetName="PART_HeaderCustomItems" Value="Collapsed" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(dxc:FloatingContainer.IsActive)}" Value="False" />
                    <Condition Binding="{Binding Path=(dxcn:WindowButtonHelper.IsActiveAppearance)}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" TargetName="PART_Header" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=InactiveHeaderBackground}}" />
                    <Setter Property="Opacity" TargetName="PART_CaptionContentPresenter" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=InactiveHeaderOpacity}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            
            <Trigger Property="Source" SourceName="PART_Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="PART_Icon" Value="Collapsed" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    

    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerTemplate}">
        <Grid TextElement.Foreground="{DynamicResource {dxt:ThemeColorsThemeKey ResourceKey=DXMessageBoxForegroundColor}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;124;10">
            <Control x:Name="PART_ActiveBorder" Focusable="False" Template="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingActiveBorder}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;125;14" />
            <Control x:Name="PART_InactiveBorder" Focusable="False" Template="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingInactiveBorder}}" Visibility="Collapsed" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;128;14" />
            <Grid Margin="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerBorderPadding}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;132;14">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <ContentControl x:Name="Header" dxcore_unique_xmlns:HeaderItemControl.CloseTemplateProvider="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=HeaderItemControlCloseTemplateProvider}}" dxcore_unique_xmlns:HeaderItemControl.CommonTemplateProvider="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=HeaderItemControlCommonTemplateProvider}}" Focusable="False" Template="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=HeaderTemplate}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;137;18" />
                <Grid x:Name="PART_ContentOffset" Grid.Row="1" Margin="{Binding Path=(dxc:FloatingContainerControl.ContentOffset), RelativeSource={RelativeSource Self} }" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;142;18">
                    <Control x:Name="PART_ContentBackground" Focusable="False" Template="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingBackground}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;145;22" />
                    <Control x:Name="PART_InactiveContentBackground" Focusable="False" Template="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=InactiveFloatingBackground}}" Visibility="Collapsed" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;148;22" />
                    <Grid Margin="1" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;152;22">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ContentPresenter x:Name="PART_ContainerContent" Content="{Binding}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;157;26" />
                    </Grid>
                </Grid>
            </Grid>
            <StackPanel x:Name="PART_StatusPanel" Grid.Row="0" Margin="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=SizeGripMargin}}" VerticalAlignment="Bottom" Visibility="Collapsed" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;161;14">
                <Thumb x:Name="PART_SizeGrip" Cursor="SizeNWSE" Height="16" HorizontalAlignment="Right" Template="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerSizeGripTemplate}}" VerticalAlignment="Bottom" Width="16" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;166;18" />
            </StackPanel>
            <Control x:Name="PART_ResizeFrame" Focusable="False" Template="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerResizeFrame}}" Visibility="{Binding Path=(dxc:FloatingContainer.IsMaximized), Converter={dxc:BooleanToVisibilityConverter Invert=True}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;174;14" />
            <Thumb x:Name="AdditionalDragWidget" Height="1" Template="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerDragWidgetTemplate}}" VerticalAlignment="Top" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;178;14" />
        </Grid>
        <DataTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(dxc:FloatingContainer.IsActive)}" Value="False" />
                    <Condition Binding="{Binding Path=(dxcn:WindowButtonHelper.IsActiveAppearance)}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Visibility" TargetName="PART_InactiveBorder" Value="Visible" />
                    <Setter Property="Visibility" TargetName="PART_ActiveBorder" Value="Collapsed" />
                    <Setter Property="Visibility" TargetName="PART_InactiveContentBackground" Value="Visible" />
                    <Setter Property="Visibility" TargetName="PART_ContentBackground" Value="Collapsed" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.FloatingContainer).AllowSizing, RelativeSource={RelativeSource Self}}" Value="false">
                <Setter Property="Visibility" TargetName="PART_StatusPanel" Value="Collapsed" />
                <Setter Property="Visibility" TargetName="PART_ResizeFrame" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=WindowStyle, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, FallbackValue={x:Static sys:String.Empty}}" Value="None">
                <Setter Property="Visibility" TargetName="AdditionalDragWidget" Value="Collapsed" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    

    <ControlTemplate x:Key="DXWindowTemplate" TargetType="{x:Type dxc:DXWindow}">
        <Grid x:Name="Root_Grid" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;229;10">
            <dx:DXBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;230;14">
                <AdornerDecorator x:Name="PART_WindowAdornerDecorator" ClipToBounds="True" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;231;18">
                    <ContentPresenter x:Name="PART_RootContentPresenter" ContentTemplate="{TemplateBinding ActualWindowTemplate}" DataContext="{TemplateBinding DataContext}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;232;22">
                        <ContentPresenter.Content>
                            <dxcore_unique_xmlns:DXWindowBackgroundPanel DataContext="{TemplateBinding DataContext}" Focusable="False">
                                <dxcore_unique_xmlns:DXWindowBackgroundPanel.ContentTemplate>
                                    <Binding Path="ContentTemplate" RelativeSource="{RelativeSource TemplatedParent}" />
                                </dxcore_unique_xmlns:DXWindowBackgroundPanel.ContentTemplate>
                                <dxcore_unique_xmlns:DXWindowBackgroundPanel.Content>
                                    <Binding Path="Content" RelativeSource="{RelativeSource TemplatedParent}" />
                                </dxcore_unique_xmlns:DXWindowBackgroundPanel.Content>
                            </dxcore_unique_xmlns:DXWindowBackgroundPanel>
                        </ContentPresenter.Content>
                    </ContentPresenter>
                </AdornerDecorator>
            </dx:DXBorder>
        </Grid>
    </ControlTemplate>

    

    <ControlTemplate x:Key="DXWindowEmptyTemplate" TargetType="{x:Type dxc:DXWindow}">
        <Grid x:Name="Root_Grid" Height="Auto" Margin="0,0,0,0" VerticalAlignment="Stretch" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;254;10">
            <dx:DXBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;258;14">
                <AdornerDecorator x:Name="PART_WindowAdornerDecorator" ClipToBounds="True" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;259;18">
                    <ContentPresenter x:Name="PART_RootContentPresenter" ContentTemplate="{TemplateBinding ActualWindowTemplate}" Height="Auto" Width="Auto" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;260;22">
                        <ContentPresenter.Content>
                            <dx:DXBorder dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;265;30" />
                        </ContentPresenter.Content>
                    </ContentPresenter>
                </AdornerDecorator>
            </dx:DXBorder>
        </Grid>
    </ControlTemplate>

    

    

    

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DXWindow}" TargetType="{x:Type dxc:DXWindow}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Core\Core\Themes\Generic\Window.xaml;291;6" /><Setter Property="MinHeight" Value="42" />
        
        
        <Setter Property="ResizeMode" Value="CanResize" />
        <Setter Property="ResizeBorderThicknessInAeroMode" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=AeroWindowResizeBorderThickness}}" />
        <Setter Property="ResizeBorderThickness" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=ResizeBorderThickness}}" />
        <Setter Property="BorderEffectOffset" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectOffset}}" />
        <Setter Property="BorderEffectActiveColor" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectActiveColor}}" />
        <Setter Property="BorderEffectInactiveColor" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectInactiveColor}}" />
        <Setter Property="BorderEffectLeftMargins" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectLeftMargins}}" />
        <Setter Property="BorderEffectRightMargins" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectRightMargins}}" />
        <Setter Property="BorderEffectTopMargins" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectTopMargins}}" />
        <Setter Property="BorderEffectBottomMargins" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectBottomMargins}}" />
        <Setter Property="AeroWindowTemplate" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=AeroWindowTemplate}}" />
        <Setter Property="AeroBorderSize" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=AeroWindowBorderSize}}" />
        <Setter Property="WindowTemplate" Value="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerTemplate}}" />
        <Setter Property="Padding" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerBodyMargin}}" />
        <Setter Property="Template" Value="{StaticResource DXWindowTemplate}" />
        <Style.Triggers>
            <Trigger Property="HasContent" Value="False">
                <Setter Property="Template" Value="{StaticResource DXWindowEmptyTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    

    <ControlTemplate x:Key="DXDialogTemplate" TargetType="{x:Type dxc:DXDialog}">
        <Grid x:Name="Root_Grid" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;323;10">
            <dx:DXBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;324;14">
                <AdornerDecorator x:Name="PART_WindowAdornerDecorator" ClipToBounds="True" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;325;18">
                    <ContentPresenter x:Name="PART_RootContentPresenter" ContentTemplate="{TemplateBinding ActualWindowTemplate}" DataContext="{TemplateBinding DataContext}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;326;22">
                        <ContentPresenter.Content>
                            <Grid dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;330;30">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <dxcore_unique_xmlns:DXWindowBackgroundPanel DataContext="{TemplateBinding DataContext}">
                                    <dxcore_unique_xmlns:DXWindowBackgroundPanel.ContentTemplate>
                                        <Binding Path="ContentTemplate" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </dxcore_unique_xmlns:DXWindowBackgroundPanel.ContentTemplate>
                                    <dxcore_unique_xmlns:DXWindowBackgroundPanel.Content>
                                        <Binding Path="Content" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </dxcore_unique_xmlns:DXWindowBackgroundPanel.Content>
                                </dxcore_unique_xmlns:DXWindowBackgroundPanel>
                                <StackPanel x:Name="Footer" Grid.Row="2" HorizontalAlignment="Right" Margin="12" Orientation="Horizontal" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;343;34">
                                    <Button x:Name="YesButton" Content="{dxc:DXMessageBoxStringId StringId=Yes}" IsDefault="True" Margin="6,0,0,0" MinHeight="22" MinWidth="65" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;348;38" />
                                    <Button x:Name="NoButton" Content="{dxc:DXMessageBoxStringId StringId=No}" IsCancel="True" Margin="6,0,0,0" MinHeight="22" MinWidth="65" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;354;38" />
                                    <Button x:Name="OkButton" Content="{dxc:DXMessageBoxStringId StringId=Ok}" IsDefault="True" Margin="6,0,0,0" MinHeight="22" MinWidth="65" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;360;38" />
                                    <Button x:Name="CancelButton" Content="{dxc:DXMessageBoxStringId StringId=Cancel}" IsCancel="True" Margin="6,0,0,0" MinHeight="22" MinWidth="65" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;366;38" />
                                </StackPanel>
                            </Grid>
                        </ContentPresenter.Content>
                    </ContentPresenter>
                </AdornerDecorator>
            </dx:DXBorder>
        </Grid>
    </ControlTemplate>

    

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DXDialog}" BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DXWindow}}" TargetType="{x:Type dxc:DXDialog}">
        
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Core\Core\Themes\Generic\Window.xaml;383;6" /><Setter Property="Template" Value="{StaticResource DXDialogTemplate}" />
    </Style>

    

    <ControlTemplate x:Key="DXDialogWindowTemplate" TargetType="{x:Type dxc:DXDialogWindow}">
        <Grid x:Name="Root_Grid" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;396;10">
            <dx:DXBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;397;14">
                <AdornerDecorator x:Name="PART_WindowAdornerDecorator" ClipToBounds="True" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;398;18">
                    <ContentPresenter x:Name="PART_RootContentPresenter" ContentTemplate="{TemplateBinding ActualWindowTemplate}" DataContext="{TemplateBinding DataContext}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;399;22">
                        <ContentPresenter.Content>
                            <Grid dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;403;30">
                                <Grid.Resources>
                                    <dxmvvm:BooleanToObjectConverter x:Key="DialogFooterMarginConverter">
                                        <dxmvvm:BooleanToObjectConverter.TrueValue>
                                            <Thickness>6,12,12,12</Thickness>
                                        </dxmvvm:BooleanToObjectConverter.TrueValue>
                                        <dxmvvm:BooleanToObjectConverter.FalseValue>
                                            <Thickness>0</Thickness>
                                        </dxmvvm:BooleanToObjectConverter.FalseValue>
                                    </dxmvvm:BooleanToObjectConverter>
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <dxcore_unique_xmlns:DXWindowBackgroundPanel>
                                    <dxcore_unique_xmlns:DXWindowBackgroundPanel.ContentTemplate>
                                        <Binding Path="ContentTemplate" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </dxcore_unique_xmlns:DXWindowBackgroundPanel.ContentTemplate>
                                    <dxcore_unique_xmlns:DXWindowBackgroundPanel.Content>
                                        <PriorityBinding>
                                            <Binding Path="Content" RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Source="{StaticResource DefaultDXDialogContent}" />
                                        </PriorityBinding>
                                    </dxcore_unique_xmlns:DXWindowBackgroundPanel.Content>
                                </dxcore_unique_xmlns:DXWindowBackgroundPanel>
                                <ItemsControl x:Name="Footer" Focusable="False" Grid.Row="1" ItemsPanel="{Binding CommandButtonsPanel, RelativeSource={RelativeSource TemplatedParent}}" ItemsSource="{Binding CommandButtons, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=CommandButtons.Count, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NumericToVisibilityConverter}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;429;34" />
                                <ContentControl x:Name="FooterContainer" Focusable="False" Grid.Row="1" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;435;34">
                                    <dxcore_unique_xmlns:NonLogicalDecorator x:Name="FooterPresenter" DataContext="{x:Null}" Margin="{Binding HasFooterButtons, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource DialogFooterMarginConverter}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;440;38" />
                                </ContentControl>
                            </Grid>
                        </ContentPresenter.Content>
                    </ContentPresenter>
                </AdornerDecorator>
            </dx:DXBorder>
        </Grid>
    </ControlTemplate>

    

    <Style x:Key="DXDialogWindowCommandButtonStyle" TargetType="Button">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Core\Core\Themes\Generic\Window.xaml;454;6" /><Setter Property="MinWidth" Value="65" />
        <Setter Property="MinHeight" Value="22" />
        <Setter Property="Margin" Value="6,0,0,0" />
        <Setter Property="ContentTemplate" Value="{Binding ContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ContentTemplateSelector" Value="{Binding ContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
    </Style>

    

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DXDialogWindow}" BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DXWindow}}" TargetType="{x:Type dxc:DXDialogWindow}">
        
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Core\Core\Themes\Generic\Window.xaml;464;6" /><Setter Property="Template" Value="{StaticResource DXDialogWindowTemplate}" />
        <Setter Property="CommandButtonStyle" Value="{StaticResource DXDialogWindowCommandButtonStyle}" />
        <Setter Property="CommandButtonsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel HorizontalAlignment="Right" Margin="12" Orientation="Horizontal" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;476;22" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="HasContent" Value="False">
                <Setter Property="Template" Value="{StaticResource DXDialogWindowTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DialogButton}" TargetType="dxc:DialogButton">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Core\Core\Themes\Generic\Window.xaml;491;6" /><Setter Property="Focusable" Value="False" />
        <Setter Property="CommandButtonStyle" Value="{StaticResource DXDialogWindowCommandButtonStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxc:DialogButton">
                    <Button Command="{Binding ActualCommand, RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding ActualContent, RelativeSource={RelativeSource TemplatedParent}}" IsCancel="{Binding ActualIsCancel, RelativeSource={RelativeSource TemplatedParent}}" IsDefault="{Binding ActualIsDefault, RelativeSource={RelativeSource TemplatedParent}}" Style="{Binding CommandButtonStyle, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding CommandButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;497;22" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DialogButtonsControl}" TargetType="dxc:DialogButtonsControl">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Core\Core\Themes\Generic\Window.xaml;510;6" /><Setter Property="Focusable" Value="False" />
        <Setter Property="ItemsSource" Value="{Binding Path=(dxc:DialogButtonsControl.CommandsSource), RelativeSource={RelativeSource Self}}" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;517;22" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxc:DialogButtonsControl">
                    <ItemsPresenter Margin="{TemplateBinding Padding}" Visibility="{Binding HasItems, Converter={dxmvvm:BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;524;22" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    

    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderButtonTemplate}" TargetType="{x:Type dxc:HeaderItemControl}">
        <Grid dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;533;10">
            <Control Name="PART_Background" Focusable="False" Template="{Binding Path=TemplateProvider.NormalBackgroundTemplate, RelativeSource={RelativeSource TemplatedParent}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;534;14" />
            <dx:DXBorder Name="MarginBorder" Background="#1DF42065" Margin="4,0" cs:id="Border_0000" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;537;14">
                <ContentPresenter x:Name="PART_ContentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\Window.xaml;541;18" />
            </dx:DXBorder>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
            <Trigger Property="Name" Value="PART_Minimize">
                <Setter Property="ContentTemplate" TargetName="PART_ContentPresenter" Value="{Binding Path=TemplateProvider.(dxc:CommonHeaderItemControlTemplateProvider.MinimizeGlyphTemplate), RelativeSource={RelativeSource TemplatedParent}}" />
                <Setter Property="Margin" TargetName="MarginBorder" Value="0" />
            </Trigger>
            <Trigger Property="Name" Value="PART_Maximize">
                <Setter Property="ContentTemplate" TargetName="PART_ContentPresenter" Value="{Binding Path=TemplateProvider.(dxc:CommonHeaderItemControlTemplateProvider.MaximizeGlyphTemplate), RelativeSource={RelativeSource TemplatedParent}}" />
                <Setter Property="Margin" TargetName="MarginBorder" Value="0" />
            </Trigger>
            <Trigger Property="Name" Value="PART_MinimizeRestore">
                <Setter Property="ContentTemplate" TargetName="PART_ContentPresenter" Value="{Binding Path=TemplateProvider.(dxc:CommonHeaderItemControlTemplateProvider.RestoreGlyphTemplate), RelativeSource={RelativeSource TemplatedParent}}" />
                <Setter Property="Margin" TargetName="MarginBorder" Value="0" />
            </Trigger>
            <Trigger Property="Name" Value="PART_Restore">
                <Setter Property="ContentTemplate" TargetName="PART_ContentPresenter" Value="{Binding Path=TemplateProvider.(dxc:CommonHeaderItemControlTemplateProvider.RestoreGlyphTemplate), RelativeSource={RelativeSource TemplatedParent}}" />
                <Setter Property="Margin" TargetName="MarginBorder" Value="0" />
            </Trigger>
            <Trigger Property="Name" Value="PART_CloseButton">
                <Setter Property="ContentTemplate" TargetName="PART_ContentPresenter" Value="{Binding Path=TemplateProvider.(dxc:CloseHeaderItemControlTemplateProvider.CloseGlyphTemplate), RelativeSource={RelativeSource TemplatedParent}}" />
                <Setter Property="Margin" TargetName="MarginBorder" Value="0" />
            </Trigger>
            
            <Trigger Property="dxcn:WindowButtonHelper.IsMouseOver" Value="True">
                <Setter Property="Template" TargetName="PART_Background" Value="{Binding Path=TemplateProvider.MouseOverBackgroundTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                <Setter Property="Foreground" Value="{Binding Path=TemplateProvider.MouseOverForeground, RelativeSource={RelativeSource Self}}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="ShowBorder" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Template" TargetName="PART_Background" Value="{Binding Path=TemplateProvider.MouseOverBackgroundTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                <Setter Property="Foreground" Value="{Binding Path=TemplateProvider.MouseOverForeground, RelativeSource={RelativeSource Self}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="True" />
                    <Condition Property="ShowBorder" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Template" TargetName="PART_Background" Value="{Binding Path=TemplateProvider.PressedBackgroundTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                <Setter Property="Foreground" Value="{Binding Path=TemplateProvider.PressedForeground, RelativeSource={RelativeSource Self}}" />
            </MultiTrigger>
            <Trigger Property="ShowBorder" Value="False">
                <Setter Property="Visibility" TargetName="PART_Background" Value="Collapsed" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="False" />
                    <Condition Property="IsPressed" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{Binding Path=TemplateProvider.NormalForeground, RelativeSource={RelativeSource Self}}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    

    <dxcore_unique_xmlns:CommonHeaderItemControlTemplateProvider x:Key="{dxt:DXWindowThemeKey ResourceKey=HeaderItemControlCommonTemplateProvider}" MaximizeGlyphTemplate="{StaticResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerMaximizeButtonGlyph}}" MinimizeGlyphTemplate="{StaticResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerMinimizeButtonGlyph}}" MouseOverBackgroundTemplate="{StaticResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonBackgroundMouseOverState}}" MouseOverForeground="{StaticResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonForegroundMouseOverState}}" NormalBackgroundTemplate="{StaticResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonBackgroundNormalState}}" NormalForeground="{StaticResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonForegroundNormalState}}" PressedBackgroundTemplate="{StaticResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonBackgroundPressedState}}" PressedForeground="{StaticResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonForegroundPressedState}}" RestoreGlyphTemplate="{StaticResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerRestoreButtonGlyph}}" />

    

    <dxcore_unique_xmlns:CloseHeaderItemControlTemplateProvider x:Key="{dxt:DXWindowThemeKey ResourceKey=HeaderItemControlCloseTemplateProvider}" CloseGlyphTemplate="{StaticResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonGlyph}}" MouseOverBackgroundTemplate="{StaticResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonBackgroundMouseOverState}}" MouseOverForeground="{StaticResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonForegroundMouseOverState}}" NormalBackgroundTemplate="{StaticResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonBackgroundNormalState}}" NormalForeground="{StaticResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonForegroundNormalState}}" PressedBackgroundTemplate="{StaticResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonBackgroundPressedState}}" PressedForeground="{StaticResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonForegroundPressedState}}" />

</ResourceDictionary>