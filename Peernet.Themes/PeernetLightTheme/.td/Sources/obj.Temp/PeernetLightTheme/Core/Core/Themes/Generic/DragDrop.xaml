<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxcore_unique_xmlns="http://schemas.devexpress.com/winfx/2008/xaml/core">

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DropMarker}" TargetType="dx:DropMarker">
        <Style.Setters><Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Core\Core\Themes\Generic\DragDrop.xaml;9;6" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="dx:DropMarker">
                        <Grid Margin="{TemplateBinding Padding}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\DragDrop.xaml;14;26">
                            <dx:DXBorder x:Name="background" Background="#FF2DB2FF" Opacity="0.2" Visibility="Collapsed" cs:id="Border_0000" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\DragDrop.xaml;15;30" />
                            <Grid Margin="0,-2,0,-2" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\DragDrop.xaml;20;30">
                                <dx:DXBorder x:Name="marker" Background="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DropMarkerBackground}}" BorderBrush="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DropMarkerBorderBrush}}" BorderThickness="1" Height="4" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\DragDrop.xaml;21;34" />
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Position" Value="Before">
                                <Trigger.Setters>
                                    <Setter Property="VerticalAlignment" TargetName="marker" Value="Top" />
                                </Trigger.Setters>
                            </Trigger>
                            <Trigger Property="Position" Value="After">
                                <Trigger.Setters>
                                    <Setter Property="VerticalAlignment" TargetName="marker" Value="Bottom" />
                                </Trigger.Setters>
                            </Trigger>
                            <Trigger Property="Position" Value="Inside">
                                <Trigger.Setters>
                                    <Setter Property="Visibility" TargetName="marker" Value="Collapsed" />
                                    <Setter Property="Visibility" TargetName="background" Value="Visible" />
                                </Trigger.Setters>
                            </Trigger>
                            <Trigger Property="Position" Value="Append">
                                <Trigger.Setters>
                                    <Setter Property="Visibility" TargetName="marker" Value="Collapsed" />
                                    <Setter Property="Background" TargetName="background" Value="#FF89C841" cs:id="Setter_0000" />
                                    <Setter Property="Visibility" TargetName="background" Value="Visible" />
                                </Trigger.Setters>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="IsHitTestVisible" Value="False" />
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Trigger.Setters>
                    <Setter Property="LayoutTransform">
                        <Setter.Value>
                            <RotateTransform Angle="-90" />
                        </Setter.Value>
                    </Setter>
                </Trigger.Setters>
            </Trigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="{dxt:DragDropThemeKey ResourceKey=DropMarker}">
        <dxcore_unique_xmlns:DropMarker Orientation="{Binding Orientation}" Padding="{Binding Padding}" Position="{Binding Position}" />
    </DataTemplate>

    <DataTemplate x:Key="{dxt:DragDropThemeKey ResourceKey=DragDropHintDetail}">
        <TextBlock Text="{Binding}" TextTrimming="WordEllipsis" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\DragDrop.xaml;93;10" />
    </DataTemplate>

    <DataTemplate x:Key="{dxt:DragDropThemeKey ResourceKey=DragHintTargetInfo}">
        <ContentPresenter Content="{Binding}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\DragDrop.xaml;97;10">
            <ContentPresenter.Style>
                <Style x:Key="{dxt:DefaultStyleThemeKey FullName=ContentPresenter}" TargetType="ContentPresenter">
                    <Style.Setters><Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Core\Core\Themes\Generic\DragDrop.xaml;99;18" />
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <StackPanel dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\DragDrop.xaml;104;38">
                                        <TextBlock FontSize="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintCaptionFontSize}}" FontWeight="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintCaptionFontWeight}}" Foreground="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintCaptionForeground}}" Text="{Binding Path=DropPosition, Converter={dx:DropPositionConverter}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\DragDrop.xaml;105;42" />
                                        <ContentPresenter Content="{Binding TargetRecord}" ContentTemplate="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragDropHintDetail}}" Margin="0,3,0,0" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\DragDrop.xaml;109;42">
                                            <ContentPresenter.Style>
                                                <Style x:Key="{dxt:DefaultStyleThemeKey FullName=ContentPresenter}" TargetType="ContentPresenter">
                                                    <Style.Setters><Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Core\Core\Themes\Generic\DragDrop.xaml;113;50" />
                                                        <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintDescriptionForeground}}" />
                                                    </Style.Setters>
                                                    <Style.Triggers>
                                                        <Trigger Property="Content" Value="{x:Null}">
                                                            <Trigger.Setters>
                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                            </Trigger.Setters>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ContentPresenter.Style>
                                        </ContentPresenter>
                                    </StackPanel>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style.Setters>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Effects}" Value="None">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <TextBlock FontSize="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintCaptionFontSize}}" FontWeight="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintCaptionFontWeight}}" Foreground="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintCaptionForeground}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\DragDrop.xaml;137;42">
                                            <TextBlock.Text>
                                                <Binding ConverterParameter="DragDropCannotDrop" RelativeSource="{RelativeSource Self}">
                                                    <Binding.Converter>
                                                        <dxcore_unique_xmlns:EditorStringIdConverter />
                                                    </Binding.Converter>
                                                </Binding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentPresenter.Style>
        </ContentPresenter>
    </DataTemplate>

    <DataTemplate x:Key="{dxt:DragDropThemeKey ResourceKey=DragDropHint}">
        <dx:DXBorder Background="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintBackground}}" BorderBrush="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintBorderBrush}}" BorderThickness="1" CornerRadius="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintCornerRadius}}" MaxWidth="300" MinWidth="200" Padding="12,8,24,10" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\DragDrop.xaml;159;10">
            <StackPanel dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\DragDrop.xaml;166;14">
                <TextBlock x:Name="dragHeader" FontSize="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintCaptionFontSize}}" FontWeight="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintCaptionFontWeight}}" Foreground="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintCaptionForeground}}" Text="{Binding Path=Records, Converter={dx:DragHeaderConverter}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\DragDrop.xaml;167;18" />
                <ContentPresenter x:Name="dragDetail" Content="{Binding Path=Records, Converter={dx:DragDetailConverter}}" ContentTemplate="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragDropHintDetail}}" Margin="0,3,0,0" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\DragDrop.xaml;172;18">
                    <ContentPresenter.Style>
                        <Style x:Key="{dxt:DefaultStyleThemeKey FullName=ContentPresenter}" TargetType="ContentPresenter">
                            <Style.Setters><Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Core\Core\Themes\Generic\DragDrop.xaml;177;26" />
                                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintDescriptionForeground}}" />
                            </Style.Setters>
                            <Style.Triggers>
                                <Trigger Property="Content" Value="{x:Null}">
                                    <Trigger.Setters>
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </Trigger.Setters>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ContentPresenter.Style>
                </ContentPresenter>
                <ContentPresenter Content="{Binding}" ContentTemplate="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintTargetInfo}}" Margin="0,8,0,0" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Generic\DragDrop.xaml;191;18">
                    <ContentPresenter.Visibility>
                        <Binding Path="ShowTargetInfoInDragDropHint">
                            <Binding.Converter>
                                <dxcore_unique_xmlns:BooleanToVisibilityConverter />
                            </Binding.Converter>
                        </Binding>
                    </ContentPresenter.Visibility>
                </ContentPresenter>
            </StackPanel>
        </dx:DXBorder>
    </DataTemplate>

</ResourceDictionary>