<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxcore_unique_xmlns="http://schemas.devexpress.com/winfx/2008/xaml/core">

    <ResourceDictionary.MergedDictionaries>
        <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.PeernetLightTheme.v22.2;component/Core/Core/Editors/Themes/Generic/Common.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Thickness x:Key="{dxet:ButtonsThemeKey ResourceKey=DateEditButtonPadding}">0</Thickness>

    <CornerRadius x:Key="{dxet:ButtonsThemeKey ResourceKey=CornerRadius}">0</CornerRadius>

    <Thickness x:Key="{dxet:ButtonsThemeKey ResourceKey=Padding}">0</Thickness>

    <Thickness x:Key="{dxet:ButtonsThemeKey ResourceKey=DefaultBorderThickness}">1,1,1,1</Thickness>

    <sys:Boolean x:Key="{dxet:ButtonsThemeKey ResourceKey=DateEditUseArrowGlyph}">True</sys:Boolean>

    <dxcore_unique_xmlns:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />

    <Thickness x:Key="{dxet:ButtonEditThemeKey ResourceKey=ButtonEditPaddingCorrection}">0,0,0,0</Thickness>

    <Thickness x:Key="{dxet:ButtonEditThemeKey ResourceKey=ButtonEditPadding}">0</Thickness>

    <Thickness x:Key="{dxet:ButtonsThemeKey ResourceKey=LeftButtonMargin}">0,0,1,0</Thickness>

    <Thickness x:Key="{dxet:ButtonsThemeKey ResourceKey=RightButtonMargin}">1,0,0,0</Thickness>

    <Thickness x:Key="{dxet:ButtonsThemeKey ResourceKey=LeftButtonMarginCorrection}">0</Thickness>

    <Thickness x:Key="{dxet:ButtonsThemeKey ResourceKey=RightButtonMarginCorrection}">0</Thickness>

    <Thickness x:Key="{dxet:ButtonsThemeKey ResourceKey=ButtonMargin}">-1</Thickness>

    <Thickness x:Key="{dxet:ButtonsThemeKey ResourceKey=ButtonMarginCorrection}">0</Thickness>

    <Style x:Key="{dxet:ButtonsThemeKey ResourceKey=ImageButtonGlyphStyle}" TargetType="{x:Type Image}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;46;6" /><Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
    </Style>

    <Style x:Key="{dxet:BrowsePathThemeKey ResourceKey=IconStyle}" TargetType="{x:Type dx:DXImage}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;51;6" /><Setter Property="Margin" Value="4,0,0,0" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin" Value="14,0,0,0" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter Property="Margin" Value="14,0,0,0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.35" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <dxei:BrushToSvgPaletteConverter x:Key="BrushToSvgPaletteConverter" />

    <DataTemplate x:Key="{dxet:ButtonsThemeKey ResourceKey=ImageButtonContentTemplate}">
        <Grid Name="root" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;71;10">
            <dxcore_unique_xmlns:DXImage x:Name="image" Source="{Binding Path=Glyph}" Style="{Binding Path=GlyphStyle}" />
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ButtonBase}}" Value="True">
                <Setter Property="dx:WpfSvgPalette.Palette" TargetName="image" Value="{Binding Path=(TextElement.Foreground), Converter={StaticResource BrushToSvgPaletteConverter}, ConverterParameter=BlackColor, RelativeSource={RelativeSource Self}}" />
            </DataTrigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinWidth" TargetName="root" Value="42" />
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="{dxet:ButtonsThemeKey ResourceKey=DateEditButtonContentTemplate}">
        <Grid Name="root" Margin="{DynamicResource {dxet:ButtonsThemeKey ResourceKey=DateEditButtonPadding}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;91;10">
            <dxcore_unique_xmlns:DXImage x:Name="image" Source="{Binding Path=Glyph}" Style="{Binding Path=GlyphStyle}" />
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ButtonBase}}" Value="True">
                <Setter Property="dx:WpfSvgPalette.Palette" TargetName="image" Value="{Binding Path=(TextElement.Foreground), Converter={StaticResource BrushToSvgPaletteConverter}, ConverterParameter=BlackColor, RelativeSource={RelativeSource Self}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxe:BaseEdit.OwnerEdit).EditMode, RelativeSource={RelativeSource Self}}" Value="InplaceInactive">
                <Setter Property="dx:WpfSvgPalette.Palette" TargetName="image" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).Foreground, Converter={StaticResource BrushToSvgPaletteConverter}, ConverterParameter=BlackColor, RelativeSource={RelativeSource Self}}" />
            </DataTrigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinWidth" TargetName="root" Value="42" />
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="{dxet:ButtonsThemeKey ResourceKey=ButtonInfoTemplate}">
        <dx:DXBorder Margin="{Binding Path=ActualMargin}" UseLayoutRounding="True" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;116;10">
            <Button x:Name="PART_Item" Style="{Binding Path=ButtonStyle}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;117;14" />
        </dx:DXBorder>
    </DataTemplate>

    <DataTemplate x:Key="{dxet:ButtonsThemeKey ResourceKey=RepeatButtonInfoTemplate}">
        <dx:DXBorder Margin="{Binding Path=ActualMargin}" UseLayoutRounding="True" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;122;10">
            <RepeatButton x:Name="PART_Item" Style="{Binding Path=ButtonStyle}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;123;14" />
        </dx:DXBorder>
    </DataTemplate>

    <DataTemplate x:Key="{dxet:ButtonsThemeKey ResourceKey=ToggleButtonInfoTemplate}">
        <dx:DXBorder Margin="{Binding Path=ActualMargin}" UseLayoutRounding="True" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;128;10">
            <dxcore_unique_xmlns:ToggleStateButton x:Name="PART_Item" dxei:SetIsCheckedToButtonInfoBehavior.IsEnabled="True" IsChecked="{Binding Path=IsChecked, Mode=TwoWay}" Style="{Binding Path=ButtonStyle}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;129;14" />
        </dx:DXBorder>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsDefaultButton}" Value="True">
                <Setter Property="IsChecked" TargetName="PART_Item" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).IsPopupOpen, RelativeSource={RelativeSource Self}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsDefaultButton}" Value="False">
                <Setter Property="HandleToggle" TargetName="PART_Item" Value="False" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <ControlTemplate x:Key="{dxet:ButtonEditThemeKey ResourceKey=TemplateWithoutEditBox}" TargetType="{x:Type dxe:ButtonEdit}">
        <ContentControl dxei:ControlHelper.IsReadOnly="{TemplateBinding IsReadOnly}" dxei:ControlHelper.ShowFocusedState="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource TemplatedParent}}" HorizontalContentAlignment="Stretch" IsTabStop="False" Template="{TemplateBinding ActualBorderTemplate}" VerticalContentAlignment="Stretch" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;149;10">
            <Grid dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;155;14">
                <dxe:EditorControl x:Name="PART_Content" IsEnabled="False" Opacity="0" Template="{TemplateBinding ActualEditorControlTemplate}" VerticalAlignment="Stretch" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;156;18" />
                <dxe:ButtonsControl x:Name="PART_Buttons" ItemsSource="{TemplateBinding SortedButtons}" Visibility="{Binding ShowEditorButtons, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;161;18">
                    <dxe:ButtonsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <dxe:ButtonsPanel dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;166;30" />
                        </ItemsPanelTemplate>
                    </dxe:ButtonsControl.ItemsPanel>
                </dxe:ButtonsControl>
            </Grid>
        </ContentControl>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:ButtonEditThemeKey ResourceKey=InplaceTemplateWithoutEditBox}" TargetType="{x:Type dxe:ButtonEdit}">
        <Grid dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;175;10">
            <dxe:EditorControl x:Name="PART_Content" IsEnabled="False" Opacity="0" Template="{TemplateBinding ActualEditorControlTemplate}" VerticalAlignment="Stretch" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;176;14" />
            <dxe:ButtonsControl x:Name="PART_Buttons" ItemsSource="{TemplateBinding SortedButtons}" Visibility="{Binding ShowEditorButtons, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;181;14">
                <dxe:ButtonsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <dxe:ButtonsPanel dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;186;26" />
                    </ItemsPanelTemplate>
                </dxe:ButtonsControl.ItemsPanel>
            </dxe:ButtonsControl>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:ButtonEditThemeKey ResourceKey=Template}" TargetType="{x:Type dxe:ButtonEdit}">
        <ContentControl x:Name="PART_Root" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" dxcore_unique_xmlns:FocusHelper2.Focusable="False" dxe:EditorAppearanceProperties.FocusedBorderBrush="{Binding Path=(dxe:EditorAppearanceProperties.FocusedBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" dxe:EditorAppearanceProperties.ReadOnlyBackground="{Binding Path=(dxe:EditorAppearanceProperties.ReadOnlyBackground), RelativeSource={RelativeSource TemplatedParent}}" dxe:EditorAppearanceProperties.ReadOnlyBorderBrush="{Binding Path=(dxe:EditorAppearanceProperties.ReadOnlyBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" dxei:ControlHelper.IsReadOnly="{TemplateBinding IsReadOnly}" dxei:ControlHelper.ShowFocusedState="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource TemplatedParent}}" dxi:AppearanceOptions.BorderThickness="{Binding Path=(dxi:AppearanceOptions.BorderThickness), RelativeSource={RelativeSource TemplatedParent}}" dxi:AppearanceOptions.CornerRadius="{Binding Path=(dxi:AppearanceOptions.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" dxi:AppearanceOptions.HasBorderThickness="{Binding Path=(dxi:AppearanceOptions.HasBorderThickness), RelativeSource={RelativeSource TemplatedParent}}" dxi:AppearanceOptions.HasCornerRadius="{Binding Path=(dxi:AppearanceOptions.HasCornerRadius), RelativeSource={RelativeSource TemplatedParent}}" HorizontalContentAlignment="Stretch" Template="{TemplateBinding ActualBorderTemplate}" VerticalContentAlignment="Stretch" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;194;10">
            <Grid x:Name="ButtonEditGrid" SnapsToDevicePixels="True" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;211;14">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <dxe:ErrorControl x:Name="PART_ErrorPresenter" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;218;18" />
                <dxe:ButtonsControl x:Name="PART_LeftButtons" Grid.Column="1" ItemsSource="{TemplateBinding LeftButtons}" Visibility="{Binding Path=ActualShowLeftButtons, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;219;18" />
                <dxe:EditorControl x:Name="PART_Content" dxcore_unique_xmlns:FocusHelper2.Focusable="False" Grid.Column="2" Template="{TemplateBinding ActualEditorControlTemplate}" VerticalAlignment="Stretch" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;223;18" />
                <dxe:ButtonsControl x:Name="PART_RightButtons" Grid.Column="3" ItemsSource="{TemplateBinding RightButtons}" Visibility="{Binding Path=ActualShowRightButtons, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;228;18" />
            </Grid>
        </ContentControl>
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).IsTextEditable, RelativeSource={RelativeSource Self}}" Value="true" />
                    <Condition Binding="{Binding Path=EditMode, RelativeSource={RelativeSource Self}}" Value="Standalone" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Template" TargetName="PART_Content" Value="{Binding Path=EditTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).IsTextEditable, RelativeSource={RelativeSource Self}}" Value="false" />
                    <Condition Binding="{Binding Path=EditMode, RelativeSource={RelativeSource Self}}" Value="Standalone" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Template" TargetName="PART_Content" Value="{Binding Path=EditNonEditableTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding Path=ShowBorder, RelativeSource={RelativeSource Self}}" Value="true">
                <Setter Property="dx:WpfSvgPalette.Palette" TargetName="PART_ErrorPresenter" Value="{DynamicResource {dxet:InplaceBaseEditThemeKey ResourceKey=ValidationErrorSvgPalette}}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <DataTemplate x:Key="{dxet:ButtonsThemeKey ResourceKey=SpinButtonInfoVerticalTemplate}">
        <dx:DXBorder Margin="{Binding Path=ActualMargin}" UseLayoutRounding="True" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;266;10">
            <Grid x:Name="MainGrid" Height="Auto" SnapsToDevicePixels="True" Style="{DynamicResource {dxet:ButtonsThemeKey ResourceKey=SpinButtonInfoVerticalStyle}}" Visibility="{Binding Path=Visibility}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;267;14">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <dxe:SpinButton x:Name="PART_SpinUpButton" ClickMode="{Binding Path=ClickMode}" Command="{Binding ActualSpinUpCommand}" CommandParameter="{Binding SpinUpCommandParameter}" ContentTemplate="{DynamicResource {dxet:ButtonsThemeKey ResourceKey=SpinUpGlyph}}" dxcore_unique_xmlns:FocusHelper2.Focusable="False" Foreground="{Binding Path=Foreground}" Grid.Row="0" Interval="500" IsEnabled="{Binding IsEnabled}" Template="{DynamicResource {dxet:ButtonsThemeKey ResourceKey=SpinUpButtonTemplate}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;276;18">
                    <dxe:SpinButton.CommandTarget>
                        <Binding Path="SpinUpCommandTarget" />
                    </dxe:SpinButton.CommandTarget>
                </dxe:SpinButton>
                <dxe:SpinButton x:Name="PART_SpinDownButton" ClickMode="{Binding Path=ClickMode}" Command="{Binding ActualSpinDownCommand}" CommandParameter="{Binding SpinDownCommandParameter}" ContentTemplate="{DynamicResource {dxet:ButtonsThemeKey ResourceKey=SpinDownGlyph}}" dxcore_unique_xmlns:FocusHelper2.Focusable="False" Foreground="{Binding Path=Foreground}" Grid.Row="1" Interval="500" IsEnabled="{Binding IsEnabled}" Template="{DynamicResource {dxet:ButtonsThemeKey ResourceKey=SpinDownButtonTemplate}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;291;18">
                    <dxe:SpinButton.CommandTarget>
                        <Binding Path="SpinDownCommandTarget" />
                    </dxe:SpinButton.CommandTarget>
                </dxe:SpinButton>
            </Grid>
        </dx:DXBorder>
    </DataTemplate>

    <DataTemplate x:Key="{dxet:ButtonsThemeKey ResourceKey=SpinButtonInfoHorizontalTemplate}">
        <dx:DXBorder Margin="{Binding Path=ActualMargin}" UseLayoutRounding="True" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;311;10">
            <Grid x:Name="MainGrid" Height="Auto" Style="{DynamicResource {dxet:ButtonsThemeKey ResourceKey=SpinButtonInfoHorizontalStyle}}" Visibility="{Binding Path=Visibility}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;312;14">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <dxe:SpinButton x:Name="PART_SpinDownButton" ClickMode="{Binding Path=ClickMode}" Command="{Binding ActualSpinDownCommand}" CommandParameter="{Binding SpinDownCommandParameter}" ContentTemplate="{DynamicResource {dxet:ButtonsThemeKey ResourceKey=SpinLeftGlyph}}" dxcore_unique_xmlns:FocusHelper2.Focusable="False" Foreground="{Binding Path=Foreground}" Grid.Column="0" Interval="500" IsEnabled="{Binding IsEnabled}" Template="{DynamicResource {dxet:ButtonsThemeKey ResourceKey=SpinLeftButtonTemplate}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;320;18">
                    <dxe:SpinButton.CommandTarget>
                        <Binding Path="SpinDownCommandTarget" />
                    </dxe:SpinButton.CommandTarget>
                </dxe:SpinButton>
                <dxe:SpinButton x:Name="PART_SpinUpButton" ClickMode="{Binding Path=ClickMode}" Command="{Binding ActualSpinUpCommand}" CommandParameter="{Binding SpinUpCommandParameter}" ContentTemplate="{DynamicResource {dxet:ButtonsThemeKey ResourceKey=SpinRightGlyph}}" dxcore_unique_xmlns:FocusHelper2.Focusable="False" Foreground="{Binding Path=Foreground}" Grid.Column="1" Interval="500" IsEnabled="{Binding IsEnabled}" Template="{DynamicResource {dxet:ButtonsThemeKey ResourceKey=SpinRightButtonTemplate}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;335;18">
                    <dxe:SpinButton.CommandTarget>
                        <Binding Path="SpinUpCommandTarget" />
                    </dxe:SpinButton.CommandTarget>
                </dxe:SpinButton>
            </Grid>
        </dx:DXBorder>
    </DataTemplate>

    <DataTemplate x:Key="{dxet:ButtonsThemeKey ResourceKey=DeleteButtonInfoTemplate}">
        <dx:DXBorder Margin="{Binding Path=ActualMargin}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;355;10">
            <dxe:ButtonClose x:Name="PART_Item" Style="{DynamicResource {dxet:ButtonsThemeKey ResourceKey=DeleteButtonStyle}}" />
        </dx:DXBorder>
    </DataTemplate>

    <DataTemplate x:Key="{dxet:ButtonsThemeKey ResourceKey=LoadingButtonInfoTemplate}">
        <Button Style="{DynamicResource {dxet:ComboBoxEditThemeKey ResourceKey=LoadingButtonStyle}}" Visibility="{Binding Path=Visibility}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;361;10" />
    </DataTemplate>

    <ControlTemplate x:Key="{dxet:BrowsePathThemeKey ResourceKey=Template}" TargetType="{x:Type dxe:BrowsePathEdit}">
        <ContentControl x:Name="PART_Root" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" dxcore_unique_xmlns:FocusHelper2.Focusable="False" dxe:EditorAppearanceProperties.FocusedBorderBrush="{Binding Path=(dxe:EditorAppearanceProperties.FocusedBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" dxe:EditorAppearanceProperties.ReadOnlyBackground="{Binding Path=(dxe:EditorAppearanceProperties.ReadOnlyBackground), RelativeSource={RelativeSource TemplatedParent}}" dxe:EditorAppearanceProperties.ReadOnlyBorderBrush="{Binding Path=(dxe:EditorAppearanceProperties.ReadOnlyBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" dxei:ControlHelper.IsReadOnly="{TemplateBinding IsReadOnly}" dxei:ControlHelper.ShowFocusedState="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource TemplatedParent}}" dxi:AppearanceOptions.BorderThickness="{Binding Path=(dxi:AppearanceOptions.BorderThickness), RelativeSource={RelativeSource TemplatedParent}}" dxi:AppearanceOptions.CornerRadius="{Binding Path=(dxi:AppearanceOptions.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" dxi:AppearanceOptions.HasBorderThickness="{Binding Path=(dxi:AppearanceOptions.HasBorderThickness), RelativeSource={RelativeSource TemplatedParent}}" dxi:AppearanceOptions.HasCornerRadius="{Binding Path=(dxi:AppearanceOptions.HasCornerRadius), RelativeSource={RelativeSource TemplatedParent}}" HorizontalContentAlignment="Stretch" Template="{TemplateBinding ActualBorderTemplate}" VerticalContentAlignment="Stretch" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;365;10">
            <Grid x:Name="ButtonEditGrid" SnapsToDevicePixels="True" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;382;14">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <dxe:ErrorControl x:Name="PART_ErrorPresenter" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;390;18" />
                <dxe:ButtonsControl x:Name="PART_LeftButtons" Grid.Column="1" ItemsSource="{TemplateBinding LeftButtons}" Visibility="{Binding Path=ActualShowLeftButtons, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;391;18" />
                <dxcore_unique_xmlns:DXImage x:Name="PART_Icon" Grid.Column="2" Source="{TemplateBinding PathIcon}" Style="{DynamicResource {dxet:BrowsePathThemeKey ResourceKey=IconStyle}}" Visibility="{TemplateBinding ShowIcon, Converter={StaticResource BoolToVisibilityConverter}}" />
                <dxe:EditorControl x:Name="PART_Content" dxcore_unique_xmlns:FocusHelper2.Focusable="False" Grid.Column="3" Template="{TemplateBinding ActualEditorControlTemplate}" VerticalAlignment="Stretch" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;400;18" />
                <dxe:ButtonsControl x:Name="PART_RightButtons" Grid.Column="4" ItemsSource="{TemplateBinding RightButtons}" Visibility="{Binding Path=ActualShowRightButtons, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Editors\Themes\Generic\ButtonEdit.xaml;405;18" />
            </Grid>
        </ContentControl>
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).IsTextEditable, RelativeSource={RelativeSource Self}}" Value="true" />
                    <Condition Binding="{Binding Path=EditMode, RelativeSource={RelativeSource Self}}" Value="Standalone" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Template" TargetName="PART_Content" Value="{Binding Path=EditTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).IsTextEditable, RelativeSource={RelativeSource Self}}" Value="false" />
                    <Condition Binding="{Binding Path=EditMode, RelativeSource={RelativeSource Self}}" Value="Standalone" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Template" TargetName="PART_Content" Value="{Binding Path=EditNonEditableTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding Path=ShowBorder, RelativeSource={RelativeSource Self}}" Value="true">
                <Setter Property="dx:WpfSvgPalette.Palette" TargetName="PART_ErrorPresenter" Value="{DynamicResource {dxet:InplaceBaseEditThemeKey ResourceKey=ValidationErrorSvgPalette}}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>