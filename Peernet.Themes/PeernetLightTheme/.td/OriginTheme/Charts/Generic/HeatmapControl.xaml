<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/heatmap/themekeys" xmlns:local="http://schemas.devexpress.com/winfx/2008/xaml/heatmap" xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/charts" xmlns:core="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
  <dxc:BoolToVisibilityConverter x:Key="boolToVisibilityConverter" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.Heatmap.HeatmapControl}" TargetType="{x:Type local:HeatmapControl}">
    <Setter Property="ClipToBounds" Value="True" />
    <Setter Property="Background" Value="{DynamicResource {dxt:HeatmapBrushesThemeKey ResourceKey=BackgroundBrush}}" />
    <Setter Property="BorderBrush" Value="{DynamicResource {dxt:HeatmapBrushesThemeKey ResourceKey=BorderBrush}}" />
    <Setter Property="BorderThickness" Value="{DynamicResource {dxt:HeatmapThemeKey ResourceKey=BorderThickness}}" />
    <Setter Property="Padding" Value="{DynamicResource {dxt:HeatmapThemeKey ResourceKey=PaddingValue}}" />
    <Setter Property="FocusManager.IsFocusScope" Value="True" />
    <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Cycle" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
    <Setter Property="AutomationProperties.Name" Value="HeatmapControl" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:HeatmapControl}">
          <Grid>
            <ContentControl x:Name="Wrapper" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Template="{DynamicResource {dxt:HeatmapThemeKey ResourceKey=WrapperTemplate}}">
              <local:HeatmapElementItemsControl x:Name="HeatmapElements">
                <local:HeatmapElementItemsControl.ItemsPanel>
                  <ItemsPanelTemplate>
                    <local:HeatmapElementPanel />
                  </ItemsPanelTemplate>
                </local:HeatmapElementItemsControl.ItemsPanel>
              </local:HeatmapElementItemsControl>
            </ContentControl>
            <dxc:NavigationLayer x:Name="PART_NavigationLayer" SupportNavigationControl="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
            <local:HeatmapToolTipPanel x:Name="PART_ToolTipPanel" Focusable="False" IsHitTestVisible="False" Background="Transparent" Visibility="{Binding Path=ToolTipEnabled, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
              <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Absolute" HorizontalOffset="{Binding Path=ToolTipItem.Position.X, RelativeSource={RelativeSource TemplatedParent}}" VerticalOffset="{Binding Path=ToolTipItem.Position.Y, RelativeSource={RelativeSource TemplatedParent}}" IsOpen="{Binding Path=ToolTipItem.Visible, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" PopupAnimation="Fade">
                <Grid Background="Transparent" UseLayoutRounding="True" MinWidth="40">
                  <Grid.Effect>
                    <DropShadowEffect Direction="-90" BlurRadius="16" Opacity="0.25" ShadowDepth="4" />
                  </Grid.Effect>
                  <Border Background="{DynamicResource {dxt:HeatmapBrushesThemeKey ResourceKey=ToolTipBorder}}" Opacity="0.35" CornerRadius="4" Margin="-1" />
                  <Border Margin="1" core:BorderExtensions.ClipChild="True" CornerRadius="3" Background="{DynamicResource {dxt:HeatmapBrushesThemeKey ResourceKey=ToolTipBackground}}">
                    <ContentPresenter x:Name="PART_ToolTip" Focusable="False" HorizontalAlignment="Center" VerticalAlignment="Stretch" Margin="{Binding Path=ToolTipItem.ContentMargin, RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding Path=ToolTipItem, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding Path=ToolTipTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                  </Border>
                </Grid>
              </Popup>
            </local:HeatmapToolTipPanel>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ToolTipTemplate">
      <Setter.Value>
        <DataTemplate>
          <TextBlock Text="{Binding ToolTipText}" HorizontalAlignment="Center" Foreground="{DynamicResource {dxt:HeatmapBrushesThemeKey ResourceKey=ToolTipForeground}}" />
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.Heatmap.HeatmapPresentation}" TargetType="{x:Type local:HeatmapPresentation}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:HeatmapPresentation}">
          <Grid>
            <local:HeatmapGeometryPresentation x:Name="PART_Elements" Geometry="{Binding Path=Geometry, RelativeSource={RelativeSource TemplatedParent}}" />
            <local:HeatmapHighlightGeometryPresentation x:Name="PART_HighlightElement" Geometry="{Binding Path=Geometry, RelativeSource={RelativeSource TemplatedParent}}" />
            <local:HeatmapLabelItemsControl ItemsSource="{Binding Path=Labels, RelativeSource={RelativeSource TemplatedParent}}">
              <local:HeatmapLabelItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <local:HeatmapLabelItemsPanel Geometry="{Binding Path=Geometry, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:HeatmapPresentation}}}" />
                </ItemsPanelTemplate>
              </local:HeatmapLabelItemsControl.ItemsPanel>
            </local:HeatmapLabelItemsControl>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.Heatmap.HeatmapLabel}" TargetType="{x:Type local:HeatmapLabel}">
    <Setter Property="Foreground" Value="{DynamicResource {dxt:HeatmapBrushesThemeKey ResourceKey=LabelForeground}}" />
    <Setter Property="Padding" Value="2,0,2,0" />
    <Setter Property="ElementTemplate">
      <Setter.Value>
        <DataTemplate>
          <TextBlock Text="{Binding Text}" />
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.Heatmap.HeatmapLabelItemsControl}" TargetType="{x:Type local:HeatmapLabelItemsControl}" BasedOn="{StaticResource {x:Type ItemsControl}}">
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <local:HeatmapLabelItemsPanel />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.Heatmap.HeatmapLabelPresentation}" TargetType="{x:Type local:HeatmapLabelPresentation}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:HeatmapLabelPresentation}">
          <Border LayoutTransform="{Binding Path=Label.LayoutTransform, RelativeSource={RelativeSource TemplatedParent}}" Background="{Binding Path=Label.Background, RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="{Binding Path=Label.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="{Binding Path=Label.BorderThickness, RelativeSource={RelativeSource TemplatedParent}}" Padding="{Binding Path=Label.Padding, RelativeSource={RelativeSource TemplatedParent}}">
            <ContentPresenter Content="{Binding Path=LabelItem, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding Path=Label.ElementTemplate, RelativeSource={RelativeSource TemplatedParent}}" TextElement.FontFamily="{Binding Path=Label.FontFamily, RelativeSource={RelativeSource TemplatedParent}}" TextElement.FontSize="{Binding Path=Label.FontSize, RelativeSource={RelativeSource TemplatedParent}}" TextElement.FontStretch="{Binding Path=Label.FontStretch, RelativeSource={RelativeSource TemplatedParent}}" TextElement.FontStyle="{Binding Path=Label.FontStyle, RelativeSource={RelativeSource TemplatedParent}}" TextElement.FontWeight="{Binding Path=Label.FontWeight, RelativeSource={RelativeSource TemplatedParent}}" TextElement.Foreground="{Binding Path=Label.Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.Heatmap.HeatmapHighlightGeometryPresentation}" TargetType="{x:Type local:HeatmapHighlightGeometryPresentation}">
    <Setter Property="HighlightBrush" Value="{DynamicResource {dxt:HeatmapBrushesThemeKey ResourceKey=HighlightBrush}}" />
  </Style>
</ResourceDictionary>