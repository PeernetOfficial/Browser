<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/charts"
                    xmlns:dxct="http://schemas.devexpress.com/winfx/2008/xaml/charts/themekeys"
                    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <dxc:SelectionListRectToGeometryConverter x:Key="selectionListRectToGeometryConverter"/>

    <Thickness x:Key="{dxct:ChartControlThemeKey ResourceKey=ChartPaddingValue}">16</Thickness>

    <Thickness x:Key="{dxct:ChartControlThemeKey ResourceKey=ChartBorderThickness}">1</Thickness>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.DropTargetControl}" TargetType="{x:Type dxc:DropTargetControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:DropTargetControl}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="HasData">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="lblData" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DataOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="lblHighlighted" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="lblData"
                                Background="Gray"
                                BorderBrush="Gray"
                                BorderThickness="1"
                                Visibility="Collapsed"
                                cs:id="Border_0001"/>
                        <Border x:Name="lblHighlighted"
                                Background="LightGray"
                                BorderBrush="Gray"
                                BorderThickness="1"
                                Visibility="Collapsed"
                                cs:id="Border_0002"/>
                        <Label x:Name="lblEmpty"
                               Background="Transparent"
                               BorderBrush="Gray"
                               BorderThickness="1"
                               Content="{TemplateBinding Content}"
                               HorizontalContentAlignment="Center"
                               cs:id="Label_0001"/>
                        <Label AllowDrop="True" MinHeight="16"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.SelectionControl}" TargetType="{x:Type dxc:SelectionControl}">
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxc:SelectionControl">
                    <Grid x:Name="root" Visibility="Collapsed">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Highlighted">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="root" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimation Duration="0:0:0"
                                                        Storyboard.TargetName="shape"
                                                        Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                        To="#20FF0000"
                                                        cs:id="ColorAnimation_0000"/>
                                        <ColorAnimation Duration="0:0:0"
                                                        Storyboard.TargetName="shape"
                                                        Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)"
                                                        To="#FFFF0000"
                                                        cs:id="ColorAnimation_0001"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="root" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="shape"
                                   Fill="#204ACBFC"
                                   Margin="-4"
                                   RadiusX="4"
                                   RadiusY="4"
                                   Stroke="#FF4ACBFC"
                                   StrokeThickness="3"
                                   cs:id="Rectangle_0001"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.SelectionPresentation}" TargetType="{x:Type dxc:SelectionPresentation}">
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:SelectionPresentation}">
                    <Canvas x:Name="root" Visibility="Collapsed">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Highlighted">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="root" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimation Duration="0:0:0"
                                                        Storyboard.TargetName="shape"
                                                        Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                        To="#20FF0000"
                                                        cs:id="ColorAnimation_0000"/>
                                        <ColorAnimation Duration="0:0:0"
                                                        Storyboard.TargetName="shape"
                                                        Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)"
                                                        To="#FFFF0000"
                                                        cs:id="ColorAnimation_0001"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="root" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path x:Name="shape"
                              Data="{Binding Path=SelectionGeometryItem.Geometry, Converter={StaticResource selectionListRectToGeometryConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                              Fill="#204ACBFC"
                              Stroke="#FF4ACBFC"
                              StrokeThickness="3"
                              cs:id="Path_0001"/>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.SelectionGeometryControl}" TargetType="{x:Type dxc:SelectionGeometryControl}">
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:SelectionGeometryControl}">
                    <Canvas x:Name="root" Visibility="Collapsed">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Highlighted">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="root" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimation Duration="0:0:0"
                                                        Storyboard.TargetName="shape"
                                                        Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                        To="#20FF0000"
                                                        cs:id="ColorAnimation_0000"/>
                                        <ColorAnimation Duration="0:0:0"
                                                        Storyboard.TargetName="shape"
                                                        Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)"
                                                        To="#FFFF0000"
                                                        cs:id="ColorAnimation_0001"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="root" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path x:Name="shape"
                              Data="{Binding Path=Geometry, Converter={StaticResource selectionListRectToGeometryConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                              Fill="#204ACBFC"
                              Stroke="#FF4ACBFC"
                              StrokeThickness="3"
                              cs:id="Path_0001"/>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.NavigationLayer}" TargetType="{x:Type dxc:NavigationLayer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:NavigationLayer}">
                    <Grid IsHitTestVisible="False">
                        <ContentPresenter x:Name="PART_Selection" ContentTemplate="{Binding SelectionTemplate, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Canvas>
                            <Image x:Name="PART_Cursor"
                                   Cursor="None"
                                   HorizontalAlignment="Left"
                                   IsHitTestVisible="False"
                                   Stretch="None"
                                   VerticalAlignment="Top"/>
                        </Canvas>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="BreadcrumbItemDefaultTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Path x:Name="PART_HomeImage"
                  Data="M8,1 L1,8 L3,8 L3,14 L7,14 L7,10 L9,10 L9,14 L13,14 L13,8 L15,8 L8,1z"
                  Fill="Transparent"
                  Height="16"
                  StrokeThickness="1.5"
                  VerticalAlignment="Center"
                  Visibility="{Binding IsHome, Converter={dxmvvm:BooleanToVisibilityConverter}}"
                  Width="16"
                  cs:id="Path_0000">
                <Path.Style>
                    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=Path}" TargetType="{x:Type Path}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" Value="{DynamicResource ResourceKey={dxct:ChartBrushesThemeKey ResourceKey=BreadcrumbHoverForeground}}"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding IsNotLast}" Value="false">
                                <Setter Property="Stroke" Value="{DynamicResource ResourceKey={dxct:ChartBrushesThemeKey ResourceKey=BreadcrumbForeground}}"/>
                            </DataTrigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter Property="Stroke" Value="{DynamicResource ResourceKey={dxct:ChartBrushesThemeKey ResourceKey=BreadcrumbForeground}}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Path.Style>
            </Path>
            <TextBlock x:Name="PART_Text"
                       Grid.Column="1"
                       Text="{Binding Text}"
                       VerticalAlignment="Center"
                       Visibility="{Binding IsHome, Converter={dxmvvm:BooleanToVisibilityConverter Inverse=True}}">
                <TextBlock.Style>
                    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=TextBlock}" TargetType="{x:Type TextBlock}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxct:ChartBrushesThemeKey ResourceKey=BreadcrumbHoverForeground}}"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding IsNotLast}" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxct:ChartBrushesThemeKey ResourceKey=BreadcrumbForeground}}"/>
                            </DataTrigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxct:ChartBrushesThemeKey ResourceKey=BreadcrumbForeground}}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <Path x:Name="PART_Arrow"
                  Data="{DynamicResource {dxct:ChartControlThemeKey ResourceKey=BreadcrumbArrowGeometry}}"
                  Fill="{DynamicResource ResourceKey={dxct:ChartBrushesThemeKey ResourceKey=BreadcrumbForeground}}"
                  Grid.Column="2"
                  Margin="10,0,10,0"
                  VerticalAlignment="Center"
                  Visibility="{Binding IsNotLast, Converter={dxmvvm:BooleanToVisibilityConverter}}"/>
        </Grid>
    </DataTemplate>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.ChartControl}" TargetType="{x:Type dxc:ChartControl}">
        <Setter Property="ClipToBounds" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource {dxct:ChartBrushesThemeKey ResourceKey=ChartBackgroundBrush}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {dxct:ChartBrushesThemeKey ResourceKey=ChartBorderBrush}}"/>
        <Setter Property="BorderThickness" Value="{DynamicResource {dxct:ChartControlThemeKey ResourceKey=ChartBorderThickness}}"/>
        <Setter Property="Padding" Value="{DynamicResource {dxct:ChartControlThemeKey ResourceKey=ChartPaddingValue}}"/>
        <Setter Property="CrosshairSeriesLabelItemTemplate" Value="{DynamicResource {dxct:ChartControlThemeKey ResourceKey=CrosshairSeriesLabelTemplate}}"/>
        <Setter Property="CrosshairSeriesLabelPrintingTemplate" Value="{DynamicResource {dxct:ChartControlThemeKey ResourceKey=CrosshairSeriesLabelPrintingTemplate}}"/>
        <Setter Property="FocusManager.IsFocusScope" Value="True"/>
        <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Cycle"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once"/>
        <Setter Property="AutomationProperties.Name" Value="ChartControl"/>
        <Setter Property="BreadcrumbItemTemplate" Value="{StaticResource ResourceKey=BreadcrumbItemDefaultTemplate}"/>
        <Setter Property="Palette">
            <Setter.Value>
                <dxc:OfficePalette/>
            </Setter.Value>
        </Setter>
        <Setter Property="IndicatorsPalette">
            <Setter.Value>
                <dxc:DefaultIndicatorsPalette/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:ChartControl}">
                    <dxc:ChartBaseLayoutElement>
                        <dxc:ChartContentControl x:Name="ChartWrapper"
                                                 Background="{TemplateBinding Background}"
                                                 BorderBrush="{TemplateBinding BorderBrush}"
                                                 BorderThickness="{TemplateBinding BorderThickness}"
                                                 Padding="{TemplateBinding Padding}"
                                                 Template="{DynamicResource {dxct:ChartControlThemeKey ResourceKey=ChartWrapperTemplate}}">
                            <DockPanel LastChildFill="True">
                                <dxc:ChartBreadcrumbControl DockPanel.Dock="Top"
                                                            HorizontalAlignment="Left"
                                                            ItemsSource="{Binding Path=Diagram.BreadcrumbItems, RelativeSource={RelativeSource TemplatedParent}}"
                                                            Visibility="{Binding Path=Diagram.IsDrillDownEnabled, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter}}"/>
                                <dxc:TitlesLayoutControl Titles="{Binding Path=Titles, RelativeSource={RelativeSource TemplatedParent}}">
                                    <dxc:TitlesLayoutControl.MasterElement>
                                        <dxc:ChartElementItemsControl x:Name="ChartElements" Diagram="{TemplateBinding Diagram}">
                                            <dxc:ChartElementItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <dxc:ChartElementPanel/>
                                                </ItemsPanelTemplate>
                                            </dxc:ChartElementItemsControl.ItemsPanel>
                                        </dxc:ChartElementItemsControl>
                                    </dxc:TitlesLayoutControl.MasterElement>
                                </dxc:TitlesLayoutControl>
                            </DockPanel>
                        </dxc:ChartContentControl>
                        <dxc:ChartItemsControl x:Name="PART_Annotations" ItemsSource="{Binding ChartAnnotations, RelativeSource={RelativeSource TemplatedParent}}">
                            <dxc:ChartItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <dxc:AnnotationLayoutPanel/>
                                </ItemsPanelTemplate>
                            </dxc:ChartItemsControl.ItemsPanel>
                        </dxc:ChartItemsControl>
                        <dxc:NavigationLayer x:Name="PART_NavigationLayer" SupportNavigationControl="{Binding RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Grid x:Name="PART_CrosshairLabelsContainer"
                              DataContext="{Binding Path=Diagram, RelativeSource={RelativeSource TemplatedParent}}"
                              IsHitTestVisible="False">
                            <dxc:ChartItemsControl ItemsSource="{Binding CrosshairAxisLabelItems}">
                                <dxc:ChartItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <dxc:CrosshairAxisLabelsPanel/>
                                    </ItemsPanelTemplate>
                                </dxc:ChartItemsControl.ItemsPanel>
                                <dxc:ChartItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <ContentPresenter Content="{Binding}" ContentTemplate="{DynamicResource {dxct:ChartControlThemeKey ResourceKey=CrosshairAxisLabelTemplate}}"/>
                                    </DataTemplate>
                                </dxc:ChartItemsControl.ItemTemplate>
                            </dxc:ChartItemsControl>
                            <dxc:ChartItemsControl ItemsSource="{Binding CrosshairSeriesLabelItems}" ItemTemplate="{Binding CrosshairSeriesLabelItemTemplate, RelativeSource={RelativeSource TemplatedParent}}">
                                <dxc:ChartItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <dxc:CrosshairLabelsPanel AutomationProperties.AutomationId="Crosshair"/>
                                    </ItemsPanelTemplate>
                                </dxc:ChartItemsControl.ItemsPanel>
                            </dxc:ChartItemsControl>
                        </Grid>
                        <dxc:ToolTipControl x:Name="PART_ToolTip"
                                            DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                            ToolTipItem="{Binding Path=ToolTipItem, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </dxc:ChartBaseLayoutElement>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.BreadcrumbItemPresentation}" TargetType="dxc:BreadcrumbItemPresentation">
        <Setter Property="ContentTemplate" Value="{Binding RelativeSource={RelativeSource AncestorType=dxc:ChartControl}, Path=BreadcrumbItemTemplate}"/>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.ChartBreadcrumbControl}" TargetType="{x:Type dxc:ChartBreadcrumbControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <dxc:ChartBreadcrumbItemsControl x:Name="PART_ChartBreadcrumbItemsControl"
                                                     Background="Transparent"
                                                     ItemsSource="{Binding Path=ItemsSource, RelativeSource={RelativeSource TemplatedParent}}"
                                                     cs:id="ChartBreadcrumbItemsControl_0000">
                        <dxc:ChartBreadcrumbItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel x:Name="chartBreadcrumbControlPanel" Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </dxc:ChartBreadcrumbItemsControl.ItemsPanel>
                    </dxc:ChartBreadcrumbItemsControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>