<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
                    xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking"
                    xmlns:dxdop="http://schemas.devexpress.com/winfx/2008/xaml/docking/platform"
                    xmlns:dxdot="http://schemas.devexpress.com/winfx/2008/xaml/docking/themekeys"
                    xmlns:dxdove="http://schemas.devexpress.com/winfx/2008/xaml/docking/visualelements"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.VisualElements.AutoHideTray}" TargetType="{x:Type dxdove:AutoHideTray}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Template" Value="{DynamicResource {dxdot:AutoHideTrayElementsThemeKey ResourceKey=Template}}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <dxdove:psvStackPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background"
                Value="Transparent"
                cs:id="Setter_0000"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {dxdot:DockPaneElementsThemeKey ResourceKey=BorderBrush}}"/>
        <Setter Property="BorderThickness" Value="{DynamicResource {dxdot:AutoHideTrayElementsThemeKey ResourceKey=BorderThickness}}"/>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.VisualElements.AutoHideTrayHeadersGroup}" TargetType="{x:Type dxdove:AutoHideTrayHeadersGroup}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Template" Value="{DynamicResource {dxdot:AutoHideTrayElementsThemeKey ResourceKey=HeadersGroup}}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <dxdove:AutoHideTrayHeadersPanel Background="Transparent"
                                                     BottomMargin="{DynamicResource {dxdot:AutoHideTrayHeadersGroupElementsThemeKey ResourceKey=BottomMargin}}"
                                                     ClipToBounds="False"
                                                     LeftMargin="{DynamicResource {dxdot:AutoHideTrayHeadersGroupElementsThemeKey ResourceKey=LeftMargin}}"
                                                     RightMargin="{DynamicResource {dxdot:AutoHideTrayHeadersGroupElementsThemeKey ResourceKey=RightMargin}}"
                                                     TopMargin="{DynamicResource {dxdot:AutoHideTrayHeadersGroupElementsThemeKey ResourceKey=TopMargin}}"
                                                     cs:id="AutoHideTrayHeadersPanel_0000"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.VisualElements.AutoHidePaneHeaderItem}" TargetType="{x:Type dxdove:AutoHidePaneHeaderItem}">
        <Setter Property="Template" Value="{DynamicResource {dxdot:AutoHideTrayElementsThemeKey ResourceKey=Caption}}"/>
        <Setter Property="BorderThickness" Value="{DynamicResource {dxdot:AutoHideTrayElementsThemeKey ResourceKey=CaptionBorderThickness}}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="IsTabStop" Value="False"/>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.VisualElements.AutoHidePane}" TargetType="{x:Type dxdove:AutoHidePane}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Template" Value="{DynamicResource {dxdot:AutoHidePaneElementsThemeKey ResourceKey=Template}}"/>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.VisualElements.Splitter}" TargetType="{x:Type dxdove:Splitter}">
        <Setter Property="Template" Value="{DynamicResource {dxdot:DockElementsThemeKey ResourceKey=SplitterTemplate}}"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="ClipToBounds" Value="True"/>
        <Style.Triggers>
            <Trigger Property="ViewStyle" Value="Light">
                <Setter Property="Background" Value="{DynamicResource {dxdot:DockPaneElementsThemeKey ResourceKey=BorderBrush}}"/>
                <Setter Property="Margin" Value="-2"/>
                <Setter Property="Padding" Value="2"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.VisualElements.DockPane}" TargetType="{x:Type dxdove:DockPane}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="HeaderTemplate" Value="{DynamicResource {dxdot:DockPaneElementsThemeKey ResourceKey=Header}}"/>
        <Setter Property="ControlHostTemplate" Value="{DynamicResource {dxdot:DockPaneElementsThemeKey ResourceKey=ControlHostTemplate}}"/>
        <Setter Property="LayoutHostTemplate" Value="{DynamicResource {dxdot:DockPaneElementsThemeKey ResourceKey=LayoutHostTemplate}}"/>
        <Setter Property="DataHostTemplate" Value="{DynamicResource {dxdot:DockPaneElementsThemeKey ResourceKey=DataHostTemplate}}"/>
        <Setter Property="Template" Value="{DynamicResource {dxdot:DockPaneElementsThemeKey ResourceKey=Template}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {dxdot:DockPaneElementsThemeKey ResourceKey=BorderBrush}}"/>
        <Setter Property="FloatingActiveBorderBrush" Value="{DynamicResource {dxdot:DockPaneElementsThemeKey ResourceKey=FloatingActiveBorderBrush}}"/>
        <Setter Property="Background" Value="{DynamicResource {dxdot:DockPaneElementsThemeKey ResourceKey=Background}}"/>
        <Setter Property="BorderThickness" Value="{DynamicResource {dxdot:DockPaneElementsThemeKey ResourceKey=BorderThickness}}"/>
        <Setter Property="BorderMargin" Value="{DynamicResource {dxdot:DockPaneElementsThemeKey ResourceKey=BorderMargin}}"/>
        <Setter Property="BorderPadding" Value="{DynamicResource {dxdot:DockPaneElementsThemeKey ResourceKey=BorderPadding}}"/>
        <Setter Property="CaptionCornerRadius" Value="{DynamicResource {dxdot:DockPaneElementsThemeKey ResourceKey=CaptionCornerRadius}}"/>
        <Setter Property="FloatingCaptionCornerRadius" Value="{DynamicResource {dxdot:DockPaneElementsThemeKey ResourceKey=FloatingCaptionCornerRadius}}"/>
        <Setter Property="CaptionActiveBackground" Value="{DynamicResource {dxdot:DockPaneElementsThemeKey ResourceKey=CaptionActiveBackground}}"/>
        <Setter Property="CaptionNormalBackground" Value="{DynamicResource {dxdot:DockPaneElementsThemeKey ResourceKey=CaptionNormalBackground}}"/>
        <Setter Property="CaptionActiveForeground" Value="{DynamicResource {dxdot:DockPaneElementsThemeKey ResourceKey=CaptionActiveForeground}}"/>
        <Setter Property="CaptionNormalForeground" Value="{DynamicResource {dxdot:DockPaneElementsThemeKey ResourceKey=CaptionNormalForeground}}"/>
        <Setter Property="BarContainerMargin" Value="{DynamicResource {dxdot:DockPaneElementsThemeKey ResourceKey=BarContainerMargin}}"/>
        <Setter Property="ContentMargin" Value="{DynamicResource {dxdot:DockPaneElementsThemeKey ResourceKey=ContentMargin}}"/>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.VisualElements.GroupPane}" TargetType="{x:Type dxdove:GroupPane}">
        <Setter Property="NoBorderTemplate" Value="{DynamicResource {dxdot:GroupPaneElementsThemeKey ResourceKey=NoBorderTemplate}}"/>
        <Setter Property="GroupTemplate" Value="{DynamicResource {dxdot:GroupPaneElementsThemeKey ResourceKey=GroupTemplate}}"/>
        <Setter Property="GroupBoxTemplate" Value="{DynamicResource {dxdot:GroupPaneElementsThemeKey ResourceKey=GroupBoxTemplate}}"/>
        <Setter Property="TabbedTemplate" Value="{DynamicResource {dxdot:GroupPaneElementsThemeKey ResourceKey=TabbedTemplate}}"/>
        <Setter Property="Template" Value="{DynamicResource {dxdot:GroupPaneElementsThemeKey ResourceKey=Template}}"/>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.VisualElements.ControlItem}" TargetType="{x:Type dxdove:ControlItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="HeaderTemplate" Value="{DynamicResource {dxdot:ControlItemElementsThemeKey ResourceKey=Caption}}"/>
        <Setter Property="ContentTemplate" Value="{DynamicResource {dxdot:ControlItemElementsThemeKey ResourceKey=Control}}"/>
        <Setter Property="Template" Value="{DynamicResource {dxdot:ControlItemElementsThemeKey ResourceKey=Template}}"/>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.VisualElements.TabbedPane}" TargetType="{x:Type dxdove:TabbedPane}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="TabbedTemplate" Value="{DynamicResource {dxdot:TabbedPaneElementsThemeKey ResourceKey=TabbedTemplate}}"/>
        <Setter Property="Template" Value="{DynamicResource {dxdot:TabbedPaneElementsThemeKey ResourceKey=Template}}"/>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.VisualElements.TabbedPaneItem}" TargetType="{x:Type dxdove:TabbedPaneItem}">
        <Setter Property="Template" Value="{DynamicResource {dxdot:TabbedPaneElementsThemeKey ResourceKey=PageHeader}}"/>
        <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxdot:TabbedPaneElementsThemeKey ResourceKey=SvgPalette}}"/>
        <Setter Property="BorderThickness" Value="1,1,1,0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="IsTabStop" Value="False"/>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.VisualElements.TabbedLayoutGroupPane}" TargetType="{x:Type dxdove:TabbedLayoutGroupPane}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Template" Value="{DynamicResource {dxdot:TabbedLayoutGroupPaneElementsThemeKey ResourceKey=Template}}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <dxdove:TabHeadersPanel Background="Transparent" cs:id="TabHeadersPanel_0000"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ClipMargin" Value="{DynamicResource {dxdot:DocumentPaneElementsThemeKey ResourceKey=TabHeadersClipMargin}}"/>
        <Setter Property="TabPanelMargin" Value="{DynamicResource {dxdot:DocumentPaneElementsThemeKey ResourceKey=TabPanelMargin}}"/>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.VisualElements.TabbedLayoutGroupItem}" TargetType="{x:Type dxdove:TabbedLayoutGroupItem}">
        <Setter Property="Template" Value="{DynamicResource {dxdot:TabbedLayoutGroupPaneElementsThemeKey ResourceKey=PageHeader}}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="IsTabStop" Value="False"/>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.VisualElements.DocumentPane}" TargetType="{x:Type dxdove:DocumentPane}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="TabbedTemplate" Value="{DynamicResource {dxdot:DocumentPaneElementsThemeKey ResourceKey=TabbedTemplate}}"/>
        <Setter Property="MDITemplate" Value="{DynamicResource {dxdot:DocumentPaneElementsThemeKey ResourceKey=MDITemplate}}"/>
        <Setter Property="Template" Value="{DynamicResource {dxdot:DocumentPaneElementsThemeKey ResourceKey=Template}}"/>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.VisualElements.DocumentPaneItem}" TargetType="{x:Type dxdove:DocumentPaneItem}">
        <Setter Property="Template" Value="{DynamicResource {dxdot:DocumentPaneElementsThemeKey ResourceKey=PageHeader}}"/>
        <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxdot:TabbedPaneElementsThemeKey ResourceKey=SvgPalette}}"/>
        <Setter Property="DragOffset" Value="{DynamicResource {dxdot:DocumentPaneElementsThemeKey ResourceKey=SelectedTabDragOffset}}"/>
        <Setter Property="BorderThickness" Value="1,1,1,0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="IsTabStop" Value="False"/>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.VisualElements.Document}" TargetType="{x:Type dxdove:Document}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="ControlHostTemplate" Value="{DynamicResource {dxdot:DocumentElementsThemeKey ResourceKey=ControlHostTemplate}}"/>
        <Setter Property="LayoutHostTemplate" Value="{DynamicResource {dxdot:DocumentElementsThemeKey ResourceKey=LayoutHostTemplate}}"/>
        <Setter Property="DataHostTemplate" Value="{DynamicResource {dxdot:DocumentElementsThemeKey ResourceKey=DataHostTemplate}}"/>
        <Setter Property="Template" Value="{DynamicResource {dxdot:DocumentElementsThemeKey ResourceKey=Template}}"/>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.VisualElements.MDIDocument}" TargetType="{x:Type dxdove:MDIDocument}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="ControlHostTemplate" Value="{DynamicResource {dxdot:DocumentElementsThemeKey ResourceKey=ControlHostTemplate}}"/>
        <Setter Property="LayoutHostTemplate" Value="{DynamicResource {dxdot:DocumentElementsThemeKey ResourceKey=LayoutHostTemplate}}"/>
        <Setter Property="DataHostTemplate" Value="{DynamicResource {dxdot:DocumentElementsThemeKey ResourceKey=DataHostTemplate}}"/>
        <Setter Property="Template" Value="{DynamicResource {dxdot:DocumentPaneElementsThemeKey ResourceKey=MDIDocument}}"/>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.VisualElements.FloatDocument}" TargetType="{x:Type dxdove:FloatDocument}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="ControlHostTemplate" Value="{DynamicResource {dxdot:DocumentElementsThemeKey ResourceKey=ControlHostTemplate}}"/>
        <Setter Property="LayoutHostTemplate" Value="{DynamicResource {dxdot:DocumentElementsThemeKey ResourceKey=LayoutHostTemplate}}"/>
        <Setter Property="DataHostTemplate" Value="{DynamicResource {dxdot:DocumentElementsThemeKey ResourceKey=DataHostTemplate}}"/>
        <Setter Property="Template" Value="{DynamicResource {dxdot:DocumentElementsThemeKey ResourceKey=FloatDocument}}"/>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.VisualElements.SplitterControl}" TargetType="{x:Type dxdove:SplitterControl}">
        <Setter Property="Template" Value="{DynamicResource {dxdot:SplitterControlElementsThemeKey ResourceKey=Template}}"/>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.VisualElements.EmptySpaceControl}" TargetType="{x:Type dxdove:EmptySpaceControl}">
        <Setter Property="Template" Value="{DynamicResource {dxdot:EmptySpaceControlElementsThemeKey ResourceKey=Template}}"/>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.VisualElements.LabelControl}" TargetType="{x:Type dxdove:LabelControl}">
        <Setter Property="HeaderTemplate" Value="{DynamicResource {dxdot:LabelControlElementsThemeKey ResourceKey=Caption}}"/>
        <Setter Property="ContentTemplate" Value="{DynamicResource {dxdot:LabelControlElementsThemeKey ResourceKey=Content}}"/>
        <Setter Property="Template" Value="{DynamicResource {dxdot:LabelControlElementsThemeKey ResourceKey=Template}}"/>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.VisualElements.SeparatorControl}" TargetType="{x:Type dxdove:SeparatorControl}">
        <Setter Property="Template" Value="{DynamicResource {dxdot:SeparatorControlElementsThemeKey ResourceKey=Template}}"/>
    </Style>

    <Style x:Key="baseLayoutItemStyle" TargetType="{x:Type dxdo:BaseLayoutItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxdo:BaseLayoutItem">
                    <dxdove:MultiTemplateControl/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="IsTabStop" Value="False"/>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.BaseLayoutItem}"
           BasedOn="{StaticResource baseLayoutItemStyle}"
           TargetType="{x:Type dxdo:BaseLayoutItem}"/>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.LayoutPanel}"
           BasedOn="{StaticResource baseLayoutItemStyle}"
           TargetType="{x:Type dxdo:LayoutPanel}">
        <Setter Property="Background" Value="{DynamicResource {dxdot:DockPaneElementsThemeKey ResourceKey=Background}}"/>
        <Setter Property="AllowSelection" Value="False"/>
        <Setter Property="dxb:MergingProperties.ElementMergingBehavior" Value="InternalWithInternal"/>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.DocumentPanel}"
           BasedOn="{StaticResource baseLayoutItemStyle}"
           TargetType="{x:Type dxdo:DocumentPanel}">
        <Setter Property="Background" Value="{DynamicResource {dxdot:DocumentElementsThemeKey ResourceKey=Background}}"/>
        <Setter Property="AllowSelection" Value="False"/>
        <Setter Property="dxb:MergingProperties.ElementMergingBehavior" Value="InternalWithInternal"/>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.LayoutGroup}"
           BasedOn="{StaticResource baseLayoutItemStyle}"
           TargetType="{x:Type dxdo:LayoutGroup}">
        <Setter Property="AllowFloat" Value="False"/>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.TabbedGroup}"
           BasedOn="{StaticResource baseLayoutItemStyle}"
           TargetType="{x:Type dxdo:TabbedGroup}">
        <Setter Property="AllowFloat" Value="True"/>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.DocumentGroup}"
           BasedOn="{StaticResource baseLayoutItemStyle}"
           TargetType="{x:Type dxdo:DocumentGroup}">
        <Setter Property="AllowFloat" Value="False"/>
        <Setter Property="ShowTabForSinglePage" Value="True"/>
        <Setter Property="ShowWhenEmpty" Value="True"/>
        <Setter Property="dx:ScrollBarExtensions.AllowMouseScrolling" Value="False"/>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.FloatGroup}"
           BasedOn="{StaticResource baseLayoutItemStyle}"
           TargetType="{x:Type dxdo:FloatGroup}">
        <Setter Property="AllowFloat" Value="True"/>
        <Setter Property="FocusManager.IsFocusScope" Value="True"/>
        <Setter Property="MinHeight" Value="{DynamicResource {dxdot:FloatPaneElementsThemeKey ResourceKey=MinHeight}}"/>
        <Setter Property="MinWidth" Value="{DynamicResource {dxdot:FloatPaneElementsThemeKey ResourceKey=MinWidth}}"/>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" Value="{DynamicResource {dxdot:FloatPaneElementsThemeKey ResourceKey=TouchMinHeight}}"/>
                <Setter Property="MinWidth" Value="{DynamicResource {dxdot:FloatPaneElementsThemeKey ResourceKey=TouchMinWidth}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.DockLayoutManagerThemeDependentValuesProvider}" TargetType="dxdo:DockLayoutManagerThemeDependentValuesProvider">
        <Setter Property="Win32ResourcePath" Value="{dxdo:DockingDynamicThemeResource FloatPane.WinFormsHost.xaml, ResourcePath=Themes, ResourcePathInTheme='Docking'}"/>
        <Setter Property="IsDarkTheme" Value="{DynamicResource {dxdot:DockPaneElementsThemeKey ResourceKey=IsDarkTheme}}"/>
    </Style>

</ResourceDictionary>