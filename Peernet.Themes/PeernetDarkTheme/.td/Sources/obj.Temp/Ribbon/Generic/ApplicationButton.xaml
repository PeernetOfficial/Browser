<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon" xmlns:dxrt="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxcore_unique_xmlns="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core">
  <dxcore_unique_xmlns:BooleanToVisibilityConverter x:Key="boolToVisibilityConverter" Invert="False" />
  <dxcore_unique_xmlns:BooleanToVisibilityConverter x:Key="invertBoolToVisibilityConverter" Invert="True" />
  <ControlTemplate x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=Template}" TargetType="{x:Type dxr:RibbonApplicationButtonControl}">
    
    <dxr:RibbonCheckedBorderControl x:Name="PART_Border" AppFocusValue="{Binding Path=(dxr:RibbonNavigationManager.IsSelected), RelativeSource={RelativeSource TemplatedParent}}" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" IsChecked="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=TemplatedParent}}" IsTabStop="False" Template="{TemplateBinding ActualBorderTemplate}" UseAppFocusValue="True" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Ribbon\Generic\ApplicationButton.xaml;17;10">
      <Grid dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Ribbon\Generic\ApplicationButton.xaml;25;14">
        <dxcore_unique_xmlns:PixelSnapper HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding Path=Ribbon.IsOffice2010Style, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource invertBoolToVisibilityConverter}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Ribbon\Generic\ApplicationButton.xaml;26;18">
          <Image Source="{Binding Path=Ribbon.ActualApplicationButtonLargeIcon, RelativeSource={RelativeSource TemplatedParent}}" Stretch="None" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Ribbon\Generic\ApplicationButton.xaml;29;22" />
        </dxcore_unique_xmlns:PixelSnapper>
        <Grid Visibility="{Binding Path=Ribbon.IsOffice2010Style, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Ribbon\Generic\ApplicationButton.xaml;31;18">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
          </Grid.ColumnDefinitions>
          <dxcore_unique_xmlns:PixelSnapper Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Ribbon\Generic\ApplicationButton.xaml;36;22">
            <dxcore_unique_xmlns:DXImage Margin="0,1,0,0" Source="{Binding Path=Ribbon.ActualApplicationButtonSmallIcon, RelativeSource={RelativeSource TemplatedParent}}" Stretch="None" />
          </dxcore_unique_xmlns:PixelSnapper>
          <Grid Grid.Column="1" Visibility="{Binding Path=Ribbon.ActualIsApplicationButtonTextVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Ribbon\Generic\ApplicationButton.xaml;43;22">
            <ContentControl Name="ContentControl" Content="{Binding Path=Ribbon.ApplicationButtonText, RelativeSource={RelativeSource TemplatedParent}}" IsTabStop="False" Style="{DynamicResource {dxrt:ApplicationButtonThemeKey ResourceKey=NormalTextStyle}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Ribbon\Generic\ApplicationButton.xaml;44;26" />
          </Grid>
        </Grid>
      </Grid>
    </dxr:RibbonCheckedBorderControl>
    <ControlTemplate.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Style" TargetName="ContentControl" Value="{DynamicResource {dxrt:ApplicationButtonThemeKey ResourceKey=SelectedTextStyle}}" />
      </Trigger>
      <Trigger Property="IsChecked" Value="True">
        <Setter Property="Style" TargetName="ContentControl" Value="{DynamicResource {dxrt:ApplicationButtonThemeKey ResourceKey=CheckedTextStyle}}" />
      </Trigger>
      <DataTrigger Binding="{Binding ElementName=PART_Border, Path=IsLeftButtonPressed}" Value="True">
        <Setter Property="Style" TargetName="ContentControl" Value="{DynamicResource {dxrt:ApplicationButtonThemeKey ResourceKey=PressedTextStyle}}" />
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
</ResourceDictionary>