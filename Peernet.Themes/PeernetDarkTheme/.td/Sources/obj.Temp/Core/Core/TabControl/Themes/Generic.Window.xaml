<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:dxmvvmi="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxcore_unique_xmlns="http://schemas.devexpress.com/winfx/2008/xaml/core">
  <Style x:Key="DefaultButtonContainerStyle" TargetType="ItemsControl">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ItemsControl">
          <ItemsPresenter VerticalAlignment="Stretch" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\TabControl\Themes\Generic.Window.xaml;19;22" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <DockPanel LastChildFill="False" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\TabControl\Themes\Generic.Window.xaml;26;22" />
          
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="WindowButtonDefaultStyle" TargetType="ButtonBase">
    <Setter Property="Width" Value="22" />
    <Setter Property="Height" Value="22" />
    <Setter Property="Focusable" Value="False" />
  </Style>
  <Style x:Key="AeroButtonContainerStyle" BasedOn="{StaticResource DefaultButtonContainerStyle}" TargetType="ItemsControl">
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="Width" Value="{Binding Path=(dx:DXWindow.AeroControlBoxWidth), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dx:DXWindow}}" />
    <Setter Property="Height" Value="{Binding Path=(dx:DXWindow.AeroControlBoxHeight), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dx:DXWindow}}" />
    <Setter Property="Margin" Value="{Binding Path=(dx:DXWindow.AeroControlBoxMargin), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dx:DXWindow}}" />
    <Setter Property="ItemContainerStyle">
      <Setter.Value>
        <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=ButtonBase}" TargetType="ButtonBase">
          <Setter Property="Width" Value="0" />
          <Setter Property="Height" Value="0" />
        </Style>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="DXTabbedWindowTemplate" TargetType="{x:Type dx:DXTabbedWindow}">
    <Grid x:Name="Root_Grid" UseLayoutRounding="True" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\TabControl\Themes\Generic.Window.xaml;57;10">
      <dx:DXBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\TabControl\Themes\Generic.Window.xaml;58;14">
        <AdornerDecorator x:Name="PART_WindowAdornerDecorator" ClipToBounds="True" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\TabControl\Themes\Generic.Window.xaml;59;18">
          <Grid x:Name="PART_RootContentPresenter" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\TabControl\Themes\Generic.Window.xaml;60;22">
            <ContentPresenter x:Name="FloatingContainerBorder" ContentTemplate="{DynamicResource {dxt:DXTabbedWindowThemeKey ResourceKey=BorderTemplate}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\TabControl\Themes\Generic.Window.xaml;61;26" />
            <Grid x:Name="MainContainer" Style="{DynamicResource {dxt:DXTabbedWindowThemeKey ResourceKey=MainContainerStyle}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\TabControl\Themes\Generic.Window.xaml;62;26">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto">
                  <RowDefinition.MinHeight>
                    <MultiBinding>
                      <MultiBinding.Converter>
                        <dxcn:DXTabbedWindowHeaderSizeConverter />
                      </MultiBinding.Converter>
                      <Binding Path="TabHeaderSize" RelativeSource="{RelativeSource TemplatedParent}" />
                      <Binding Path="HeaderIndentInNormalState" RelativeSource="{RelativeSource TemplatedParent}" />
                      <Binding Path="HeaderIndentInMaximizedState" RelativeSource="{RelativeSource TemplatedParent}" />
                      <Binding Path="WindowState" RelativeSource="{RelativeSource TemplatedParent}" />
                      <Binding Path="TabbedWindowMode" RelativeSource="{RelativeSource TemplatedParent}" />
                    </MultiBinding>
                  </RowDefinition.MinHeight>
                </RowDefinition>
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <ContentPresenter x:Name="Header" ContentTemplate="{DynamicResource {dxt:DXTabbedWindowThemeKey ResourceKey=HeaderTemplate}}" Grid.RowSpan="2" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\TabControl\Themes\Generic.Window.xaml;81;30" />
              <Thumb x:Name="PART_DragWidget" Grid.RowSpan="2" Template="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerDragWidgetTemplate}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\TabControl\Themes\Generic.Window.xaml;84;30" />
              <dxcore_unique_xmlns:DXWindowHeader x:Name="PART_Header" IsAeroModeEnabled="False" Panel.ZIndex="100">
                <DockPanel LastChildFill="True" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\TabControl\Themes\Generic.Window.xaml;90;34">
                  <Decorator DockPanel.Dock="Right" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\TabControl\Themes\Generic.Window.xaml;91;38">
                    <dxmvvmi:Interaction.Behaviors>
                      <dxmvvmi:DependencyPropertyBehavior Binding="{Binding RelativeSource={RelativeSource AncestorType=dx:DXTabbedWindow}, Path=ButtonContainerActualWidth, Mode=OneWayToSource}" EventName="SizeChanged" PropertyName="ActualWidth" />
                    </dxmvvmi:Interaction.Behaviors>
                    <ItemsControl x:Name="ButtonContainer" dxcore_unique_xmlns:HeaderItemControl.CloseTemplateProvider="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=HeaderItemControlCloseTemplateProvider}}" dxcore_unique_xmlns:HeaderItemControl.CommonTemplateProvider="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=HeaderItemControlCommonTemplateProvider}}" Style="{DynamicResource {dxt:DXTabbedWindowThemeKey ResourceKey=ButtonContainerStyle}}" UseLayoutRounding="True" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\TabControl\Themes\Generic.Window.xaml;97;42">
                      <dxcore_unique_xmlns:ThemedWindowHeaderItemsControl x:Name="PART_HeaderCustomItems" Style="{DynamicResource {dxt:DXTabbedWindowThemeKey ResourceKey=ControlContainerStyle}}" />
                      <dxcore_unique_xmlns:HeaderItemControl x:Name="PART_Minimize" Style="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderButtonStyle}}" />
                      <dxcore_unique_xmlns:HeaderItemControl x:Name="PART_Restore" Style="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderButtonStyle}}" Visibility="{Binding Path=(dx:FloatingContainer.IsMaximized), Converter={dx:BooleanToVisibilityConverter Invert=False}, RelativeSource={RelativeSource Self}}" />
                      <dxcore_unique_xmlns:HeaderItemControl x:Name="PART_Maximize" Style="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderButtonStyle}}" Visibility="{Binding Path=(dx:FloatingContainer.IsMaximized), Converter={dx:BooleanToVisibilityConverter Invert=True}, RelativeSource={RelativeSource Self}}" />
                      <dxcore_unique_xmlns:HeaderItemControl x:Name="PART_CloseButton" Style="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderCloseButtonStyle}}" />
                    </ItemsControl>
                  </Decorator>
                  <dxcn:DXTabbedWindowHeaderDecorator x:Name="HeaderPresented" TabbedWindowMode="{TemplateBinding TabbedWindowMode}">
                    <dxmvvmi:Interaction.Behaviors>
                      <dxmvvmi:DependencyPropertyBehavior Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CaptionActualWidth, Mode=OneWayToSource}" EventName="SizeChanged" PropertyName="ActualWidth" />
                    </dxmvvmi:Interaction.Behaviors>
                    <Grid dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\TabControl\Themes\Generic.Window.xaml;119;42">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>
                      <Image x:Name="PART_Icon" Grid.Column="0" Source="{Binding Path=(dx:FloatingContainer.FloatingContainer).Icon, RelativeSource={RelativeSource AncestorType=ContentPresenter}}" Style="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=DXWindowIconStyle}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\TabControl\Themes\Generic.Window.xaml;124;46" />
                      <ContentPresenter x:Name="PART_CaptionContentPresenter" ContentTemplate="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerCaptionTemplate}}" Grid.Column="1" Style="{DynamicResource {dxt:DXTabbedWindowThemeKey ResourceKey=CaptionPresenterStyle}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\TabControl\Themes\Generic.Window.xaml;128;46" />
                    </Grid>
                  </dxcn:DXTabbedWindowHeaderDecorator>
                </DockPanel>
              </dxcore_unique_xmlns:DXWindowHeader>
              <Decorator x:Name="FloatingContainerBodyContainer" Grid.Row="1" Grid.RowSpan="2" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\TabControl\Themes\Generic.Window.xaml;136;30">
                <Decorator.Margin>
                  <MultiBinding>
                    <MultiBinding.Converter>
                      <dxcn:DXTabbedWindowMarginConverter />
                    </MultiBinding.Converter>
                    <Binding Path="TabHeaderSize" RelativeSource="{RelativeSource TemplatedParent}" />
                    <Binding Path="TabbedWindowMode" RelativeSource="{RelativeSource TemplatedParent}" />
                  </MultiBinding>
                </Decorator.Margin>
                <dx:DXBorder x:Name="FloatingContainerBody" Style="{DynamicResource {dxt:DXTabbedWindowThemeKey ResourceKey=ContentBorderStyle}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\TabControl\Themes\Generic.Window.xaml;148;34">
                  <Grid dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\TabControl\Themes\Generic.Window.xaml;149;38">
                    <ContentPresenter x:Name="PART_ContainerContent" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" DataContext="{TemplateBinding DataContext}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\TabControl\Themes\Generic.Window.xaml;150;42" />
                    <Grid x:Name="PART_StatusPanel" HorizontalAlignment="Right" VerticalAlignment="Bottom" Visibility="Collapsed" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\TabControl\Themes\Generic.Window.xaml;155;42">
                      <Thumb x:Name="PART_SizeGrip" Cursor="SizeNWSE" Height="16" Template="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerSizeGripTemplate}}" Width="16" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\TabControl\Themes\Generic.Window.xaml;159;46" />
                    </Grid>
                  </Grid>
                </dx:DXBorder>
              </Decorator>
            </Grid>
            <Control x:Name="PART_ResizeFrame" Focusable="False" Template="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerResizeFrame}}" Visibility="{Binding Path=(dx:FloatingContainer.IsMaximized), RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter Inverse=True}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\TabControl\Themes\Generic.Window.xaml;169;26" />
          </Grid>
        </AdornerDecorator>
      </dx:DXBorder>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsAeroMode" Value="True">
        <Setter Property="Visibility" TargetName="FloatingContainerBorder" Value="Collapsed" />
        <Setter Property="Visibility" TargetName="Header" Value="Collapsed" />
        <Setter Property="IsAeroModeEnabled" TargetName="PART_Header" Value="True" />
        <Setter Property="Style" TargetName="ButtonContainer" Value="{StaticResource AeroButtonContainerStyle}" />
      </Trigger>
      <Trigger Property="TabbedWindowMode" Value="Compact">
        <Setter Property="Grid.Row" TargetName="Header" Value="1" />
        <Setter Property="Grid.RowSpan" TargetName="Header" Value="1" />
        <Setter Property="Grid.Row" TargetName="PART_DragWidget" Value="1" />
        <Setter Property="Grid.RowSpan" TargetName="PART_DragWidget" Value="1" />
        <Setter Property="Grid.Row" TargetName="PART_Header" Value="1" />
        <Setter Property="Grid.Row" TargetName="FloatingContainerBodyContainer" Value="2" />
        <Setter Property="Grid.RowSpan" TargetName="FloatingContainerBodyContainer" Value="1" />
      </Trigger>
      <DataTrigger Binding="{Binding Path=(dx:FloatingContainer.FloatingContainer).AllowSizing, RelativeSource={RelativeSource Self}}" Value="False">
        <Setter Property="Visibility" TargetName="PART_ResizeFrame" Value="Collapsed" />
        <Setter Property="Visibility" TargetName="PART_StatusPanel" Value="Collapsed" />
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="DXWindowEmptyTemplate" TargetType="{x:Type dx:DXWindow}">
    <Grid x:Name="Root_Grid" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\TabControl\Themes\Generic.Window.xaml;227;10">
      <dx:DXBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\TabControl\Themes\Generic.Window.xaml;228;14">
        <AdornerDecorator x:Name="PART_WindowAdornerDecorator" ClipToBounds="True" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\TabControl\Themes\Generic.Window.xaml;229;18">
          <ContentPresenter x:Name="PART_RootContentPresenter" ContentTemplate="{TemplateBinding ActualWindowTemplate}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\TabControl\Themes\Generic.Window.xaml;230;22">
            <ContentPresenter.Content>
              <dx:DXBorder dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\TabControl\Themes\Generic.Window.xaml;232;30" />
            </ContentPresenter.Content>
          </ContentPresenter>
        </AdornerDecorator>
      </dx:DXBorder>
    </Grid>
  </ControlTemplate>
  <DataTemplate x:Key="emptyWindowTemplate" />
  <Style x:Key="WindowDefaultStyle" TargetType="{x:Type dx:DXTabbedWindow}">
    <Setter Property="ResizeMode" Value="CanResize" />
    <Setter Property="ResizeBorderThicknessInAeroMode" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=AeroWindowResizeBorderThickness}}" />
    <Setter Property="ResizeBorderThickness" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=ResizeBorderThickness}}" />
    <Setter Property="BorderEffectOffset" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectOffset}}" />
    <Setter Property="BorderEffectActiveColor" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectActiveColor}}" />
    <Setter Property="BorderEffectInactiveColor" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectInactiveColor}}" />
    <Setter Property="BorderEffectLeftMargins" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectLeftMargins}}" />
    <Setter Property="BorderEffectRightMargins" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectRightMargins}}" />
    <Setter Property="BorderEffectTopMargins" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectTopMargins}}" />
    <Setter Property="BorderEffectBottomMargins" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectBottomMargins}}" />
    <Setter Property="AeroBorderSize" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=AeroWindowBorderSize}}" />
    <Setter Property="AeroWindowTemplate" Value="{StaticResource emptyWindowTemplate}" />
    <Setter Property="WindowTemplate" Value="{StaticResource emptyWindowTemplate}" />
    <Setter Property="Template" Value="{StaticResource DXTabbedWindowTemplate}" />
    <Setter Property="HeaderIndentInNormalState" Value="14" />
    <Setter Property="HeaderIndentInMaximizedState" Value="4" />
    <Style.Triggers>
      <Trigger Property="HasContent" Value="False">
        <Setter Property="Template" Value="{StaticResource DXWindowEmptyTemplate}" />
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>