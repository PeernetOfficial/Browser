<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxgcore="clr-namespace:DevExpress.Xpf.Grid;assembly=DevExpress.Xpf.Grid.v22.2.Core" xmlns:dxgi="http://schemas.devexpress.com/winfx/2008/xaml/grid/internal" xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxcore_unique_xmlns="http://schemas.devexpress.com/winfx/2008/xaml/core">

    <dxcore_unique_xmlns:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <dxmvvm:ObjectToObjectConverter x:Key="HeaderPresenterTypeConverter" DefaultSource="False" DefaultTarget="ColumnChooser">
        <dxmvvm:MapItem Source="True" Target="Headers" />
    </dxmvvm:ObjectToObjectConverter>

    <dxcore_unique_xmlns:BoolInverseConverter x:Key="boolInverseConverter" />

    <dxcore_unique_xmlns:EditorStringIdConverter x:Key="EditorStringIdConverter" />

    <dxg:ExtendedColumnChooserHeaderPresenterTypeConverter x:Key="ExtendedColumnChooserHeaderPresenterTypeConverter" />

    <DataTemplate x:Key="{dxgt:ExtendedColumnChooserThemeKey ResourceKey=CheckBoxColumnCellTemplate}">
        <dxe:CheckEdit EditMode="Standalone" EditValue="{Binding Path=RowData.Row.IsVisible, Mode=TwoWay}" Focusable="False" HorizontalAlignment="Center" IsEnabled="{Binding Path=RowData.Row.AllowChangeVisibility}" Margin="0,0,0,0" VerticalAlignment="Center" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\ExtendedColumnChooser.xaml;35;10" />
    </DataTemplate>

    <DataTemplate x:Key="{dxgt:ExtendedColumnChooserThemeKey ResourceKey=DropMarkerTemplate}">
        <ContentPresenter ContentTemplate="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=DragIndicatorTemplate}}" dxg:GridColumnHeader.CanGroupMergeState="False" dxg:GridColumnHeader.DropPlaceOrientation="Vertical" dxg:GridColumnHeader.IsColumnChooser="True" dxg:GridColumnHeader.IsGroupPanel="False" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\ExtendedColumnChooser.xaml;45;10" />
    </DataTemplate>

    <DataTemplate x:Key="ColumnHeaderTemplate">
        <dxg:ExtendedColumnChooserGridColumnHeader ColumnPosition="Standalone" DataContext="{Binding Value}" DropMarkerTemplate="{DynamicResource {dxgt:ExtendedColumnChooserThemeKey ResourceKey=DropMarkerTemplate}}" dxb:BarManager.DXContextMenu="{Binding Path=View.DataControlMenu}" dxg:GridColumn.HeaderPresenterType="ColumnChooser" dxg:GridColumnHeader.ExtendedColumnChooserView="{Binding RowData.View, RelativeSource={RelativeSource TemplatedParent}}" dxg:GridColumnHeader.GridColumn="{Binding}" dxg:GridControl.CurrentView="{Binding View}" dxg:GridPopupMenu.GridMenuType="Column" Margin="1,1,2,0" SnapsToDevicePixels="True">
            <dxg:ExtendedColumnChooserGridColumnHeader.ColumnChooserHeaderPresenterType>
                <MultiBinding Converter="{StaticResource ExtendedColumnChooserHeaderPresenterTypeConverter}">
                    <Binding Path="Visible" />
                    <Binding Path="RowData.Row.IsGrouped" RelativeSource="{RelativeSource TemplatedParent}" />
                </MultiBinding>
            </dxg:ExtendedColumnChooserGridColumnHeader.ColumnChooserHeaderPresenterType>
            <dxg:GridControl.CurrentViewChangedListener>
                <dxg:ExtendedColumnChooserColumnHeaderInitializer />
            </dxg:GridControl.CurrentViewChangedListener>
        </dxg:ExtendedColumnChooserGridColumnHeader>
    </DataTemplate>

    <DataTemplate x:Key="BandHeaderTemplate">
        <dxg:ExtendedColumnChooserBandHeaderControl ColumnChooserHeaderPresenterType="{Binding Visible, Converter={StaticResource HeaderPresenterTypeConverter}}" ColumnPosition="Standalone" DataContext="{Binding Value}" DropMarkerTemplate="{DynamicResource {dxgt:ExtendedColumnChooserThemeKey ResourceKey=DropMarkerTemplate}}" dxb:BarManager.DXContextMenu="{Binding Path=View.DataControlMenu}" dxg:GridColumn.HeaderPresenterType="ColumnChooser" dxg:GridColumnHeader.ExtendedColumnChooserView="{Binding RowData.View, RelativeSource={RelativeSource TemplatedParent}}" dxg:GridColumnHeader.GridColumn="{Binding}" dxg:GridControl.CurrentView="{Binding View}" dxg:GridPopupMenu.GridMenuType="Band" Margin="1,1,2,0" SnapsToDevicePixels="True">
            <dxg:GridControl.CurrentViewChangedListener>
                <dxg:ExtendedColumnChooserColumnHeaderInitializer />
            </dxg:GridControl.CurrentViewChangedListener>
        </dxg:ExtendedColumnChooserBandHeaderControl>
    </DataTemplate>

    <Style x:Key="{dxgt:ExtendedColumnChooserThemeKey ResourceKey=ColumnStyle}" TargetType="{x:Type dxg:TreeListColumn}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Grid\Generic\ExtendedColumnChooser.xaml;95;6" /><Setter Property="CellTemplateSelector">
            <Setter.Value>
                <dxg:ExtendedColumnChooserColumnTemplateSelector BandHeaderTemplate="{StaticResource BandHeaderTemplate}" ColumnHeaderTemplate="{StaticResource ColumnHeaderTemplate}" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxgt:ExtendedColumnChooserThemeKey ResourceKey=CheckBoxColumnStyle}" TargetType="{x:Type dxg:TreeListColumn}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Grid\Generic\ExtendedColumnChooser.xaml;103;6" /><Setter Property="Width" Value="{DynamicResource {dxgt:ExtendedColumnChooserThemeKey ResourceKey=CheckBoxColumnWidth}}" />
        <Setter Property="CellTemplate" Value="{DynamicResource {dxgt:ExtendedColumnChooserThemeKey ResourceKey=CheckBoxColumnCellTemplate}}" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Width" Value="34" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.ExtendedColumnChooserRowMarginControl}" TargetType="{x:Type dxg:ExtendedColumnChooserRowMarginControl}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Grid\Generic\ExtendedColumnChooser.xaml;113;6" /><Setter Property="Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextUnfocusedBrush}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid x:Name="PART_RootGrid" Background="{DynamicResource {dxgt:TreeListViewThemeKey ResourceKey=RowMarginBackgroundBrush}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\ExtendedColumnChooser.xaml;118;22">
                        <Path x:Name="PART_OffsetPath" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\ExtendedColumnChooser.xaml;119;26" />
                        <Path x:Name="PART_TreeLinePath" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\ExtendedColumnChooser.xaml;122;26" />
                        <dxg:IndentsPanel HorizontalAlignment="Right" RowIndent="{Binding View.RowIndent}">
                            <dxg:TreeListNodeExpandButton x:Name="PART_ExpandButton" Command="{Binding View.Commands.ChangeNodeExpanded}" CommandParameter="{Binding RowHandle.Value}" HorizontalAlignment="Left" IsEnabled="{Binding IsButtonVisible}">
                                <dxg:TreeListNodeExpandButton.IsExpandButtonVisible>
                                    <MultiBinding>
                                        <Binding Path="IsButtonVisible" />
                                        <Binding Path="Row" />
                                        <MultiBinding.Converter>
                                            <dxg:ExtendedColumnChooserExpandButtonVisibleConverter />
                                        </MultiBinding.Converter>
                                    </MultiBinding>
                                </dxg:TreeListNodeExpandButton.IsExpandButtonVisible>
                                <dxg:TreeListNodeExpandButton.IsChecked>
                                    <MultiBinding>
                                        <Binding Path="IsButtonVisible" />
                                        <Binding Path="IsExpanded" />
                                        <MultiBinding.Converter>
                                            <dxg:ExtendedColumnChooserExpandButtonCheckedConverter />
                                        </MultiBinding.Converter>
                                    </MultiBinding>
                                </dxg:TreeListNodeExpandButton.IsChecked>
                            </dxg:TreeListNodeExpandButton>
                            <dxe:CheckEdit x:Name="PART_NodeCheckBox" Focusable="False" IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding IsCheckBoxEnabled}" IsThreeState="{Binding View.AllowIndeterminateCheckState}" Visibility="{Binding IsCheckBoxVisible, Converter={StaticResource BooleanToVisibilityConverter}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\ExtendedColumnChooser.xaml;150;30">
                                <dxg:GridViewHitInfoBase.HitTestAcceptor>
                                    <dxg:TreeListNodeCheckboxHitTestAcceptor />
                                </dxg:GridViewHitInfoBase.HitTestAcceptor>
                            </dxe:CheckEdit>
                            <dxcore_unique_xmlns:MeasurePixelSnapper Visibility="{Binding IsImageVisible, Converter={StaticResource BooleanToVisibilityConverter}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\ExtendedColumnChooser.xaml;160;30">
                                <dxcore_unique_xmlns:DXImage x:Name="PART_NodeImage" Focusable="False" Height="{Binding Path=View.NodeImageSize.Height}" Source="{Binding Image, UpdateSourceTrigger=PropertyChanged}" Width="{Binding Path=View.NodeImageSize.Width}">
                                    <dxg:GridViewHitInfoBase.HitTestAcceptor>
                                        <dxg:TreeListNodeImageHitTestAcceptor />
                                    </dxg:GridViewHitInfoBase.HitTestAcceptor>
                                    <RenderOptions.BitmapScalingMode>NearestNeighbor</RenderOptions.BitmapScalingMode>
                                </dxcore_unique_xmlns:DXImage>
                            </dxcore_unique_xmlns:MeasurePixelSnapper>
                        </dxg:IndentsPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter Property="Background" TargetName="PART_RootGrid" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource Self}}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="{dxgt:ExtendedColumnChooserThemeKey ResourceKey=RowTemplate}" TargetType="{x:Type dxg:ExtendedColumnChooserRowControl}">
        <Grid dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\ExtendedColumnChooser.xaml;187;10">
            <Grid.Margin>
                <Binding Path="RowPosition">
                    <Binding.Converter>
                        <dxmvvm:ObjectToObjectConverter DefaultTarget="0">
                            <dxmvvm:MapItem Source="Top">
                                <dxmvvm:MapItem.Target>
                                    <Thickness>0,2,0,0</Thickness>
                                </dxmvvm:MapItem.Target>
                            </dxmvvm:MapItem>
                            <dxmvvm:MapItem Source="Bottom">
                                <dxmvvm:MapItem.Target>
                                    <Thickness>0,0,0,3</Thickness>
                                </dxmvvm:MapItem.Target>
                            </dxmvvm:MapItem>
                            <dxmvvm:MapItem Source="Single">
                                <dxmvvm:MapItem.Target>
                                    <Thickness>0,2,0,3</Thickness>
                                </dxmvvm:MapItem.Target>
                            </dxmvvm:MapItem>
                        </dxmvvm:ObjectToObjectConverter>
                    </Binding.Converter>
                </Binding>
            </Grid.Margin>
            <dx:DXBorder x:Name="Background" Background="{TemplateBinding Background}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\ExtendedColumnChooser.xaml;211;14" />
            <Grid dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\ExtendedColumnChooser.xaml;212;14">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid x:Name="PART_LayoutPanel" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\ExtendedColumnChooser.xaml;217;18" />
                <dx:DXBorder x:Name="BottomLine" Background="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=RowSeparatorBrush}}" BorderBrush="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderBrush}}" BorderThickness="0,1,0,0" Grid.Row="1" Height="1" Margin="0,2,0,1" VerticalAlignment="Bottom" Visibility="Collapsed" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\ExtendedColumnChooser.xaml;218;18" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="FadeSelection" Value="True">
                <Setter Property="Opacity" TargetName="Background" Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{dxgt:ExtendedColumnChooserThemeKey ResourceKey=TreeListControlStyle}" TargetType="{x:Type dxg:TreeListControl}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Grid\Generic\ExtendedColumnChooser.xaml;238;6" /><Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="ShowBorder" Value="False" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:ExtendedColumnChooserThemeKey ResourceKey=TreeListControlTemplate}}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.35" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <dxg:DefaultStyle x:Key="{dxgt:ExtendedColumnChooserThemeKey ResourceKey=RowStyle}" TargetType="{x:Type dxg:GridRowContent}">
        <Setter Property="dxg:GridRowContent.Background" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderNoneBrush}}" />
        <Setter Property="dxg:GridRowContent.Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextUnfocusedBrush}}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=AlternateRow}" Value="True">
                <Setter Property="dxg:GridRowContent.Background" Value="{Binding Path=View.ActualAlternateRowBackground}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Selected">
                <Setter Property="dxg:GridRowContent.Background" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderSelectedBrush}}" />
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextRowSelectedBrush}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Focused">
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextFocusedBrush}}" />
                <Setter Property="dxg:GridRowContent.Background" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderFocusedBrush}}" />
            </DataTrigger>
        </Style.Triggers>
    </dxg:DefaultStyle>

    <Style x:Key="{dxgt:ExtendedColumnChooserThemeKey ResourceKey=TreeListViewStyle}" TargetType="{x:Type dxg:TreeListView}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Grid\Generic\ExtendedColumnChooser.xaml;268;6" /><Setter Property="AllowSorting" Value="False" />
        <Setter Property="ShowColumnHeaders" Value="False" />
        <Setter Property="ShowVerticalLines" Value="False" />
        <Setter Property="ShowHorizontalLines" Value="False" />
        <Setter Property="ShowIndicator" Value="False" />
        <Setter Property="RowStyle" Value="{DynamicResource {dxgt:ExtendedColumnChooserThemeKey ResourceKey=RowStyle}}" />
        <Setter Property="TreeLineStyle" Value="None" />
        <Setter Property="SearchDelay" Value="0" />
        <Setter Property="SearchPanelHorizontalAlignment" Value="Stretch" />
        <Setter Property="ShowRootIndent" Value="{Binding HasBands}" />
        <Setter Property="ShowSearchPanelMode" Value="Always" />
        <Setter Property="AutoExpandAllNodes" Value="True" />
        <Setter Property="ExpandNodesOnFiltering" Value="True" />
        <Setter Property="FilterMode" Value="Extended" />
        <Setter Property="ShowDragDropHint" Value="True" />
        <Setter Property="NavigationStyle" Value="None" />
        <Setter Property="VerticalScrollbarVisibility" Value="Auto" />
        <Setter Property="SearchPanelNullText">
            <Setter.Value>
                <MultiBinding>
                    <Binding Path="DataControl.View.LocalizationDescriptor" />
                    <Binding Path="HasBands" />
                    <MultiBinding.Converter>
                        <dxg:ExtendedColumnChooserSearchNullTextConverter SearchColumnsAndBandsKey="ExtendedColumnChooserSearchColumnsAndBands" SearchColumnsKey="ExtendedColumnChooserSearchColumns" />
                    </MultiBinding.Converter>
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="Template" Value="{DynamicResource {dxgt:ExtendedColumnChooserThemeKey ResourceKey=TreeViewTemplate}}" />
    </Style>

    <ControlTemplate x:Key="{dxgt:ExtendedColumnChooserThemeKey ResourceKey=Template}">
        <dxg:TreeListControl DataContext="{Binding Path=(dxg:ExtendedColumnChooserControl.ViewModel), RelativeSource={RelativeSource Self}}" ItemsSource="{Binding Path=Columns}" Style="{DynamicResource ResourceKey={dxgt:ExtendedColumnChooserThemeKey ResourceKey=TreeListControlStyle}}">
            <dxg:TreeListControl.Columns>
                <dxg:TreeListColumn AllowSearchPanel="False" FieldName="IsVisible" Style="{DynamicResource ResourceKey={dxgt:ExtendedColumnChooserThemeKey ResourceKey=CheckBoxColumnStyle}}" />
                <dxg:TreeListColumn AllowSearchPanel="False" FieldName="Source" Style="{DynamicResource ResourceKey={dxgt:ExtendedColumnChooserThemeKey ResourceKey=ColumnStyle}}" Width="*" />
                <dxg:TreeListColumn AllowSearchPanel="False" FieldName="VisibleIndex" SortOrder="Ascending" Visible="False" />
                <dxg:TreeListColumn AllowSearchPanel="True" FieldName="Header" Visible="False" />
            </dxg:TreeListControl.Columns>
            <dxg:TreeListControl.View>
                <dxg:ExtendedColumnChooserTreeListView KeyFieldName="Source" OriginalDataControl="{Binding DataControl}" ParentFieldName="ParentBand" Style="{DynamicResource ResourceKey={dxgt:ExtendedColumnChooserThemeKey ResourceKey=TreeListViewStyle}}" TreeColumnFieldName="Source">
                    <dxmvvm:Interaction.Behaviors>
                        <dxmvvm:EventToCommand Command="{DXCommand Execute='@s.AssociatedObject.UpdateRowsFixedState()'}" EventName="ColumnsFixedStateChanged" SourceObject="{Binding}" />
                        <dxmvvm:EventToCommand Command="{DXCommand Execute='@s.AssociatedObject.UpdateNodeExpandState(@parameter.TargetBand, @parameter.Source)'}" EventName="DropInEmptyBand" PassEventArgsToCommand="True" SourceObject="{Binding DragDropManager}" />
                    </dxmvvm:Interaction.Behaviors>
                    <dxcore_unique_xmlns:DragManager.DropTargetFactory>
                        <dxg:ExtendedColumnChooserDropTargetFactory />
                    </dxcore_unique_xmlns:DragManager.DropTargetFactory>
                </dxg:ExtendedColumnChooserTreeListView>
            </dxg:TreeListControl.View>
        </dxg:TreeListControl>
    </ControlTemplate>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.ExtendedColumnChooserControl}" TargetType="{x:Type dxg:ExtendedColumnChooserControl}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Grid\Generic\ExtendedColumnChooser.xaml;343;6" /><Setter Property="Template" Value="{DynamicResource ResourceKey={dxgt:ExtendedColumnChooserThemeKey ResourceKey=Template}}" />
    </Style>

    <ControlTemplate x:Key="{dxgt:ExtendedColumnChooserThemeKey ResourceKey=TreeViewTemplate}">
        <ScrollViewer x:Name="scr" dxcore_unique_xmlns:ScrollBarExtensions.ScrollBehavior="{x:Null}" dxg:GridControl.CurrentView="{Binding RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" HorizontalScrollBarVisibility="{Binding HorizontalScrollbarVisibility, RelativeSource={RelativeSource TemplatedParent}}" Template="{DynamicResource {dxgt:ExtendedColumnChooserThemeKey ResourceKey=TreeViewScrollViewerTemplate}}" VerticalScrollBarVisibility="{Binding VerticalScrollbarVisibility, RelativeSource={RelativeSource TemplatedParent}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\ExtendedColumnChooser.xaml;348;10">
            <ScrollViewer.CanContentScroll>True</ScrollViewer.CanContentScroll>
            <dxcore_unique_xmlns:ScrollBarExtensions.AllowMouseScrolling>
                <Binding Path="(dxg:GridControl.CurrentView).UseExtendedMouseScrolling" RelativeSource="{RelativeSource Self}" />
            </dxcore_unique_xmlns:ScrollBarExtensions.AllowMouseScrolling>
        </ScrollViewer>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:ExtendedColumnChooserThemeKey ResourceKey=SearchControlTemplate}">
        <ContentControl dxcore_unique_xmlns:FocusHelper2.Focusable="False" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\ExtendedColumnChooser.xaml;363;10">
            <Grid dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\ExtendedColumnChooser.xaml;366;14">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <dxei:ChildMinWidthPanel ChildMinWidth="{Binding Path=SearchTextBoxMinWidth, RelativeSource={RelativeSource TemplatedParent}}">
                    <dxe:ComboBoxEdit x:Name="editor" AllowDefaultButton="False" AutomationProperties.AutomationId="SearchComboBox" AutomationProperties.Name="SearchComboBox" dxei:MVVMFocusBehavior.IsFocused="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" EditValue="{Binding Path=SearchText, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" EditValuePostDelay="{Binding Path=SearchTextPostDelay, RelativeSource={RelativeSource TemplatedParent}}" EditValuePostMode="{Binding Path=SearchControlPropertyProvider.ActualPostMode, RelativeSource={RelativeSource TemplatedParent}}" ImmediatePopup="{Binding Path= SearchControlPropertyProvider.ActualImmediateMRUPopup, RelativeSource={RelativeSource TemplatedParent}}" IncrementalFiltering="False" IsCaseSensitiveSearch="True" IsTabStop="{Binding IsEditorTabStop, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Path=MRU, RelativeSource={RelativeSource TemplatedParent}}" Margin="0" MinHeight="22" NullTextForeground="{Binding Path=NullTextForeground, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" ShowNullText="{Binding Path=SearchControlPropertyProvider.ActualShowFindButton, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource boolInverseConverter}}" ValidateOnEnterKeyPressed="True" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\ExtendedColumnChooser.xaml;375;22">
                        <dxe:ComboBoxEdit.NullText>
                            <MultiBinding>
                                <Binding Path="NullText" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Converter="{StaticResource EditorStringIdConverter}" ConverterParameter="LookUpSearch" Path="IsTabStop" RelativeSource="{RelativeSource Self}" />
                                <MultiBinding.Converter>
                                    <dxcore_unique_xmlns:SearchControlNullTextConverter />
                                </MultiBinding.Converter>
                            </MultiBinding>
                        </dxe:ComboBoxEdit.NullText>
                        <dxe:ComboBoxEdit.Buttons>
                            <dxe:ButtonInfo x:Name="buttonClear" Command="{Binding Path=SearchControlPropertyProvider.ClearSearchTextCommand, RelativeSource={RelativeSource TemplatedParent}}" GlyphKind="Custom" Visibility="{Binding Path=SearchControlPropertyProvider.ActualShowClearButton, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <dxe:ButtonInfo.Template>
                                    <DataTemplate>
                                        <dxe:ButtonClose Command="{Binding Command}" HorizontalAlignment="Center" Margin="2,0" VerticalAlignment="Center" Visibility="{Binding Visibility}" />
                                    </DataTemplate>
                                </dxe:ButtonInfo.Template>
                            </dxe:ButtonInfo>
                            <dxe:ButtonInfo Command="{Binding Path=OpenPopupCommand, ElementName=editor}" GlyphKind="DropDown" Visibility="{Binding Path=ShowMRUButton, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        </dxe:ComboBoxEdit.Buttons>
                    </dxe:ComboBoxEdit>
                </dxei:ChildMinWidthPanel>
                <Button x:Name="SearchFindButton" Command="{Binding Path=SearchControlPropertyProvider.FindCommand, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" CommandParameter="{Binding Path=FilterCriteria, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1" Margin="4,0,0,0" MinWidth="55" Style="{DynamicResource {dxet:SearchControlThemeKey ResourceKey=FindButtonStyle}}" Visibility="{Binding Path=SearchControlPropertyProvider.ActualShowFindButton, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\ExtendedColumnChooser.xaml;426;18" />
                <Button Command="{Binding PrevCommand, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Grid.Column="2" Margin="4,0,0,0" MinWidth="70" Style="{DynamicResource {dxet:SearchControlThemeKey ResourceKey=PrevButtonStyle}}" Visibility="{Binding Path=ShowSearchPanelNavigationButtons, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\ExtendedColumnChooser.xaml;434;18" />
                <Button Command="{Binding NextCommand, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Grid.Column="3" Margin="4,0,0,0" MinWidth="70" Style="{DynamicResource {dxet:SearchControlThemeKey ResourceKey=NextButtonStyle}}" Visibility="{Binding Path=ShowSearchPanelNavigationButtons, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\ExtendedColumnChooser.xaml;440;18" />
                <Button x:Name="SearchCloseButton" Command="{Binding Path=SearchControlPropertyProvider.CloseCommandInternal, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Grid.Column="4" Margin="4,0,0,0" MinWidth="55" Style="{DynamicResource {dxet:SearchControlThemeKey ResourceKey=CloseButtonStyle}}" Visibility="{Binding Path=ShowCloseButton, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\ExtendedColumnChooser.xaml;446;18" />
            </Grid>
        </ContentControl>
    </ControlTemplate>

    <sys:Double x:Key="{dxgt:ExtendedColumnChooserThemeKey ResourceKey=SearchPanelTextBoxMinWidth}">190</sys:Double>

    <Style x:Key="{dxgt:ExtendedColumnChooserThemeKey ResourceKey=SearchPanelContentStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Grid\Generic\ExtendedColumnChooser.xaml;459;6" /><Setter Property="dx:FocusHelper2.Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="{DynamicResource {dxgt:ExtendedColumnChooserThemeKey ResourceKey=SearchPanelBackground}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\ExtendedColumnChooser.xaml;465;22">
                        <dxg:GridSearchControl x:Name="PART_SearchControl" HorizontalAlignment="{Binding Path=(dxg:GridControl.CurrentView).SearchPanelHorizontalAlignment, RelativeSource={RelativeSource TemplatedParent}}" IsEditorTabStop="False" IsTabStop="False" Margin="{DynamicResource {dxgt:ExtendedColumnChooserThemeKey ResourceKey=SearchPanelMargin}}" SearchTextBoxMinWidth="{DynamicResource {dxgt:ExtendedColumnChooserThemeKey ResourceKey=SearchPanelTextBoxMinWidth}}" Template="{DynamicResource {dxgt:ExtendedColumnChooserThemeKey ResourceKey=SearchControlTemplate}}" View="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=View.ActualShowSearchPanel, RelativeSource={RelativeSource Self}, Converter={dx:BooleanToVisibilityConverter}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxgt:ExtendedColumnChooserThemeKey ResourceKey=OuterBorderElementStyle}" TargetType="{x:Type dxg:OuterBorderElement}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Grid\Generic\ExtendedColumnChooser.xaml;481;6" /><Setter Property="Template" Value="{DynamicResource {dxgt:ExtendedColumnChooserThemeKey ResourceKey=OuterBorderElementTemplate}}" />
    </Style>

    <ControlTemplate x:Key="{dxgt:ExtendedColumnChooserThemeKey ResourceKey=TreeViewScrollViewerTemplate}">
        <Grid ClipToBounds="True" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="true" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\ExtendedColumnChooser.xaml;486;10">
            <dxcore_unique_xmlns:ScrollBarExtensions.ScrollBehavior>
                <Binding Path="(dxg:GridControl.CurrentView).UseExtendedMouseScrolling" RelativeSource="{RelativeSource Self}">
                    <Binding.Converter>
                        <dxcore_unique_xmlns:BoolToObjectConverter FalseValue="{dx:NativeScrollBehavior}" TrueValue="{dxgcore:DataPresenterScrollBehavior}" />
                    </Binding.Converter>
                </Binding>
            </dxcore_unique_xmlns:ScrollBarExtensions.ScrollBehavior>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <dx:DXBorder BorderBrush="{DynamicResource ResourceKey={dxgt:ExtendedColumnChooserThemeKey ResourceKey=SearchPanelBorderBrush}}" BorderThickness="{DynamicResource ResourceKey={dxgt:ExtendedColumnChooserThemeKey ResourceKey=SearchPanelBorderThickness}}" Grid.Row="0" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\ExtendedColumnChooser.xaml;502;14">
                <ContentControl x:Name="part_SearchControlContainer" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {dxgt:ExtendedColumnChooserThemeKey ResourceKey=SearchPanelContentStyle}}" Visibility="{Binding Path=(dxg:GridControl.CurrentView).ActualShowSearchPanel, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\ExtendedColumnChooser.xaml;505;18">
                    <dxg:GridViewHitInfoBase.HitTestAcceptor>
                        <dxgi:GridSearchPanelHitTestAcceptor />
                    </dxg:GridViewHitInfoBase.HitTestAcceptor>
                </ContentControl>
            </dx:DXBorder>
            <Grid x:Name="rowPresenterGrid" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="1" Margin="{DynamicResource {dxgt:ExtendedColumnChooserThemeKey ResourceKey=RowPresenterGridMargin}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\ExtendedColumnChooser.xaml;514;14">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid Grid.Row="1" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\ExtendedColumnChooser.xaml;529;18">
                    <Grid.ColumnSpan>
                        <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}">
                            <Binding.Converter>
                                <dxmvvm:ObjectToObjectConverter DefaultSource="Default" DefaultTarget="1">
                                    <dxmvvm:MapItem Source="TouchOverlap" Target="2" />
                                </dxmvvm:ObjectToObjectConverter>
                            </Binding.Converter>
                        </Binding>
                    </Grid.ColumnSpan>
                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" dxgcore:FocusRectPresenter.IsVerticalScrollHost="True" MinWidth="{Binding Path=(dxg:GridControl.CurrentView).ScrollableAreaMinWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" ScrollViewer.CanContentScroll="True" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\ExtendedColumnChooser.xaml;539;22">
                        <dxg:GridControl.CurrentViewChangedListener>
                            <dxg:ScrollContentPresenterInitializer />
                        </dxg:GridControl.CurrentViewChangedListener>
                        <ScrollContentPresenter.Content>
                            <dxg:DataPresenter x:Name="dataPresenter" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" Template="{DynamicResource {dxgt:ExtendedColumnChooserThemeKey ResourceKey=DataPresenterTemplate}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\ExtendedColumnChooser.xaml;548;30" />
                        </ScrollContentPresenter.Content>
                        <dxg:GridViewHitInfoBase.HitTestAcceptor>
                            <dxgi:DataAreaTableViewHitTestAcceptor />
                        </dxg:GridViewHitInfoBase.HitTestAcceptor>
                    </ScrollContentPresenter>
                    <ContentControl HorizontalContentAlignment="Center" VerticalContentAlignment="Center" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\ExtendedColumnChooser.xaml;556;22">
                        <ContentControl.Template>
                            <ControlTemplate TargetType="{x:Type ContentControl}">
                                <ContentPresenter Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\ExtendedColumnChooser.xaml;559;34" />
                            </ControlTemplate>
                        </ContentControl.Template>
                        <ContentControl.Visibility>
                            <Binding Path="(dxg:GridControl.CurrentView).WaitIndicatorType" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.Converter>
                                    <dxcore_unique_xmlns:EnumToObjectConverter DefaultValue="Collapsed">
                                        <dxcore_unique_xmlns:EnumToObjectConverter.Values>
                                            <dxcore_unique_xmlns:EnumObjectProvider x:Key="Panel" Value="Visible" />
                                        </dxcore_unique_xmlns:EnumToObjectConverter.Values>
                                    </dxcore_unique_xmlns:EnumToObjectConverter>
                                </Binding.Converter>
                            </Binding>
                        </ContentControl.Visibility>
                        <dxcore_unique_xmlns:WaitIndicator DeferedVisibility="{Binding Path=(dxg:GridControl.CurrentView).IsWaitIndicatorVisible, RelativeSource={RelativeSource TemplatedParent}}" Style="{Binding Path=(dxg:GridControl.CurrentView).WaitIndicatorStyle, RelativeSource={RelativeSource TemplatedParent}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\ExtendedColumnChooser.xaml;575;26" />
                    </ContentControl>
                </Grid>
                <Grid Grid.Column="1" HorizontalAlignment="Right" Visibility="{Binding ComputedVerticalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\ExtendedColumnChooser.xaml;578;18">
                    <Grid.RowSpan>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxg:GridControl.CurrentView).ShowTotalSummary" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxg:VerticalScrollBarRowSpanConverter />
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Grid.RowSpan>
                    <ScrollBar x:Name="PART_VerticalScrollBar" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Right" Maximum="{Binding ScrollableHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Value="{Binding VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" ViewportSize="{Binding ViewportHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\ExtendedColumnChooser.xaml;592;22">
                        <dxg:GridControl.CurrentViewChangedListener>
                            <dxg:VerticalScrollBarBlendCustomizationExtension />
                        </dxg:GridControl.CurrentViewChangedListener>
                        <dxg:GridViewHitInfoBase.HitTestAcceptor>
                            <dxgi:VerticalScrollBarTableViewHitTestAcceptor />
                        </dxg:GridViewHitInfoBase.HitTestAcceptor>
                    </ScrollBar>
                </Grid>
                <Grid x:Name="gridScroll" Margin="{DynamicResource ResourceKey={dxgt:ExtendedColumnChooserThemeKey ResourceKey=HorizontalScrollbarMargin}}" VerticalAlignment="Bottom" Visibility="{Binding Path=(dxg:GridControl.CurrentView).ShowDataNavigator, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\ExtendedColumnChooser.xaml;606;18">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.Row>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxg:GridControl.CurrentView).ShowTotalSummary" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxg:HorizontalScrollBarRowConverter />
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Grid.Row>
                    <Grid.RowSpan>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxg:GridControl.CurrentView).ShowTotalSummary" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxg:HorizontalScrollBarRowSpanConverter />
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Grid.RowSpan>
                    <Grid.ColumnSpan>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dxg:GridControl.CurrentView).ShowTotalSummary" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxg:GridControl.CurrentView).FixedRightContentWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxg:GridControl.CurrentView).ExtendScrollBarToFixedColumns" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxg:HorizontalScrollBarGridColumnSpanConverter />
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Grid.ColumnSpan>
                    <ScrollBar x:Name="PART_HorizontalScrollBar" Maximum="{Binding ScrollableWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Orientation="Horizontal" Value="{Binding HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" ViewportSize="{Binding ViewportWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\ExtendedColumnChooser.xaml;649;22">
                        <dxg:GridViewHitInfoBase.HitTestAcceptor>
                            <dxgi:HorizontalScrollBarTableViewHitTestAcceptor />
                        </dxg:GridViewHitInfoBase.HitTestAcceptor>
                    </ScrollBar>
                </Grid>
                <dxg:FitContentContainer Grid.Column="1" Grid.Row="3">
                    <dxg:FitContentContainer.Visibility>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxg:GridControl.CurrentView).ShowTotalSummary" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxg:GridControl.CurrentView).FixedRightContentWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxg:GridControl.CurrentView).ExtendScrollBarToFixedColumns" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxg:FitContentContainerConverter />
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </dxg:FitContentContainer.Visibility>
                    <dx:DXBorder x:Name="PART_HorizontalScrollCorner" dxg:GridBorderHelper.ShowBorder="{Binding Path=(dxg:GridControl.CurrentView).ShowTotalSummary, RelativeSource={RelativeSource TemplatedParent}}" dxg:GridScrollBarHelper.ExtendScrollBarToFixedColumns="{Binding Path=(dxg:GridControl.CurrentView).ExtendScrollBarToFixedColumns, RelativeSource={RelativeSource TemplatedParent}}" dxg:GridScrollBarHelper.HasFixedRightColumns="False" Style="{DynamicResource {dxgt:ScrollBarThemeKey ResourceKey=ScrollingCornerStyle}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\ExtendedColumnChooser.xaml;674;22" />
                </dxg:FitContentContainer>
            </Grid>
            <dxg:OuterBorderElement x:Name="outerBorder" Grid.Row="1" Grid.RowSpan="2" ShowColumnHeaders="{Binding Path=(dxg:GridControl.CurrentView).ShowColumnHeaders, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource ResourceKey={dxgt:ExtendedColumnChooserThemeKey ResourceKey=OuterBorderElementStyle}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\ExtendedColumnChooser.xaml;681;14" />
            <dxgcore:FocusRectPresenter x:Name="PART_FocusRectPresenter" Grid.RowSpan="4" HorizontalAlignment="Left" VerticalAlignment="Top" View="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" />
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dx:ScrollBarExtensions.ScrollBarMode), RelativeSource={RelativeSource TemplatedParent}}" Value="TouchOverlap">
                <Setter Property="Grid.Visibility" TargetName="gridScroll" Value="{Binding ComputedHorizontalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.CurrentView).ShowDataNavigator, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter Property="Grid.Visibility" TargetName="gridScroll" Value="{Binding ComputedHorizontalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>