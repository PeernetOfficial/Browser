<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxfui="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui" xmlns:dxfuii="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui/internal" xmlns:dxfuit="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui/themekeys" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxcore_unique_xmlns="http://schemas.devexpress.com/winfx/2008/xaml/core">

    

    <Style x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=AddChildSplitButtonPathStyle}" TargetType="{x:Type Path}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Grid\Generic\FilteringUI\FilterEditor.xaml;22;6" /><Setter Property="Data" Value="F1 M 0,0 8,0 4,4 0,0 Z " />
        <Setter Property="Fill" Value="#7B7B7B" cs:id="Setter_0000" />
        <Setter Property="Height" Value="4" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,1,0,0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Stretch" Value="Fill" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Width" Value="8" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" Value="{DynamicResource ResourceKey={dxfuit:FilterEditorThemeKey ResourceKey=AddChildSplitButtonMouseOverFill}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <sys:Double x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=IconButtonWidth}">18</sys:Double>

    <Thickness x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=EditorBorderThickness}">1</Thickness>

    <Thickness x:Key="filterEditorMargin">6,2,6,6</Thickness>

    <Thickness x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemMargin}">0,0,4,0</Thickness>

    <Thickness x:Key="filterEditorRowMargin">0,2</Thickness>

    <Thickness x:Key="filterEditorButtonMargin">0,0,0,-1</Thickness>

    <Style x:Key="filterEditorButtonStyle" TargetType="Button">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Grid\Generic\FilteringUI\FilterEditor.xaml;53;6" /><Setter Property="MaxWidth" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=IconButtonWidth}}" />
        <Setter Property="Margin" Value="{StaticResource filterEditorButtonMargin}" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="removeButtonStyle" BasedOn="{StaticResource filterEditorButtonStyle}" TargetType="Button">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Grid\Generic\FilteringUI\FilterEditor.xaml;59;6" /><Setter Property="ToolTipService.ToolTip">
            <Setter.Value>
                <ToolTip dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;64;18">
                    <StackPanel Orientation="Vertical" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;65;22">
                        <TextBlock FontWeight="Bold" Margin="0,0,0,4" Text="{dxe:EditorStringId FilterToolTipKeysRemove}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;66;26" />
                        <TextBlock Text="{dxe:EditorStringId FilterToolTipNodeRemove}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;69;26" />
                    </StackPanel>
                </ToolTip>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="addChildButtonStyle" BasedOn="{StaticResource filterEditorButtonStyle}" TargetType="Button"><Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Grid\Generic\FilteringUI\FilterEditor.xaml;76;6" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
        </Style.Triggers>
    </Style>

    

    

    <Style x:Key="menuOwner" TargetType="{x:Type FrameworkElement}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Grid\Generic\FilteringUI\FilterEditor.xaml;90;6" /><Setter Property="Focusable" Value="True" />
        <Setter Property="dxb:BarManager.MenuShowMouseButton" Value="LeftButton" />
        <Setter Property="dxb:BarManager.DXContextMenuPlacement" Value="Bottom" />
    </Style>

    <dxfuii:PaletteForegroundConverter x:Key="PaletteConverter" />

    <DataTemplate x:Key="OperandTypeContentTemplate">
        <dxcore_unique_xmlns:DXImage x:Name="PART_OperandType" dxcore_unique_xmlns:WpfSvgPalette.Palette="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}, Converter={StaticResource PaletteConverter}}" Height="10" Margin="6,0,0,0" Source="{Binding Image}" VerticalAlignment="Center" Width="10">
            <dxcore_unique_xmlns:DXImage.Style>
                <Style x:Key="{dxt:DefaultStyleThemeKey FullName=FrameworkElement}" BasedOn="{StaticResource menuOwner}" TargetType="{x:Type FrameworkElement}">
                    <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Grid\Generic\FilteringUI\FilterEditor.xaml;107;18" /><Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    <Setter Property="dxb:BarManager.DXContextMenu">
                        <Setter.Value>
                            <dxb:PopupMenu ItemLinksSource="{Binding Path=(dxfuii:FilterElementHelper.ValueItem).OperandMenuItems, RelativeSource={RelativeSource Self}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;113;30">
                                <dxb:PopupMenu.ItemTemplate>
                                    <DataTemplate>
                                        <dxb:BarButtonItem Command="{Binding Path=Command}" Content="{Binding DisplayText}" CustomGlyphSize="10,10" Glyph="{Binding Image}" GlyphSize="Custom" />
                                    </DataTemplate>
                                </dxb:PopupMenu.ItemTemplate>
                            </dxb:PopupMenu>
                        </Setter.Value>
                    </Setter>
                </Style>
            </dxcore_unique_xmlns:DXImage.Style>
            <dxmvvm:Interaction.Behaviors>
                <dxfui:FilterEditorContextMenuBehavior />
            </dxmvvm:Interaction.Behaviors>
        </dxcore_unique_xmlns:DXImage>
    </DataTemplate>

    <Style x:Key="operandTypeStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Grid\Generic\FilteringUI\FilterEditor.xaml;134;6" /><Setter Property="DataContext" Value="{Binding Path=(dxfuii:FilterElementHelper.ValueItem), RelativeSource={RelativeSource Self}}" />
        <Setter Property="Content" Value="{Binding SelectedOperandMenuItem}" />
        <Setter Property="Margin" Value="0,0,4,0" />
        <Setter Property="ContentTemplate" Value="{StaticResource OperandTypeContentTemplate}" />
    </Style>

    <dxfuii:OperandMenuItemsVisibilityConverter x:Key="OperandMenuItemsVisibilityConverter" />

    <DataTemplate x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorCancelGlyph}">
        <Grid x:Name="Root" MinWidth="16" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;144;10">
            <Path Data="F1 M 0,1 1,0 4,3 7,0 8,1 5,4 8,7 7,8 4,5 1,8 0,7 3,4 0,1 Z " Fill="{TemplateBinding TextElement.Foreground}" Height="8" HorizontalAlignment="Center" SnapsToDevicePixels="True" Stretch="Fill" VerticalAlignment="Center" Width="8" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;145;14" />
        </Grid>
        <DataTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinWidth" TargetName="Root" Value="42" />
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style x:Key="removeOperandButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Grid\Generic\FilteringUI\FilterEditor.xaml;163;6" /><Setter Property="Command" Value="{Binding RemoveCommand}" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Foreground" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=OperatorSelectorForeground}}" />
        <Setter Property="Visibility" Value="{Binding AllowRemoving, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ContentPresenter ContentTemplate="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorCancelGlyph}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;171;22" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="OperandEditorValueTemplate">
        <dxfui:InplaceEditorCell DataContext="{Binding Path=(dxfuii:FilterElementHelper.ValueItem), RelativeSource={RelativeSource Self}}" dxfui:FilterEditorNavigation.Index="{Binding Index}" EditSettings="{Binding EditSettings}" FilterModel="{Binding Path=(dxfuii:FilterElementHelper.FilterModel), RelativeSource={RelativeSource Self}}" Margin="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemMargin}}" Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <dxfui:InplaceEditorCell.Template>
                <ControlTemplate TargetType="dxfui:InplaceEditorCell">
                    <dx:DXBorder Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=ItemCornerRadius}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;186;22">
                        <Grid dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;190;26">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentControl Style="{StaticResource operandTypeStyle}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;196;30">
                                <ContentControl.Visibility>
                                    <MultiBinding Converter="{StaticResource OperandMenuItemsVisibilityConverter}">
                                        <Binding Path="OperandMenuItems" />
                                        <Binding Path="SelectedOperandMenuItem" />
                                    </MultiBinding>
                                </ContentControl.Visibility>
                            </ContentControl>
                            <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Grid.Column="1" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;204;30" />
                            <Button x:Name="RemoveVariadicItemButton" DataContext="{Binding Path=(dxfuii:FilterElementHelper.ValueItem), RelativeSource={RelativeSource Self}}" Grid.Column="2" Style="{StaticResource removeOperandButtonStyle}" Visibility="{DXBinding 'AllowRemoving and !(@p.IsActive) ? $Visibility.Visible : $Visibility.Collapsed'}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;207;30" />
                        </Grid>
                    </dx:DXBorder>
                </ControlTemplate>
            </dxfui:InplaceEditorCell.Template>
        </dxfui:InplaceEditorCell>
    </DataTemplate>

    <DataTemplate x:Key="OperandEditorPropertyTemplate">
        <ContentControl Background="{DynamicResource ResourceKey={dxfuit:FilterEditorThemeKey ResourceKey=PropertySelectorBackground}}" Margin="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemMargin}}" Style="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemStyle}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;220;10">
            <StackPanel DataContext="{Binding Path=(dxfuii:FilterElementHelper.ValueItem), RelativeSource={RelativeSource Self}}" Orientation="Horizontal" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;223;14">
                <ContentControl Style="{StaticResource operandTypeStyle}" TextElement.Foreground="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=PropertySelectorForeground}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;224;18" />
                <dxfui:FilterEditorPropertySelector x:Name="RightPropertySelector" dxfui:FilterEditorNavigation.Index="0" EditValue="{Binding SelectedProperty}" IsEnabled="{DXBinding Expr='Properties.Count gt 0'}" ItemsSource="{Binding Properties}" NullText="{dxe:EditorStringId FilterEmptyPropertyText}" SelectedItem="{Binding SelectedProperty}" Style="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=PropertySelectorStyle}}" />
                <Button x:Name="RemoveVariadicItemButton" Style="{StaticResource removeOperandButtonStyle}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;233;18" />
            </StackPanel>
        </ContentControl>
    </DataTemplate>

    <Style x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=OperandEditorParameterStyle}" BasedOn="{StaticResource menuOwner}" TargetType="{x:Type FrameworkElement}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Grid\Generic\FilteringUI\FilterEditor.xaml;238;6" /><Setter Property="dxb:BarManager.DXContextMenu">
            <Setter.Value>
                <dxmvvm:ValueFactory>
                    <DataTemplate>
                        <dxb:PopupMenu ItemLinksSource="{Binding Path=(dxfuii:FilterElementHelper.ValueItem).Parameters, RelativeSource={RelativeSource Self}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;245;26">
                            <dxb:PopupMenu.ItemTemplate>
                                <DataTemplate>
                                    <dxb:BarButtonItem Command="{Binding Path=(dxfuii:FilterElementHelper.ValueItem).SelectParameterCommand, RelativeSource={RelativeSource Self}}" CommandParameter="{Binding}" Content="{Binding}" />
                                </DataTemplate>
                            </dxb:PopupMenu.ItemTemplate>
                        </dxb:PopupMenu>
                    </DataTemplate>
                </dxmvvm:ValueFactory>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="OperandEditorParameterTemplate">
        <ContentControl Background="{DynamicResource ResourceKey={dxfuit:FilterEditorThemeKey ResourceKey=PropertySelectorBackground}}" Margin="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemMargin}}" Style="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemStyle}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;261;10">
            <StackPanel DataContext="{Binding Path=(dxfuii:FilterElementHelper.ValueItem), RelativeSource={RelativeSource Self}}" Orientation="Horizontal" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;264;14">
                <ContentControl Style="{StaticResource operandTypeStyle}" TextElement.Foreground="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=PropertySelectorForeground}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;265;18" />
                <TextBlock x:Name="PART_Parameter" Foreground="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=PropertySelectorForeground}}" Margin="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemMargin}}" Style="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=OperandEditorParameterStyle}}" Text="{DXBinding 'SelectedParameter ?? $dxe:EditorLocalizer.GetString($dxe:EditorStringId.FilterEmptyParameterText)'}" VerticalAlignment="Center" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;266;18" />
                <Button x:Name="RemoveVariadicItemButton" Style="{StaticResource removeOperandButtonStyle}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;272;18" />
            </StackPanel>
        </ContentControl>
    </DataTemplate>

    <Style x:Key="OperandEditorDateTimeFunctionStyle" BasedOn="{StaticResource menuOwner}" TargetType="{x:Type TextBlock}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Grid\Generic\FilteringUI\FilterEditor.xaml;277;6" /><Setter Property="dxb:BarManager.DXContextMenu">
            <Setter.Value>
                <dxmvvm:ValueFactory>
                    <DataTemplate>
                        <dxb:PopupMenu ItemLinksSource="{Binding Path=(dxfuii:FilterElementHelper.ValueItem).DateTimeFunctions, RelativeSource={RelativeSource Self}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;284;26">
                            <dxb:PopupMenu.ItemTemplate>
                                <DataTemplate>
                                    <dxb:BarButtonItem Command="{Binding Path=(dxfuii:FilterElementHelper.ValueItem).SelectDateTimeFunctionCommand, RelativeSource={RelativeSource Self}}" CommandParameter="{Binding}" Content="{Binding Converter={dxfuii:DateTimeFunctionTypeTextConverter}}" />
                                </DataTemplate>
                            </dxb:PopupMenu.ItemTemplate>
                        </dxb:PopupMenu>
                    </DataTemplate>
                </dxmvvm:ValueFactory>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="OperandEditorLocalDateTimeFunctionTemplate">
        <ContentControl Background="{DynamicResource ResourceKey={dxfuit:FilterEditorThemeKey ResourceKey=PropertySelectorBackground}}" Margin="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemMargin}}" Style="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemStyle}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;300;10">
            <StackPanel DataContext="{Binding Path=(dxfuii:FilterElementHelper.ValueItem), RelativeSource={RelativeSource Self}}" Orientation="Horizontal" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;303;14">
                <ContentControl Style="{StaticResource operandTypeStyle}" TextElement.Foreground="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=PropertySelectorForeground}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;304;18" />
                <TextBlock x:Name="PART_LocalDateTimeFunction" Foreground="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=PropertySelectorForeground}}" Margin="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemMargin}}" Style="{StaticResource OperandEditorDateTimeFunctionStyle}" Text="{Binding SelectedDateTimeFunction, Converter={dxfuii:DateTimeFunctionTypeTextConverter}}" VerticalAlignment="Center" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;305;18" />
                <Button x:Name="RemoveVariadicItemButton" Style="{StaticResource removeOperandButtonStyle}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;311;18" />
            </StackPanel>
        </ContentControl>
    </DataTemplate>

    <dxfui:OperandEditorTemplateSelector x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=OperandEditorTemplateSelector}" LocalDateTimeFunctionTemplate="{StaticResource OperandEditorLocalDateTimeFunctionTemplate}" ParameterTemplate="{StaticResource OperandEditorParameterTemplate}" PropertyTemplate="{StaticResource OperandEditorPropertyTemplate}" ValueTemplate="{StaticResource OperandEditorValueTemplate}" />

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.FilterModelValueItemContentPresenter}" TargetType="{x:Type dxfui:FilterModelValueItemContentPresenter}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Grid\Generic\FilteringUI\FilterEditor.xaml;322;6" /><Setter Property="dxfuii:FilterElementHelper.ValueItem" Value="{Binding}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl Content="{Binding Path=SelectedOperandMenuItem}" ContentTemplateSelector="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=OperandEditorTemplateSelector}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;327;22" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="FilterEditorConstantTemplate" />

    <DataTemplate x:Key="FilterEditorBinaryTemplate">
        <dxfui:FilterModelValueItemContentPresenter Content="{Binding ValueItem}" />
    </DataTemplate>

    <DataTemplate x:Key="FilterEditorTernaryTemplate">
        <StackPanel Orientation="Horizontal" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;340;10">
            <dxfui:FilterModelValueItemContentPresenter Content="{Binding LeftValueItem}" dxfui:FilterEditorNavigation.Index="0" />
            <TextBlock Margin="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemMargin}}" Text="{dxe:EditorStringId FilterClauseBetweenAnd}" VerticalAlignment="Center" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;342;14" />
            <dxfui:FilterModelValueItemContentPresenter Content="{Binding RightValueItem}" dxfui:FilterEditorNavigation.Index="1" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="FilterEditorVariadicItemTemplate">
        <dxfui:FilterModelValueItemContentPresenter Content="{Binding}" dxfui:FilterEditorNavigation.Index="{Binding Index}" />
    </DataTemplate>

    <DataTemplate x:Key="FilterEditorVariadicTemplate">
        <Grid dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;354;10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <ItemsControl x:Name="filterItems" ItemsSource="{Binding Items}" ItemTemplate="{StaticResource FilterEditorVariadicItemTemplate}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;359;14">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel ClipToBounds="True" IsVirtualizing="True" MaxWidth="3000" Orientation="Horizontal" VirtualizationMode="Recycling" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;364;26">
                            <dxmvvm:Interaction.Behaviors>
                                <dxfuii:AttachParentScrollViewerBehavior />
                            </dxmvvm:Interaction.Behaviors>
                        </VirtualizingStackPanel>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.Template>
                    <ControlTemplate TargetType="ItemsControl">
                        <ItemsPresenter dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;377;26" />
                    </ControlTemplate>
                </ItemsControl.Template>
                <dxmvvm:Interaction.Behaviors>
                    <dxfui:FilterEditorVariadicBehavior AddCommand="{Binding AddCommand}" />
                </dxmvvm:Interaction.Behaviors>
            </ItemsControl>
            <Rectangle Focusable="False" HorizontalAlignment="Right" IsHitTestVisible="False" VerticalAlignment="Stretch" Visibility="{Binding ActualWidth, ElementName=filterItems, Converter={dxfuii:ValueEqualsParameterToVisibilityConverter}, ConverterParameter=3000}" Width="40" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;384;14">
                <Rectangle.Fill>
                    <LinearGradientBrush EndPoint="1,0" StartPoint="0,0" cs:id="LinearGradientBrush_0000">
                        <GradientStop Color="Transparent" Offset="0" cs:id="GradientStop_0000" />
                        <GradientStop Color="White" Offset="1" cs:id="GradientStop_0001" />
                    </LinearGradientBrush>
                </Rectangle.Fill>
            </Rectangle>
            <Button x:Name="AddButton" Command="{Binding AddCommand}" Grid.Column="1" Style="{StaticResource addChildButtonStyle}" Template="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=NewOperandButtonControlTemplate}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;403;14">
                <ToolTipService.ToolTip>
                    <ToolTip dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;409;22">
                        <StackPanel Orientation="Vertical" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;410;26">
                            <TextBlock FontWeight="Bold" Margin="0,0,0,4" Text="{dxe:EditorStringId FilterToolTipKeysAdd}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;411;30" />
                            <TextBlock Text="{dxe:EditorStringId FilterToolTipElementAdd}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;414;30" />
                        </StackPanel>
                    </ToolTip>
                </ToolTipService.ToolTip>
            </Button>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="FilterEditorPredefinedFormatConditionTemplate">
        <DataTemplate.Resources>
            <DataTemplate x:Key="valueEditSettingsItemsTemplate">
                <dxe:SpinEditSettings AllowRoundOutOfRangeValue="True" Mask="d" MaskType="Numeric" MaskUseAsDisplayFormat="True" MaxValue="2147483647" MinValue="1" />
                
            </DataTemplate>
            <DataTemplate x:Key="valueEditSettingsPercentTemplate">
                <dxe:SpinEditSettings AllowRoundOutOfRangeValue="True" MaskType="Numeric" MaskUseAsDisplayFormat="True" MaxValue="100" MinValue="0" />
            </DataTemplate>
            <DataTemplate x:Key="valueTypeEditSettingsTemplate">
                <dxe:ComboBoxEditSettings ApplyItemTemplateToSelectedItem="True" IsTextEditable="False">
                    <dxe:ComboBoxEditSettings.ItemTemplate>
                        <DataTemplate>
                            <DataTemplate.Resources>
                                <dxmvvm:ObjectToObjectConverter x:Key="TopBottomValueTypeConverter">
                                    <dxmvvm:MapItem Source="Items" Target="{dxe:EditorStringId TopBottomValueTypeItems}" />
                                    <dxmvvm:MapItem Source="Percent" Target="{dxe:EditorStringId TopBottomValueTypePercent}" />
                                </dxmvvm:ObjectToObjectConverter>
                            </DataTemplate.Resources>
                            <TextBlock Text="{Binding Converter={StaticResource TopBottomValueTypeConverter}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;450;30" />
                        </DataTemplate>
                    </dxe:ComboBoxEditSettings.ItemTemplate>
                    <dxe:ComboBoxEditSettings.ItemsSource>
                        <x:Array Type="{x:Type dxfui:TopBottomValueType}">
                            <dxfui:TopBottomValueType>Items</dxfui:TopBottomValueType>
                            <dxfui:TopBottomValueType>Percent</dxfui:TopBottomValueType>
                        </x:Array>
                    </dxe:ComboBoxEditSettings.ItemsSource>
                </dxe:ComboBoxEditSettings>
            </DataTemplate>
            <dxfuii:FormatConditionValueEditSettingsConverter x:Key="valueEditSettingsConverter" EditSettingsItemTemplate="{StaticResource valueEditSettingsItemsTemplate}" EditSettingsPercentTemplate="{StaticResource valueEditSettingsPercentTemplate}" />
            <dxfuii:FormatConditionValueTypeEditSettingsConverter x:Key="valueTypeEditSettingsConverter" EditSettingsTemplate="{StaticResource valueTypeEditSettingsTemplate}" />
            <Style x:Key="editorCellStyle" TargetType="{x:Type dxfui:InplaceEditorCell}">
                <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Grid\Generic\FilteringUI\FilterEditor.xaml;465;14" /><Setter Property="FilterModel" Value="{Binding Path=(dxfuii:FilterElementHelper.FilterModel), RelativeSource={RelativeSource Self}}" />
                <Setter Property="Margin" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemMargin}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="dxfui:InplaceEditorCell">
                            <dx:DXBorder Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=ItemCornerRadius}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;471;30">
                                <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;475;34" />
                            </dx:DXBorder>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </DataTemplate.Resources>
        <StackPanel Orientation="Horizontal" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;482;10">
            <dxfui:InplaceEditorCell x:Name="PART_Value" dxfui:FilterEditorNavigation.Index="0" EditSettings="{Binding ValueType, Converter={StaticResource valueEditSettingsConverter}}" Style="{StaticResource editorCellStyle}" Value="{Binding Value, Mode=TwoWay, Converter={dxmvvm:TypeCastConverter}}" />
            <dxfui:InplaceEditorCell x:Name="PART_ValueType" dxfui:FilterEditorNavigation.Index="1" EditSettings="{Binding Converter={StaticResource valueTypeEditSettingsConverter}}" Style="{StaticResource editorCellStyle}" Value="{Binding ValueType, Mode=TwoWay}" />
        </StackPanel>
    </DataTemplate>

    <dxfui:OperationModelTemplateSelector x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=OperatorTemplateSelector}" BinaryTemplate="{StaticResource FilterEditorBinaryTemplate}" ConstantTemplate="{StaticResource FilterEditorConstantTemplate}" PredefinedFormatConditionTemplate="{StaticResource FilterEditorPredefinedFormatConditionTemplate}" TernaryTemplate="{StaticResource FilterEditorTernaryTemplate}" VariadicTemplate="{StaticResource FilterEditorVariadicTemplate}" />

    

    

    <ControlTemplate x:Key="propertySelectorPopupContentTemplate">
        <Grid dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;508;10">
            <Grid.Resources>
                <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=RowTemplate, IsThemeIndependent=True}" TargetType="dxg:RowControl">
                    <Grid Margin="1,0,1,0" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;511;22">
                        <dx:DXBorder x:Name="Background" Background="{TemplateBinding Background}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;512;26" />
                        <Grid x:Name="PART_LayoutPanel" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;513;26" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="FadeSelection" Value="True">
                            <Setter Property="Opacity" TargetName="Background" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <dx:DXBorder Background="{DynamicResource ResourceKey={dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=FilterValueContainerTopAreaBackground}}" BorderBrush="{DynamicResource ResourceKey={dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=FilterValueContainerTopAreaBorderColor}}" BorderThickness="0,0,0,1" Visibility="{Binding ShowSearchPanel, Converter={dxmvvm:BooleanToVisibilityConverter}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;528;14">
                <dxg:GridSearchControl Margin="4" View="{Binding ElementName=view}" />
            </dx:DXBorder>
            <dxg:GridControl x:Name="PART_GridControl" Grid.Row="1" MinHeight="50" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;534;14">
                <dxg:GridControl.Columns>
                    <dxg:GridColumn FieldName="ContentString">
                        <dxg:GridColumn.CellTemplate>
                            <DataTemplate>
                                <ContentPresenter Content="{Binding RowData.Row.Content}" ContentTemplateSelector="{Binding DataContext.RowData.Row.CaptionTemplateSelector, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="3" VerticalAlignment="Center" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;541;34" />
                            </DataTemplate>
                        </dxg:GridColumn.CellTemplate>
                    </dxg:GridColumn>
                </dxg:GridControl.Columns>
                <dxg:GridControl.View>
                    <dxg:TreeListView x:Name="view" AutoExpandAllNodes="True" AutoWidth="True" FilterMode="Extended" KeyFieldName="ID" ParentFieldName="ParentID" RowMinHeight="22" SearchDelay="0" ShowColumnHeaders="False" ShowEmptyText="True" ShowExpandButtons="False" ShowHorizontalLines="False" ShowIndicator="False" ShowRootIndent="False" ShowSearchPanelMode="Never" ShowVerticalLines="False" TreeLineStyle="Solid" VerticalScrollbarVisibility="Auto" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;550;22">
                        <dxg:TreeListView.Style>
                            <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.TreeListView}" TargetType="{x:Type dxg:TreeListView}"><Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Grid\Generic\FilteringUI\FilterEditor.xaml;569;30" />
                                <Style.Resources>
                                    <Style x:Key="{dxgt:TableViewThemeKey ResourceKey=NoRecordsControlStyle}" TargetType="{x:Type dxg:NoRecordsControl}">
                                        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Grid\Generic\FilteringUI\FilterEditor.xaml;571;38" /><Setter Property="NoRecordsFoundText" Value="{DXBinding '$dxe:EditorLocalizer.GetString($dxe:EditorStringId.FilterNoPropertiesFoundText)'}" />
                                    </Style>
                                </Style.Resources>
                                <Style.Triggers>
                                    <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                                        <Setter Property="RowMinHeight" Value="42" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </dxg:TreeListView.Style>
                    </dxg:TreeListView>
                </dxg:GridControl.View>
            </dxg:GridControl>
        </Grid>
    </ControlTemplate>

    <Style x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=PropertySelectorStyle}" TargetType="dxfui:FilterEditorPropertySelector">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Grid\Generic\FilteringUI\FilterEditor.xaml;588;6" /><Setter Property="AutoPopulateColumns" Value="False" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="PopupContentTemplate" Value="{StaticResource propertySelectorPopupContentTemplate}" />
        <Setter Property="FilterCondition" Value="Contains" />
        <Setter Property="Foreground" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=PropertySelectorForeground}}" />
        <Setter Property="IsTextEditable" Value="False" />
        <Setter Property="ShowBorder" Value="False" />
        <Setter Property="ShowEditorButtons" Value="False" />
        <Setter Property="PopupMinHeight" Value="{x:Static sys:Double.NaN}" />
        <Setter Property="PopupMaxHeight" Value="300" />
        <Setter Property="ShowSizeGrip" Value="False" />
        <Setter Property="IncrementalSearch" Value="False" />
        <Setter Property="AllowSpinOnMouseWheel" Value="False" />
        <Setter Property="AllowUpdateTwoWayBoundPropertiesOnSynchronization" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxfui:FilterEditorPropertySelector}">
                    <Grid dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;606;22">
                        <TextBlock Text="{TemplateBinding NullText}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="{Binding EditValue, Converter={dx:NullableToVisibilityConverter Invert=True}, RelativeSource={RelativeSource TemplatedParent}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;607;26" />
                        <ContentPresenter Content="{Binding Path=EditValue.Content, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplateSelector="{Binding Path=EditValue.SelectedCaptionTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="{Binding Path=EditValue, Converter={dx:NullableToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;610;26" />
                        <Grid.Style>
                            <Style x:Key="{dxt:DefaultStyleThemeKey FullName=FrameworkElement}" TargetType="{x:Type FrameworkElement}">
                                <Style.Setters><Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Grid\Generic\FilteringUI\FilterEditor.xaml;615;30" />
                                    <Setter Property="Margin" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=PropertySelectorContentMargin}}" />
                                </Style.Setters>
                                <Style.Triggers>
                                    <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                                        <Setter Property="Margin" Value="13,14,13,13" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    

    

    <ControlTemplate x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=AddButtonControlTemplate}" TargetType="Button">
        <dxcore_unique_xmlns:DXImage x:Name="image" Source="{dxfui:FilterImageSource Name=Add_Inactive}" />
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Source" TargetName="image" Value="{dxfui:FilterImageSource Name=Add_Active}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=NewOperandButtonControlTemplate}" TargetType="Button">
        <dx:DXBorder Background="Transparent" MinWidth="16" cs:id="Border_0000" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;648;10">
            <Path dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;651;14">
                <Path.Style>
                    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=Path}" TargetType="{x:Type Path}">
                        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Grid\Generic\FilteringUI\FilterEditor.xaml;653;22" /><Setter Property="Data" Value="F1 M 0,3 3,3 3,0 5,0 5,3 8,3 8,5 5,5 5,8 3,8 3,5 0,5 0,3 Z " />
                        <Setter Property="Fill" Value="#7B7B7B" cs:id="Setter_0000" />
                        <Setter Property="Height" Value="8" />
                        <Setter Property="HorizontalAlignment" Value="Center" />
                        <Setter Property="SnapsToDevicePixels" Value="True" />
                        <Setter Property="Stretch" Value="Fill" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="Width" Value="8" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.62" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Path.Style>
            </Path>
        </dx:DXBorder>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=RemoveButtonControlTemplate}" TargetType="Button">
        <dxcore_unique_xmlns:DXImage x:Name="image" Source="{dxfui:FilterImageSource Name=Close_Inactive}" />
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Source" TargetName="image" Value="{dxfui:FilterImageSource Name=Close_Active}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=EditButtonControlTemplate}" TargetType="Button">
        <dxcore_unique_xmlns:DXImage x:Name="image" Source="{dxfui:FilterImageSource Name=Edit_Inactive}" />
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Source" TargetName="image" Value="{dxfui:FilterImageSource Name=Edit_Active}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    

    

    <DataTemplate x:Key="MenuItemTemplate">
        <dxb:BarButtonItem Command="{Binding Command}" Content="{Binding DisplayName}" Glyph="{Binding Icon}" />
    </DataTemplate>

    <DataTemplate x:Key="FormatConditionMenuItemTemplate">
        <dxb:BarButtonItem Command="{Binding Command}" Content="{Binding}" CustomGlyphSize="20,20" GlyphSize="Custom">
            <dxb:BarButtonItem.GlyphTemplate>
                <DataTemplate>
                    <dxg:FormatPreviewControl Content="{Binding FormatCondition.Format}" PreviewString="Aa">
                        <dxg:FormatPreviewControl.SimpleFormatTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding PreviewString, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxg:FormatPreviewControl}}}" TextDecorations="{Binding TextDecorations}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;717;34" />
                            </DataTemplate>
                        </dxg:FormatPreviewControl.SimpleFormatTemplate>
                    </dxg:FormatPreviewControl>
                </DataTemplate>
            </dxb:BarButtonItem.GlyphTemplate>
            <dxb:BarButtonItem.ContentTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;725;22">
                        <dxg:FormatPreviewControl Background="Transparent" Content="{Binding Format}" DataContext="{Binding FormatCondition}" Margin="0,0,2,0" Visibility="{Binding Format.Icon, Converter={dx:NullableToVisibilityConverter}}" cs:id="FormatPreviewControl_0000">
                            <dxg:FormatPreviewControl.Template>
                                <ControlTemplate TargetType="{x:Type dxg:FormatPreviewControl}">
                                    <dxcore_unique_xmlns:DXImage HorizontalAlignment="Center" Source="{Binding Format.Icon, RelativeSource={RelativeSource TemplatedParent}}" Stretch="None" />
                                </ControlTemplate>
                            </dxg:FormatPreviewControl.Template>
                        </dxg:FormatPreviewControl>
                        <TextBlock Text="{Binding DisplayName}" VerticalAlignment="Center" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;740;26" />
                    </StackPanel>
                </DataTemplate>
            </dxb:BarButtonItem.ContentTemplate>
        </dxb:BarButtonItem>
    </DataTemplate>

    <ControlTemplate x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=RowControlTemplate}" TargetType="ContentControl">
        <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;748;10" />
    </ControlTemplate>

    <dxfui:NodeModelTemplateSelector x:Key="FilterEditorNodeTemplateSelector">
        <dxfui:NodeModelTemplateSelector.LeafTemplate>
            <DataTemplate>
                <dxfui:FilterEditorLeafControl Content="{Binding}" HorizontalContentAlignment="Stretch" />
            </DataTemplate>
        </dxfui:NodeModelTemplateSelector.LeafTemplate>
        <dxfui:NodeModelTemplateSelector.GroupTemplate>
            <DataTemplate>
                <dxfui:FilterEditorGroupControl Content="{Binding}" HorizontalContentAlignment="Stretch" />
            </DataTemplate>
        </dxfui:NodeModelTemplateSelector.GroupTemplate>
        <dxfui:NodeModelTemplateSelector.CustomExpressionTemplate>
            <DataTemplate>
                <dxfui:FilterEditorCustomExpressionControl Content="{Binding}" HorizontalContentAlignment="Stretch" />
            </DataTemplate>
        </dxfui:NodeModelTemplateSelector.CustomExpressionTemplate>
    </dxfui:NodeModelTemplateSelector>

    <Style x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemStyle}" TargetType="ContentControl">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Grid\Generic\FilteringUI\FilterEditor.xaml;773;6" /><Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Grid dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;777;22">
                        <dx:DXBorder x:Name="BackgroundBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=ItemCornerRadius}}" TextBlock.Foreground="{TemplateBinding Foreground}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;778;26">
                            <ContentPresenter x:Name="Content" Content="{TemplateBinding Content}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;784;30" />
                        </dx:DXBorder>
                        <dx:DXBorder x:Name="BottomBorder" BorderBrush="{TemplateBinding Background}" BorderThickness="0,0,0,2" CornerRadius="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=ItemCornerRadius}}" IsHitTestVisible="False" Visibility="Collapsed" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;786;26" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.Setters>
                                <Setter Property="Opacity" TargetName="BackgroundBorder" Value="0.62" />
                            </Trigger.Setters>
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=Content.(dxfui:FilterEditorNavigation.IsFocused), RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <DataTrigger.Setters>
                                <Setter Property="Opacity" TargetName="BackgroundBorder" Value="0.62" />
                                <Setter Property="Visibility" TargetName="BottomBorder" Value="Visible" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=LeafTemplate}">
        <Grid Background="Transparent" cs:id="Grid_0000" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;818;10">
            <StackPanel dxfui:FilterEditorNavigation.Node="{Binding}" Margin="{StaticResource filterEditorRowMargin}" MinHeight="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=RowMinHeight}}" Orientation="Horizontal" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;819;14">
                <ContentControl Background="{DynamicResource ResourceKey={dxfuit:FilterEditorThemeKey ResourceKey=PropertySelectorBackground}}" Margin="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemMargin}}" Style="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemStyle}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;823;18">
                    <dxfui:FilterEditorPropertySelector x:Name="PropertySelector" dxfui:FilterEditorNavigation.Index="0" EditValue="{Binding SelectedProperty}" IsEnabled="{DXBinding Expr='Properties.Count gt 0'}" ItemsSource="{Binding Properties}" SelectedItem="{Binding SelectedProperty}" Style="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=PropertySelectorStyle}}" />
                </ContentControl>
                <ContentControl Background="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=OperatorSelectorBackground}}" Foreground="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=OperatorSelectorForeground}}" Margin="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemMargin}}" Style="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemStyle}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;834;18">
                    <StackPanel x:Name="OperatorSelector" dxfui:FilterEditorNavigation.Index="1" Orientation="Horizontal" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;838;22">
                        <StackPanel.Style>
                            <Style x:Key="{dxt:DefaultStyleThemeKey FullName=FrameworkElement}" BasedOn="{StaticResource menuOwner}" TargetType="{x:Type FrameworkElement}">
                                <Style.Resources>
                                    <DataTemplate x:Key="operatorMenuSubItemTemplate">
                                        <dxb:BarSplitButtonItem ActAsDropDown="True" Content="{Binding DisplayName}">
                                            <dxb:PopupMenu ItemLinksSource="{Binding Children}" ItemTemplateSelector="{DynamicResource operatorMenuTemplateSelector}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;848;46" />
                                        </dxb:BarSplitButtonItem>
                                    </DataTemplate>
                                    <dxfui:MenuItemTemplateSelector x:Key="operatorMenuTemplateSelector" Button="{StaticResource MenuItemTemplate}" FormatConditionButton="{StaticResource FormatConditionMenuItemTemplate}" Group="{StaticResource operatorMenuSubItemTemplate}" />
                                </Style.Resources>
                                <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Grid\Generic\FilteringUI\FilterEditor.xaml;842;30" /><Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                <Style.Triggers>
                                    <Trigger Property="dxfui:FilterEditorNavigation.IsFocused" Value="True">
                                        <Setter Property="dxb:BarManager.DXContextMenu">
                                            <Setter.Value>
                                                <dxb:PopupMenu ItemLinksSource="{Binding MultiModel.ItemsMenu}" ItemTemplateSelector="{StaticResource operatorMenuTemplateSelector}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;861;50" />
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <dxmvvm:Interaction.Behaviors>
                            <dxfui:FilterEditorContextMenuBehavior />
                        </dxmvvm:Interaction.Behaviors>
                        <dxg:FormatPreviewControl x:Name="FormatPreviewControl" BorderBrush="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=OperatorSelectorBackground}}" Content="{Binding Format}" CornerRadius="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FormatConditionCornerRadius}}" DataContext="{Binding MultiModel.SelectedItem.FormatCondition}" PreviewString="Aa" Visibility="{Binding Converter={dx:NullableToVisibilityConverter}}" />
                        <dxe:TextEdit EditMode="InplaceInactive" EditValue="{Binding MultiModel.SelectedItem.DisplayName, Mode=OneWay}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;878;26" />
                    </StackPanel>
                </ContentControl>
                <ContentPresenter Content="{Binding MultiModel.Model}" ContentTemplateSelector="{Binding DataContext.MultiModel.ModelTemplateSelector, RelativeSource={RelativeSource Mode=TemplatedParent}}" dxfui:FilterEditorNavigation.Index="2" dxfuii:FilterElementHelper.FilterModel="{Binding}" VerticalAlignment="Stretch" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;881;18" />
                <Button x:Name="RemoveButton" Command="{Binding RemoveCommand}" Margin="4,0,0,0" MinWidth="18" Style="{StaticResource removeButtonStyle}" Template="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=RemoveButtonControlTemplate}}" Visibility="Hidden" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;886;18" />
            </StackPanel>
        </Grid>
        <DataTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsEnabled" SourceName="RemoveButton" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Visibility" TargetName="RemoveButton" Value="Visible" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" TargetName="FormatPreviewControl" Value="12" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter Property="Padding" TargetName="FormatPreviewControl" Value="12" />
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.FilterEditorLeafControl}" TargetType="{x:Type dxfui:FilterEditorLeafControl}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Grid\Generic\FilteringUI\FilterEditor.xaml;922;6" /><Setter Property="ContentTemplate" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=LeafTemplate}}" />
        <Setter Property="Template" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=RowControlTemplate}}" />
    </Style>

    <DataTemplate x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=GroupTemplate}">
        <StackPanel Orientation="Vertical" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;928;10">
            <ContentPresenter dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;929;14">
                <ContentPresenter.ContentTemplate>
                    <DataTemplate>
                        <Grid Background="Transparent" cs:id="Grid_0000" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;932;26">
                            <StackPanel dxfui:FilterEditorNavigation.Node="{Binding}" Margin="{StaticResource filterEditorRowMargin}" MinHeight="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=RowMinHeight}}" Orientation="Horizontal" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;933;30">
                                <ContentControl Background="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=GroupOperatorSelectorBackground}}" Foreground="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=GroupOperatorSelectorForeground}}" Margin="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemMargin}}" Style="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemStyle}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;937;34">
                                    <dxe:TextEdit x:Name="OperatorSelector" dxfui:FilterEditorNavigation.Index="0" EditMode="InplaceInactive" EditValue="{Binding GroupOperator.DisplayName, Mode=OneWay}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;941;38">
                                        <dxe:TextEdit.Style>
                                            <Style x:Key="{dxt:DefaultStyleThemeKey FullName=FrameworkElement}" BasedOn="{StaticResource menuOwner}" TargetType="{x:Type FrameworkElement}"><Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Grid\Generic\FilteringUI\FilterEditor.xaml;946;46" />
                                                <Style.Triggers>
                                                    <Trigger Property="dxfui:FilterEditorNavigation.IsFocused" Value="True">
                                                        <Setter Property="dxb:BarManager.DXContextMenu">
                                                            <Setter.Value>
                                                                <dxb:PopupMenu ItemLinksSource="{Binding OperatorTypeMenu}" ItemTemplate="{StaticResource MenuItemTemplate}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;953;66" />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </dxe:TextEdit.Style>
                                        <dxmvvm:Interaction.Behaviors>
                                            <dxfui:FilterEditorContextMenuBehavior />
                                        </dxmvvm:Interaction.Behaviors>
                                    </dxe:TextEdit>
                                </ContentControl>
                                <Button x:Name="AddButton" Command="{Binding AddCommand}" Style="{StaticResource addChildButtonStyle}" Template="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=AddButtonControlTemplate}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;965;34">
                                    <ToolTipService.ToolTip>
                                        <ToolTip dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;970;42">
                                            <StackPanel Orientation="Vertical" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;971;46">
                                                <TextBlock FontWeight="Bold" Margin="0,0,0,4" Text="{dxe:EditorStringId FilterToolTipKeysAdd}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;972;50" />
                                                <TextBlock Text="{dxe:EditorStringId FilterToolTipNodeAdd}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;975;50" />
                                            </StackPanel>
                                        </ToolTip>
                                    </ToolTipService.ToolTip>
                                </Button>
                                <dx:DXBorder x:Name="AddChildSplitButton" Background="Transparent" MinWidth="12" Style="{StaticResource menuOwner}" Visibility="{DXBinding Expr='AddChildMenu.Count gt 0 ? `Visible` : `Collapsed`'}" cs:id="Border_0000" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;980;34">
                                    <dxb:BarManager.DXContextMenu>
                                        <dxb:PopupMenu ItemLinksSource="{Binding AddChildMenu}" ItemTemplate="{StaticResource MenuItemTemplate}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;987;42" />
                                    </dxb:BarManager.DXContextMenu>
                                    <Path Style="{DynamicResource ResourceKey={dxfuit:FilterEditorThemeKey ResourceKey=AddChildSplitButtonPathStyle}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;989;38" />
                                </dx:DXBorder>
                                <Button x:Name="RemoveButton" Command="{Binding RemoveCommand}" Margin="4,0,0,0" MinWidth="18" Style="{StaticResource removeButtonStyle}" Template="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=RemoveButtonControlTemplate}}" Visibility="Hidden" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;991;34" />
                            </StackPanel>
                        </Grid>
                        <DataTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsEnabled" SourceName="RemoveButton" Value="True" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Visibility" TargetName="RemoveButton" Value="Visible" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ContentPresenter.ContentTemplate>
            </ContentPresenter>
            <ItemsControl ItemsSource="{Binding Children}" ItemTemplateSelector="{StaticResource FilterEditorNodeTemplateSelector}" Margin="24,0,0,0" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;1018;14" />
        </StackPanel>
    </DataTemplate>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.FilterEditorGroupControl}" TargetType="{x:Type dxfui:FilterEditorGroupControl}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Grid\Generic\FilteringUI\FilterEditor.xaml;1024;6" /><Setter Property="ContentTemplate" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=GroupTemplate}}" />
        <Setter Property="Template" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=RowControlTemplate}}" />
    </Style>

    <DataTemplate x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=CustomExpressionNodeBehaviorsTemplate}">
        <ItemsControl dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;1030;10">
            <dxcore_unique_xmlns:DialogService DialogWindowStartupLocation="CenterOwner">
                <dxcore_unique_xmlns:DialogService.DialogStyle>
                    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=Window}" TargetType="{x:Type Window}">
                        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Grid\Generic\FilteringUI\FilterEditor.xaml;1033;22" /><Setter Property="ShowInTaskbar" Value="False" />
                        <Setter Property="WindowStyle" Value="ToolWindow" />
                        <Setter Property="UseLayoutRounding" Value="True" />
                        <Setter Property="Width" Value="600" />
                        <Setter Property="Height" Value="450" />
                    </Style>
                </dxcore_unique_xmlns:DialogService.DialogStyle>
                <dxcore_unique_xmlns:DialogService.ViewTemplate>
                    <DataTemplate>
                        <dxe:ExpressionEditorContainer BindableExpression="{Binding Expression, Mode=OneWayToSource}" CurrentColumnInfo="{Binding Column, Mode=OneTime}" />
                    </DataTemplate>
                </dxcore_unique_xmlns:DialogService.ViewTemplate>
            </dxcore_unique_xmlns:DialogService>
        </ItemsControl>
    </DataTemplate>

    <DataTemplate x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=CustomExpressionTemplate}">
        <Grid Background="Transparent" cs:id="Grid_0000" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;1051;10">
            <StackPanel dxfui:FilterEditorNavigation.Node="{Binding}" dxmvvm:Interaction.BehaviorsTemplate="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=CustomExpressionNodeBehaviorsTemplate}}" Margin="{StaticResource filterEditorRowMargin}" MinHeight="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=RowMinHeight}}" Orientation="Horizontal" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;1052;14">
                <ContentControl BorderBrush="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=InplaceEditorInactiveBorderBrush}}" BorderThickness="1" Style="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemStyle}}" VerticalAlignment="Center" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;1057;18">
                    <dxe:TextEdit x:Name="CustomFilterTextEdit" dxfui:FilterEditorNavigation.Index="0" EditMode="InplaceInactive" EditValue="{Binding FilterText, Mode=OneWay}" IsReadOnly="True" NullText="{dxe:EditorStringId FilterExpressionEmptyValueText}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;1061;22" />
                    <ContentControl.InputBindings>
                        <KeyBinding Command="{Binding ShowExpressionEditorCommand}" Key="Space" />
                        <KeyBinding Command="{Binding ShowExpressionEditorCommand}" Key="Enter" />
                    </ContentControl.InputBindings>
                    <dxmvvm:Interaction.Behaviors>
                        <dxmvvm:EventToCommand Command="{Binding ShowExpressionEditorCommand}" EventName="MouseLeftButtonDown" />
                    </dxmvvm:Interaction.Behaviors>
                </ContentControl>
                <Button x:Name="RemoveButton" Command="{Binding RemoveCommand}" Margin="4,0,0,0" MinWidth="18" Style="{StaticResource removeButtonStyle}" Template="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=RemoveButtonControlTemplate}}" Visibility="Hidden" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;1075;18" />
            </StackPanel>
        </Grid>
        <DataTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsEnabled" SourceName="RemoveButton" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Visibility" TargetName="RemoveButton" Value="Visible" />
                </MultiTrigger.Setters>
            </MultiTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.FilterEditorCustomExpressionControl}" TargetType="{x:Type dxfui:FilterEditorCustomExpressionControl}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Grid\Generic\FilteringUI\FilterEditor.xaml;1101;6" /><Setter Property="ContentTemplate" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=CustomExpressionTemplate}}" />
        <Setter Property="Template" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=RowControlTemplate}}" />
    </Style>

    

    <ControlTemplate x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=ControlTemplate}" TargetType="{x:Type dxfui:FilterEditorControl}">
        <dx:DXBorder Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;1109;10">
            <Grid dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;1112;14">
                <ScrollViewer x:Name="PART_ScrollViewer" Focusable="False" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Visibility="{TemplateBinding AllowEditFilter, Converter={dxmvvm:BooleanToVisibilityConverter}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;1113;18">
                    <ContentPresenter Content="{Binding RootNode, RelativeSource={RelativeSource Mode=TemplatedParent}}" ContentTemplateSelector="{StaticResource FilterEditorNodeTemplateSelector}" Margin="{StaticResource filterEditorMargin}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;1118;22" />
                </ScrollViewer>
                <TextBlock x:Name="PART_Placeholder" HorizontalAlignment="Center" Text="{dxg:GridControlStringIdExtension FilterEditorNotEditableMessage}" VerticalAlignment="Center" Visibility="{TemplateBinding AllowEditFilter, Converter={dxmvvm:BooleanToVisibilityConverter Inverse=True}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;1122;18" />
            </Grid>
        </dx:DXBorder>
    </ControlTemplate>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.FilterEditorControl}" TargetType="{x:Type dxfui:FilterEditorControl}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Grid\Generic\FilteringUI\FilterEditor.xaml;1131;6" /><Setter Property="Template" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=ControlTemplate}}" />
        <Setter Property="Background" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=Background}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=BorderBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=Foreground}}" />
    </Style>

    <DataTemplate x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=InplaceEditorTemplate}">
        <dxfui:FilterValueEditor x:Name="PART_Editor" EditSettings="{Binding EditSettings}" FilterModel="{Binding Model}" NullText="{dxe:EditorStringId FilterEmptyValueText}" />
    </DataTemplate>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.InplaceEditorCell}" TargetType="{x:Type dxfui:InplaceEditorCell}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Grid\Generic\FilteringUI\FilterEditor.xaml;1145;6" /><Setter Property="TextElement.Foreground" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=InplaceEditorInactiveForeground}}" />
        <Setter Property="EditorTemplate" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=InplaceEditorTemplate}}" />
        <Setter Property="MinHeight" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=RowMinHeight}}" />
        <Setter Property="MinWidth" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=InplaceEditorCellMinWidth}}" />
        <Setter Property="Background" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=InplaceEditorInactiveBackground}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=InplaceEditorInactiveBorderBrush}}" />
        <Setter Property="BorderThickness" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=EditorBorderThickness}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxfui:InplaceEditorCell">
                    <dx:DXBorder Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=ItemCornerRadius}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;1156;22">
                        <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;1160;26" />
                    </dx:DXBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="dxfui:FilterEditorNavigation.IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=InplaceEditorActiveBorderBrush}}" />
            </Trigger>
            <Trigger Property="IsActive" Value="True">
                <Setter Property="Background" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=InplaceEditorActiveBackground}}" />
                <Setter Property="TextElement.Foreground" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=InplaceEditorActiveForeground}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=InplaceEditorActiveBorderBrush}}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsActive" Value="False" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Opacity" Value="0.62" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" Value="44" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorStyle}" TargetType="{x:Type dxfui:FilterEditorControl}">
        <Style.Setters><Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Grid\Generic\FilteringUI\FilterEditor.xaml;1189;6" />
            <Setter Property="Context" Value="{Binding Context}" />
            <Setter Property="PropertyName" Value="{Binding PropertyName}" />
            <Setter Property="RespondToContextFiltersChanges" Value="False" />
            <Setter Property="AllowFieldOperand" Value="{Binding AllowFieldOperand}" />
            <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <ItemsControl dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;1198;26">
                            <dxfui:FilterEditorApplyService />
                            <dxmvvm:EventToCommand Command="{DXCommand Execute='@a($dxfui:FilterEditorControl).Focus()'}" Event="Loaded" />
                        </ItemsControl>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <DataTemplate x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorTemplate}">
        <dxfui:FilterEditorControl />
    </DataTemplate>

    <DataTemplate x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorDialogServiceViewTemplate}">
        <DataTemplate.Resources>
            <Style x:Key="{x:Type dxfui:FilterEditorControl}" BasedOn="{StaticResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorStyle}}" TargetType="{x:Type dxfui:FilterEditorControl}"><Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Grid\Generic\FilteringUI\FilterEditor.xaml;1214;14" /></Style>
        </DataTemplate.Resources>
        <ContentPresenter Content="{Binding}" ContentTemplate="{Binding FilterEditorTemplate}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;1218;10" />
    </DataTemplate>

    <DataTemplate x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorDialogServiceTemplate}">
        <ContentControl dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Grid\Generic\FilteringUI\FilterEditor.xaml;1222;10">
            <dxcore_unique_xmlns:DialogService DialogWindowStartupLocation="CenterOwner" ViewTemplate="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorDialogServiceViewTemplate}}">
                <dxcore_unique_xmlns:DialogService.DialogStyle>
                    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=http://schemas.devexpress.com/winfx/2008/xaml/core.ThemedWindow}" TargetType="{x:Type dx:ThemedWindow}">
                        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Grid\Generic\FilteringUI\FilterEditor.xaml;1225;22" /><Setter Property="dxi:ThemedWindowOptions.ShowOverPopups" Value="True" />
                        <Setter Property="ShowInTaskbar" Value="False" />
                        <Setter Property="WindowStyle" Value="ToolWindow" />
                        <Setter Property="ShowIcon" Value="False" />
                        <Setter Property="UseLayoutRounding" Value="True" />
                        <Setter Property="Width" Value="500" />
                        <Setter Property="Height" Value="350" />
                        <Setter Property="MinWidth" Value="500" />
                        <Setter Property="MinHeight" Value="350" />
                    </Style>
                </dxcore_unique_xmlns:DialogService.DialogStyle>
            </dxcore_unique_xmlns:DialogService>
        </ContentControl>
    </DataTemplate>

</ResourceDictionary>