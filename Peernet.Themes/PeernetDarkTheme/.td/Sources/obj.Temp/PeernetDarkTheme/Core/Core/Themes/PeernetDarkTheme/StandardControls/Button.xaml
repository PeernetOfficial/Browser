<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxcore_unique_xmlns="http://schemas.devexpress.com/winfx/2008/xaml/core">

    <ResourceDictionary.MergedDictionaries>
        <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.PeernetDarkTheme.v22.2;component/Core/Core/Themes/UICore.xaml" />
    </ResourceDictionary.MergedDictionaries>

    

    <ControlTemplate x:Key="{dxt:ButtonThemeKey ResourceKey=LightweightTemplate}" TargetType="{x:Type ButtonBase}">
        <dx:DXBorder x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Office2019Black\StandardControls\Button.xaml;17;10">
            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="Core\Core\Themes\Office2019Black\StandardControls\Button.xaml;22;14" />
        </dx:DXBorder>
        <ControlTemplate.Triggers>
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="border" Value="{StaticResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=ButtonOpacity}}" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="true">
                <Setter Property="MinWidth" TargetName="border" Value="44" />
                <Setter Property="MinHeight" TargetName="border" Value="44" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=System.Windows.Controls.Button}" BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Core\Core\Themes\Office2019Black\StandardControls\Button.xaml;89;6" /><Setter Property="Background" Value="#FF444444" cs:id="Setter_0000" x:Uid="@Value=Button.Background" />
        <Setter Property="BorderBrush" Value="#FF686868" cs:id="Setter_0001" x:Uid="@Value=Border" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=Foreground}}" />
        <Setter Property="Padding" Value="11,2,11,2" />
        <Setter Property="Template" Value="{DynamicResource {dxt:ButtonThemeKey ResourceKey=LightweightTemplate}}" />
        <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxt:BrushesThemeKey ResourceKey=ContrastSvgPalette}}" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="14,12,14,12" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="ToggleButton.IsChecked" Value="False" />
                    <Condition Property="IsPressed" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=MouseOverForeground}}" />
            </MultiTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF505050" cs:id="Setter_0007" x:Uid="@Value=HoverBackground" />
                <Setter Property="BorderBrush" Value="#FF686868" cs:id="Setter_0008" x:Uid="@Value=Border" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=CheckedForeground}}" />
                <Setter Property="Background" Value="#FF6A6A6A" cs:id="Setter_0002" x:Uid="@Value=SelectionBackground" />
                <Setter Property="BorderBrush" Value="#FF686868" cs:id="Setter_0003" x:Uid="@Value=Border" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=PressedForeground}}" />
                <Setter Property="Background" Value="#FF6A6A6A" cs:id="Setter_0004" x:Uid="@Value=SelectionBackground" />
                <Setter Property="BorderBrush" Value="#FF686868" cs:id="Setter_0005" x:Uid="@Value=Border" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="#FFB5B5B5" cs:id="Setter_0006" x:Uid="@Value=Focused" />
            </Trigger>
            <Trigger Property="dx:CompatibilityOptions.UseLightweightTemplatesInStandardButtons" Value="false">
                <Setter Property="Template" Value="{DynamicResource {dxt:ButtonThemeKey ResourceKey=ButtonControlTemplate}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=System.Windows.Controls.Primitives.ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="{x:Type ToggleButton}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Core\Core\Themes\Office2019Black\StandardControls\Button.xaml;153;6" /><Setter Property="Background" Value="#FF444444" cs:id="Setter_0000" x:Uid="@Value=Button.Background" />
        <Setter Property="BorderBrush" Value="#FF686868" cs:id="Setter_0001" x:Uid="@Value=Border" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=Foreground}}" cs:id="Setter_0006" />
        <Setter Property="Padding" Value="11,2,11,2" />
        <Setter Property="Template" Value="{DynamicResource {dxt:ButtonThemeKey ResourceKey=LightweightTemplate}}" />
        <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxt:BrushesThemeKey ResourceKey=ContrastSvgPalette}}" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="14,12,14,12" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="ToggleButton.IsChecked" Value="False" />
                    <Condition Property="IsPressed" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=MouseOverForeground}}" cs:id="Setter_0002" />
            </MultiTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF505050" cs:id="Setter_0007" x:Uid="@Value=HoverBackground" />
                <Setter Property="BorderBrush" Value="#FF686868" cs:id="Setter_0008" x:Uid="@Value=Border" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=CheckedForeground}}" cs:id="Setter_0003" />
                <Setter Property="Background" Value="#FF6A6A6A" cs:id="Setter_0005" x:Uid="@Value=SelectionBackground" />
                <Setter Property="BorderBrush" Value="#FF686868" cs:id="Setter_0009" x:Uid="@Value=Border" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=PressedForeground}}" cs:id="Setter_0004" />
                <Setter Property="Background" Value="#FF6A6A6A" cs:id="Setter_0010" x:Uid="@Value=SelectionBackground" />
                <Setter Property="BorderBrush" Value="#FF686868" cs:id="Setter_0011" x:Uid="@Value=Border" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="#FFB5B5B5" cs:id="Setter_0012" x:Uid="@Value=Focused" />
            </Trigger>
            <Trigger Property="dx:CompatibilityOptions.UseLightweightTemplatesInStandardButtons" Value="false">
                <Setter Property="Template" Value="{DynamicResource {dxt:ButtonThemeKey ResourceKey=ButtonBaseControlTemplate}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=System.Windows.Controls.Primitives.RepeatButton}" BasedOn="{StaticResource {x:Type RepeatButton}}" TargetType="{x:Type RepeatButton}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Core\Core\Themes\Office2019Black\StandardControls\Button.xaml;225;6" /><Setter Property="Background" Value="#FF444444" cs:id="Setter_0000" x:Uid="@Value=Button.Background" />
        <Setter Property="BorderBrush" Value="#FF686868" cs:id="Setter_0001" x:Uid="@Value=Border" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=Foreground}}" />
        <Setter Property="Padding" Value="11,2,11,2" />
        <Setter Property="Template" Value="{DynamicResource {dxt:ButtonThemeKey ResourceKey=LightweightTemplate}}" />
        <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxt:BrushesThemeKey ResourceKey=ContrastSvgPalette}}" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="14,12,14,12" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="ToggleButton.IsChecked" Value="False" />
                    <Condition Property="IsPressed" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=MouseOverForeground}}" />
            </MultiTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF505050" cs:id="Setter_0007" x:Uid="@Value=HoverBackground" />
                <Setter Property="BorderBrush" Value="#FF686868" cs:id="Setter_0008" x:Uid="@Value=Border" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=CheckedForeground}}" />
                <Setter Property="Background" Value="#FF6A6A6A" cs:id="Setter_0002" x:Uid="@Value=SelectionBackground" />
                <Setter Property="BorderBrush" Value="#FF686868" cs:id="Setter_0003" x:Uid="@Value=Border" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=PressedForeground}}" />
                <Setter Property="Background" Value="#FF6A6A6A" cs:id="Setter_0004" x:Uid="@Value=SelectionBackground" />
                <Setter Property="BorderBrush" Value="#FF686868" cs:id="Setter_0005" x:Uid="@Value=Border" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="#FFB5B5B5" cs:id="Setter_0006" x:Uid="@Value=Focused" />
            </Trigger>
            <Trigger Property="dx:CompatibilityOptions.UseLightweightTemplatesInStandardButtons" Value="false">
                <Setter Property="Template" Value="{DynamicResource {dxt:ButtonThemeKey ResourceKey=ButtonBaseControlTemplate}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="simpleButtonBaseStyle" TargetType="{x:Type dx:SimpleButton}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Core\Core\Themes\Office2019Black\StandardControls\Button.xaml;289;6" /><Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=Foreground}}" />
        <Setter Property="GlyphToContentOffset" Value="5" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxt:BrushesThemeKey ResourceKey=ContrastSvgPalette}}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DropDownButton}" BasedOn="{StaticResource simpleButtonBaseStyle}" TargetType="{x:Type dx:DropDownButton}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Core\Core\Themes\Office2019Black\StandardControls\Button.xaml;299;6" /><Setter Property="ArrowAlignment" Value="Right" />
        <Setter Property="ArrowPadding" Value="0,3,10,3" />
        
        
        
        <Setter Property="Padding" Value="10,3,10,3" />
        <Setter Property="Template" Value="{DynamicResource {dxt:DropDownButtonThemeKey ResourceKey=AsyncDropDownButtonTemplate}}" />
        
        
        
        <Style.Triggers>
            <Trigger Property="AsyncDisplayMode" Value="None">
                <Setter Property="Template" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=DropDownButtonTemplate}}" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="ArrowPadding" Value="0,13,27,13" />
                <Setter Property="Padding" Value="14,13,14,13" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="ToggleButton.IsChecked" Value="False" />
                    <Condition Property="IsPressed" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=MouseOverForeground}}" />
            </MultiTrigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=CheckedForeground}}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=PressedForeground}}" />
            </Trigger>
            <Trigger Property="ButtonKind" Value="Repeat">
                <Setter Property="ClickMode" Value="Press" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.SplitButton}" BasedOn="{StaticResource simpleButtonBaseStyle}" TargetType="{x:Type dx:SplitButton}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Core\Core\Themes\Office2019Black\StandardControls\Button.xaml;340;6" /><Setter Property="ArrowAlignment" Value="Right" />
        <Setter Property="ArrowPadding" Value="10,3,10,3" />
        
        
        
        <Setter Property="Padding" Value="10,3,10,3" />
        <Setter Property="ArrowBorderThickness" Value="1" />
        <Setter Property="SeparatorThickness" Value="1" />
        <Setter Property="Template" Value="{DynamicResource {dxt:DropDownButtonThemeKey ResourceKey=AsyncSplitButtonTemplate}}" />
        
        
        
        <Style.Triggers>
            <Trigger Property="AsyncDisplayMode" Value="None">
                <Setter Property="Template" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=SplitButtonTemplate}}" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="14,11,14,11" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="ToggleButton.IsChecked" Value="False" />
                    <Condition Property="IsPressed" Value="False" />
                    <Condition Property="IsMouseOverArrow" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=MouseOverForeground}}" />
            </MultiTrigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=CheckedForeground}}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsPressed" Value="True" />
                    <Condition Property="IsMouseOverArrow" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=PressedForeground}}" />
            </MultiTrigger>
            <Trigger Property="ButtonKind" Value="Repeat">
                <Setter Property="ClickMode" Value="Press" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.SimpleButton}" BasedOn="{StaticResource simpleButtonBaseStyle}" TargetType="{x:Type dx:SimpleButton}">
        
        
        
        
        
        
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Core\Core\Themes\Office2019Black\StandardControls\Button.xaml;388;6" /><Setter Property="Padding" Value="10,3,10,3" />
        <Setter Property="Template" Value="{DynamicResource {dxt:ButtonThemeKey ResourceKey=AsyncButtonTemplate}}" />
        
        <Style.Triggers>
            <Trigger Property="AsyncDisplayMode" Value="None">
                <Setter Property="Template" Value="{DynamicResource ResourceKey={dxt:ButtonThemeKey ResourceKey=ButtonControlTemplate}}" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="14,13,14,13" />
            </Trigger>
            <Trigger Property="Content" Value="{x:Null}">
                <Setter Property="Padding" Value="0" />
                <Setter Property="GlyphToContentOffset" Value="0" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="ToggleButton.IsChecked" Value="False" />
                    <Condition Property="IsPressed" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=MouseOverForeground}}" />
            </MultiTrigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=CheckedForeground}}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=PressedForeground}}" />
            </Trigger>
            <Trigger Property="ButtonKind" Value="Repeat">
                <Setter Property="ClickMode" Value="Press" />
            </Trigger>
        </Style.Triggers>
    </Style>

    

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.ThemedWindowDialogButton}" BasedOn="{StaticResource {dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.SimpleButton}}" TargetType="{x:Type dx:ThemedWindowDialogButton}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="Core\Core\Themes\Office2019Black\StandardControls\Button.xaml;433;6" /><Setter Property="MinHeight" Value="22" />
        <Setter Property="MinWidth" Value="70" />
        <Setter Property="Margin" Value="2,0,2,0" />
        <Setter Property="AutomationProperties.AutomationId" Value="{Binding Path=Content, RelativeSource={RelativeSource Self}, Converter={dx:ThemedDialogButtonNameConverter}, FallbackValue={x:Static sys:String.Empty}, TargetNullValue={x:Static sys:String.Empty}}" />
        <Setter Property="AutomationProperties.Name" Value="{Binding Path=Content, RelativeSource={RelativeSource Self}, FallbackValue={x:Static sys:String.Empty}, TargetNullValue={x:Static sys:String.Empty}}" />
        <Setter Property="GlyphHeight" Value="16" />
    </Style>

</ResourceDictionary>