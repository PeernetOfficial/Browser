<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:input="clr-namespace:System.Windows.Input;assembly=PresentationCore"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2019Black.v22.1;component/Core/Core/Themes/Generic/PseudoWindow.xaml"/>
        <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2019Black.v22.1;component/Core/Core/Themes/UICore.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- General -->

    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonGlyph}">
        <Path Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" Style="{StaticResource UIShape.Close}"/>
    </DataTemplate>

    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerRestoreButtonGlyph}">
        <Path Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" Style="{StaticResource UIShape.Restore}"/>
    </DataTemplate>

    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerMinimizeButtonGlyph}">
        <Path Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" Style="{StaticResource UIShape.Minimize}"/>
    </DataTemplate>

    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerMaximizeButtonGlyph}">
        <Path Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" Style="{StaticResource UIShape.Maximize}"/>
    </DataTemplate>

    <!-- Button States -->

    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonBackgroundNormalState}">
        <Border Background="Transparent" cs:id="Border_0000"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonBackgroundNormalState}">
        <Border Background="Transparent" cs:id="Border_0000"/>
    </ControlTemplate>

    <!-- IsMouseOver -->

    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonBackgroundMouseOverState}">
        <Border Background="$Window.HeaderButton.HoverBackground" cs:id="Border_0000"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonBackgroundMouseOverState}">
        <Border x:Name="CloseButtonMouseOverState"
                Background="$Window.CloseButton.HoverBackground"
                cs:id="Border_0000"/>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=ActualRoundCorners, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dx:ThemedWindow}}}" Value="true">
                <Setter Property="CornerRadius"
                        TargetName="CloseButtonMouseOverState"
                        Value="0,7,0,0"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" Value="Maximized">
                <Setter Property="CornerRadius"
                        TargetName="CloseButtonMouseOverState"
                        Value="0,0,0,0"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- IsPressed -->

    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonBackgroundPressedState}">
        <Border Background="$Window.HeaderButton.SelectionBackground" cs:id="Border_0000"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonBackgroundPressedState}">
        <Border x:Name="CloseButtonPressedState"
                Background="$Window.CloseButton.SelectionBackground"
                cs:id="Border_0000"/>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=ActualRoundCorners, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dx:ThemedWindow}}}" Value="true">
                <Setter Property="CornerRadius"
                        TargetName="CloseButtonPressedState"
                        Value="0,7,0,0"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" Value="Maximized">
                <Setter Property="CornerRadius"
                        TargetName="CloseButtonPressedState"
                        Value="0,0,0,0"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>